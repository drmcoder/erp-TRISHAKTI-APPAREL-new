rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // TSA Production System Rules
    
    // Cutting Droplets - Management only can create
    match /cuttingDroplets/{dropletId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        (request.auth.token.role == 'manager' || request.auth.token.role == 'supervisor');
      allow delete: if request.auth != null && request.auth.token.role == 'manager';
    }
    
    // Production Bundles - Supervisors can assign, operators can read
    match /productionBundles/{bundleId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && 
        request.auth.token.role in ['manager', 'supervisor'];
      allow delete: if request.auth != null && request.auth.token.role == 'manager';
    }
    
    // Operator Work Sessions - Operators can create their own, supervisors can read all
    match /operatorWorkSessions/{sessionId} {
      allow read: if request.auth != null && 
        (resource.data.operatorId == request.auth.uid || 
         request.auth.token.role in ['supervisor', 'manager']);
      allow create, update: if request.auth != null && 
        (request.auth.uid == resource.data.operatorId || 
         request.auth.token.role in ['supervisor', 'manager']);
      allow delete: if request.auth != null && request.auth.token.role == 'manager';
    }
    
    // Production Lots - Management and supervisors
    match /productionLots/{lotId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && 
        request.auth.token.role in ['manager', 'supervisor'];
    }
    
    // Legacy collections - keep existing permissions
    match /operators/{operatorId} {
      allow read, write: if request.auth != null;
    }
    
    match /supervisors/{supervisorId} {
      allow read, write: if request.auth != null;
    }
    
    match /bundles/{bundleId} {
      allow read, write: if request.auth != null;
    }
    
    match /workAssignments/{assignmentId} {
      allow read, write: if request.auth != null;
    }
    
    match /workItems/{itemId} {
      allow read, write: if request.auth != null;
    }
    
    match /wipEntries/{wipId} {
      allow read, write: if request.auth != null;
    }
    
    match /qualityIssues/{issueId} {
      allow read, write: if request.auth != null;
    }
    
    match /operatorEarnings/{earningId} {
      allow read, write: if request.auth != null;
    }
    
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null;
    }
    
    match /systemSettings/{settingId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.role == 'manager';
    }
    
    // Development fallback - remove in production
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}