const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index.B3OoR7j1.js","assets/query-vendor.DpsghfSz.js","assets/react-vendor.CfKEcsXX.js","assets/ui-vendor.D5U9TC-3.js","assets/firebase-vendor.D8xw0AXf.js","assets/utils-vendor.B0NEtgzl.js","assets/index.CZ3Rcx0c.css"])))=>i.map(i=>d[i]);
import{h as u,g as m,_ as v}from"./index.B3OoR7j1.js";import{e as h,q as y,g as f,l as A,h as P,d as O,u as w,T as p,c as T,s as N}from"./firebase-vendor.D8xw0AXf.js";import"./query-vendor.DpsghfSz.js";import"./react-vendor.CfKEcsXX.js";import"./ui-vendor.D5U9TC-3.js";import"./utils-vendor.B0NEtgzl.js";class U{static async getAvailableOperationsForOperator(t,r){try{const a=h(u,m.BUNDLE_OPERATIONS),o=h(u,m.PRODUCTION_BUNDLES),e=y(a,f("status","==","pending"),f("machineType","==",r),A(20)),n=await P(e),s=[];for(const i of n.docs){const g={id:i.id,...i.data()};if(g.assignedOperatorId!==null&&g.assignedOperatorId!==void 0)continue;const d=y(o,f("id","==",g.bundleId)),c=await P(d);if(!c.empty){const b=c.docs[0].data();s.push({...g,bundleInfo:b})}}return{success:!0,data:s}}catch(a){return console.error("Failed to get available operations:",a),{success:!1,error:"Failed to fetch available operations"}}}static async selfAssignOperation(t,r,a){try{const o=O(u,m.BUNDLE_OPERATIONS,a);await w(o,{assignedOperatorId:t,assignedOperatorName:r,assignedAt:p.now(),status:"assigned",updatedAt:p.now()});const e=h(u,m.BUNDLE_OPERATIONS),n=y(e,f("__name__","==",a)),s=await P(n);let i="Unknown Operation";return s.empty||(i=s.docs[0].data().name||"Unknown Operation"),{success:!0,data:{operatorId:t,operatorName:r,operationId:a,operationName:i,assignedAt:new Date}}}catch(o){return console.error("Self-assignment failed:",o),{success:!1,error:"Self-assignment failed"}}}static async submitPartsComplaint(t){try{const r=h(u,m.PARTS_COMPLAINTS),a={...t,reportedBy:"current_operator",reportedByName:"Current Operator",reportedAt:new Date,status:"reported",replacedParts:[],resolution:"parts_replaced",createdAt:p.now(),updatedAt:p.now()};return{success:!0,data:{id:(await T(r,a)).id,...a}}}catch(r){return console.error("Failed to submit parts complaint:",r),{success:!1,error:"Failed to submit complaint"}}}static async getPartsComplaints(t){try{const r=h(u,m.PARTS_COMPLAINTS);let a;return t?a=y(r,f("supervisorId","==",t)):a=y(r,f("status","in",["reported","acknowledged","replacing"])),{success:!0,data:(await P(a)).docs.map(n=>({id:n.id,...n.data()}))}}catch(r){return console.error("Failed to get parts complaints:",r),{success:!1,error:"Failed to fetch parts complaints"}}}static async updateComplaintStatus(t,r,a){try{const o=O(u,m.PARTS_COMPLAINTS,t),e={status:r,updatedAt:p.now()};return a&&(e.supervisorNotes=a),e[`${r}At`]=p.now(),await w(o,e),{success:!0}}catch(o){return console.error("Failed to update complaint status:",o),{success:!1,error:"Failed to update complaint status"}}}static async getPendingOperations(t){try{const r=h(u,m.BUNDLE_OPERATIONS),a=h(u,m.PRODUCTION_BUNDLES);let o;t?.machineType?o=y(r,f("status","==","pending"),f("machineType","==",t.machineType),A(t?.limit||50)):o=y(r,f("status","==","pending"),A(t?.limit||50));const e=await P(o);console.log("üîç Firebase getPendingOperations - operations count:",e.docs.length);const n=[];for(const s of e.docs){const i={id:s.id,...s.data()},g=y(a,f("id","==",i.bundleId)),d=await P(g);if(!d.empty){const c=d.docs[0].data();if(t?.priority&&c.priority!==t.priority||t?.articleNumber&&c.articleNumber!==t.articleNumber)continue;n.push({...i,bundleInfo:c})}}return{success:!0,data:n}}catch(r){return console.error("Failed to get pending operations:",r),{success:!1,error:"Failed to fetch pending operations"}}}static async getAvailableOperators(){try{const{operatorService:t}=await v(async()=>{const{operatorService:o}=await import("./index.B3OoR7j1.js").then(e=>e.P);return{operatorService:o}},__vite__mapDeps([0,1,2,3,4,5,6])),r=await t.getAllOperators();if(r.success&&r.data){console.log("üîç Raw operators from Firebase:",r.data);const o=r.data.map(e=>{const n={id:e.id||"unknown",name:e.name||"Unknown Operator",machineType:e.primaryMachine||e.machineTypes?.[0]||"overlock",efficiency:e.averageEfficiency||85,currentWorkload:e.currentAssignments?.length||0,experience:e.skillLevel||"intermediate",specialties:e.machineTypes||[],status:e.isActive?"active":"offline"};return console.log("üîÑ Transformed operator:",n),n});return console.log("‚úÖ Final operator profiles:",o),{success:!0,data:o}}console.log("‚ö†Ô∏è No operators found in Firebase, creating sample operators..."),await this.createSampleOperators();const a=await t.getAllOperators();return a.success&&a.data?{success:!0,data:a.data.map(e=>({id:e.id||"unknown",name:e.name||"Unknown Operator",machineType:e.primaryMachine||e.machineTypes?.[0]||"overlock",efficiency:e.averageEfficiency||85,currentWorkload:e.currentAssignments?.length||0,experience:e.skillLevel||"intermediate",specialties:e.machineTypes||[],status:e.isActive?"active":"offline"}))}:{success:!0,data:[]}}catch(t){return console.error("Failed to get operators:",t),{success:!1,error:"Failed to fetch operators"}}}static async autoSmartAssign(t,r){try{return await new Promise(o=>setTimeout(o,2e3)),{success:!0,data:t.map((o,e)=>({operatorId:r[e%r.length].id,operatorName:r[e%r.length].name,operationId:o,operationName:`Operation ${e+1}`,assignedAt:new Date}))}}catch(a){return console.error("Auto smart assignment failed:",a),{success:!1,error:"Auto assignment failed"}}}static async bulkBatchAssign(t,r){try{return await new Promise(o=>setTimeout(o,1500)),{success:!0,data:[]}}catch(a){return console.error("Bulk assignment failed:",a),{success:!1,error:"Bulk assignment failed"}}}static async getBundleTrackingData(t){try{const r=h(u,m.BUNDLE_TRACKING);let a;t?.status?a=y(r,f("status","==",t.status)):t?.lot?a=y(r,f("lotNumber","==",t.lot)):t?.batch?a=y(r,f("batchNumber","==",t.batch)):a=y(r);let e=(await P(a)).docs.map(n=>({id:n.id,...n.data()}));if(t?.timeframe){const n=new Date;let s;switch(t.timeframe){case"today":s=new Date(n.getFullYear(),n.getMonth(),n.getDate());break;case"week":s=new Date(n.getTime()-10080*60*1e3);break;case"month":s=new Date(n.getFullYear(),n.getMonth(),1);break;default:s=new Date(0)}e=e.filter(i=>(i.createdAt instanceof Date?i.createdAt:new Date(i.createdAt))>=s)}return{success:!0,data:e}}catch(r){return console.error("Failed to get bundle tracking data:",r),{success:!1,error:"Failed to fetch tracking data"}}}static async updateBundleStatus(t,r,a){try{const o=O(u,m.BUNDLE_TRACKING,t),e={status:r,updatedAt:p.now()};return a&&(e.currentOperatorId=a),e[`${r}At`]=p.now(),await w(o,e),{success:!0}}catch(o){return console.error("Failed to update bundle status:",o),{success:!1,error:"Failed to update bundle status"}}}static async createSampleBundleOperations(){try{console.log("üîß Creating sample bundle operations for drag & drop assignment...");const t=h(u,m.BUNDLE_OPERATIONS),r=[{bundleId:"BUNDLE-001",bundleNumber:"TSA-B-001",operationId:"cutting",operationName:"Cutting",operationNepali:"‡§ï‡§æ‡§ü‡•ç‡§®‡•á",machineType:"cutting_machine",status:"pending",assignedOperatorId:null,pieces:50,completedPieces:0,pricePerPiece:2.5,estimatedMinutes:100,createdAt:N(),updatedAt:N()},{bundleId:"BUNDLE-001",bundleNumber:"TSA-B-001",operationId:"single_needle",operationName:"Single Needle Sewing",operationNepali:"‡§∏‡§ø‡§Ç‡§ó‡§≤ ‡§∏‡•Å‡§à ‡§∏‡§ø‡§≤‡§æ‡§à",machineType:"single_needle",status:"pending",assignedOperatorId:null,pieces:50,completedPieces:0,pricePerPiece:3,estimatedMinutes:150,createdAt:N(),updatedAt:N()},{bundleId:"BUNDLE-002",bundleNumber:"TSA-B-002",operationId:"overlock",operationName:"Overlock",operationNepali:"‡§ì‡§≠‡§∞‡§≤‡§ï",machineType:"overlock_machine",status:"pending",assignedOperatorId:null,pieces:75,completedPieces:0,pricePerPiece:2,estimatedMinutes:120,createdAt:N(),updatedAt:N()},{bundleId:"BUNDLE-003",bundleNumber:"TSA-B-003",operationId:"button_hole",operationName:"Button Hole",operationNepali:"‡§¨‡§ü‡§® ‡§π‡•ã‡§≤",machineType:"button_hole_machine",status:"pending",assignedOperatorId:null,pieces:30,completedPieces:0,pricePerPiece:1.5,estimatedMinutes:60,createdAt:N(),updatedAt:N()}];for(const a of r)await T(t,a),console.log(`‚úÖ Created bundle operation: ${a.operationName} for ${a.bundleNumber}`);return console.log(`üéâ Created ${r.length} sample bundle operations!`),{success:!0}}catch(t){return console.error("Failed to create sample bundle operations:",t),{success:!1,error:"Failed to create sample operations"}}}static async createSampleData(){try{console.log("üîß Creating sample bundle data for development...");const t=h(u,m.PRODUCTION_BUNDLES),r=h(u,m.BUNDLE_OPERATIONS),a=[{id:"bundle_1",bundleNumber:"BND-3233-M-001",articleNumber:"3233",articleStyle:"Adult T-shirt",size:"M",quantity:50,priority:"normal",batchNumber:"B0001",dueDate:new Date(Date.now()+4320*60*1e3),createdAt:p.now(),updatedAt:p.now()},{id:"bundle_2",bundleNumber:"BND-3233-L-002",articleNumber:"3233",articleStyle:"Adult T-shirt",size:"L",quantity:50,priority:"high",batchNumber:"B0001",dueDate:new Date(Date.now()+2880*60*1e3),createdAt:p.now(),updatedAt:p.now()}],o=[{id:"op_1",bundleId:"bundle_1",operationId:"shoulder_join",name:"Shoulder Join",nameNepali:"‡§ï‡§æ‡§Å‡§ß ‡§ú‡•ã‡§°‡•ç‡§®‡•á",machineType:"overlock",sequenceOrder:1,pricePerPiece:2.5,smvMinutes:4.5,status:"pending",prerequisites:[],isOptional:!1,qualityCheckRequired:!0,defectTolerance:5,assignedOperatorId:null,createdAt:p.now(),updatedAt:p.now()},{id:"op_2",bundleId:"bundle_1",operationId:"side_seam",name:"Side Seam",nameNepali:"‡§õ‡•á‡§â ‡§∏‡§ø‡§≤‡§æ‡§à",machineType:"singleNeedle",sequenceOrder:2,pricePerPiece:3,smvMinutes:5,status:"pending",prerequisites:["shoulder_join"],isOptional:!1,qualityCheckRequired:!0,defectTolerance:3,assignedOperatorId:null,createdAt:p.now(),updatedAt:p.now()},{id:"op_3",bundleId:"bundle_2",operationId:"sleeve_attach",name:"Sleeve Attach",nameNepali:"‡§Ü‡§∏‡•ç‡§§‡•Ä‡§® ‡§≤‡§ó‡§æ‡§â‡§®‡•á",machineType:"overlock",sequenceOrder:3,pricePerPiece:4,smvMinutes:7,status:"pending",prerequisites:["side_seam"],isOptional:!1,qualityCheckRequired:!0,defectTolerance:2,assignedOperatorId:null,createdAt:p.now(),updatedAt:p.now()}];for(const e of a)await T(t,e),console.log(`‚úÖ Created bundle: ${e.bundleNumber}`);for(const e of o)await T(r,e),console.log(`‚úÖ Created operation: ${e.name}`);return console.log("üéâ Sample data created successfully!"),{success:!0}}catch(t){return console.error("Failed to create sample data:",t),{success:!1,error:"Failed to create sample data"}}}static async createSampleOperators(){try{console.log("üîß Creating sample operators for development...");const{operatorService:t}=await v(async()=>{const{operatorService:a}=await import("./index.B3OoR7j1.js").then(o=>o.P);return{operatorService:a}},__vite__mapDeps([0,1,2,3,4,5,6])),r=[{username:"maya_patel",name:"Maya Patel",employeeId:"TSA-EMP-0001",email:"maya.patel@tsa.com",phone:"+977-9841234567",primaryMachine:"overlock",machineTypes:["overlock","singleNeedle"],skillLevel:"expert",shift:"morning",address:"Kathmandu, Nepal"},{username:"priya_singh",name:"Priya Singh",employeeId:"TSA-EMP-0002",email:"priya.singh@tsa.com",phone:"+977-9841234568",primaryMachine:"singleNeedle",machineTypes:["singleNeedle","flatlock"],skillLevel:"intermediate",shift:"morning",address:"Lalitpur, Nepal"},{username:"rajesh_kumar",name:"Rajesh Kumar",employeeId:"TSA-EMP-0003",email:"rajesh.kumar@tsa.com",phone:"+977-9841234569",primaryMachine:"overlock",machineTypes:["overlock"],skillLevel:"expert",shift:"afternoon",address:"Bhaktapur, Nepal"},{username:"sita_sharma",name:"Sita Sharma",employeeId:"TSA-EMP-0004",email:"sita.sharma@tsa.com",phone:"+977-9841234570",primaryMachine:"cutting",machineTypes:["cutting","manual"],skillLevel:"intermediate",shift:"morning",address:"Pokhara, Nepal"}];for(const a of r){const o=await t.createOperator(a);o.success?console.log(`‚úÖ Created operator: ${a.name}`):console.error(`‚ùå Failed to create operator ${a.name}:`,o.error)}return console.log("üéâ Sample operators created successfully!"),{success:!0}}catch(t){return console.error("Failed to create sample operators:",t),{success:!1,error:"Failed to create sample operators"}}}static async generateProductionLotsFromWIP(){try{console.log("üîß Enhanced Bundle Service: Generating production lots from WIP entries...");const t=h(u,m.PRODUCTION_BUNDLES);console.log("üîç Checking collection:",m.PRODUCTION_BUNDLES);const r=await P(t);if(console.log(`üìä Total documents in ${m.PRODUCTION_BUNDLES}: ${r.size}`),r.empty)return console.log("‚ùå No WIP entries found at all in the collection"),{success:!0,message:"No WIP entries found in collection",data:{generated:0}};const a=r.docs.filter(d=>{const c=d.data(),b=c.processed===!0;return console.log(`üìã Doc ${d.id}: processed=${c.processed}, bundleNumber=${c.bundleNumber}`),!b});console.log(`üîç Found ${a.length} unprocessed WIP entries out of ${r.size} total`);const o={docs:a,empty:a.length===0,size:a.length};if(o.empty)return console.log("‚ö†Ô∏è No unprocessed WIP entries found"),{success:!0,message:"No unprocessed WIP entries found",data:{generated:0}};console.log(`üì¶ Found ${o.docs.length} WIP entries to process`);const e=h(u,"sewing_templates"),n=await P(e);let s=[];if(!n.empty)s=n.docs.map(d=>({id:d.id,...d.data()})),console.log(`‚úÖ Found ${s.length} sewing templates`);else{console.log("üîß Creating default T-shirt sewing template...");const d={templateName:"Basic T-Shirt Template",templateCode:"TSHIRT-001",category:"tshirt",operations:[{id:"op_shoulder_join",operation:"Shoulder Join",operationNepali:"‡§ï‡§æ‡§Å‡§ß ‡§ú‡•ã‡§°‡•ç‡§®‡•á",machineType:"overlock",smvMinutes:1.5,pricePerPiece:1.5,requiredSkill:"basic",stepNumber:1},{id:"op_side_seam",operation:"Side Seam",operationNepali:"‡§õ‡•á‡§â‡§ï‡•ã ‡§∏‡§ø‡§≤‡§æ‡§à",machineType:"overlock",smvMinutes:2,pricePerPiece:2,requiredSkill:"basic",stepNumber:2},{id:"op_sleeve_attach",operation:"Sleeve Attach",operationNepali:"‡§¨‡§æ‡§π‡•Å‡§≤‡§æ ‡§ú‡•ã‡§°‡•ç‡§®‡•á",machineType:"overlock",smvMinutes:3,pricePerPiece:2.5,requiredSkill:"intermediate",stepNumber:3},{id:"op_neckband",operation:"Neckband Attach",operationNepali:"‡§ò‡§æ‡§Å‡§ü‡•Ä‡§ï‡•ã ‡§™‡§ü‡•ç‡§ü‡•Ä",machineType:"single_needle",smvMinutes:4,pricePerPiece:3,requiredSkill:"intermediate",stepNumber:4},{id:"op_hem_bottom",operation:"Bottom Hemming",operationNepali:"‡§§‡§≤‡•ç‡§≤‡•ã ‡§ï‡§ø‡§®‡§æ‡§∞‡§æ",machineType:"single_needle",smvMinutes:2.5,pricePerPiece:2,requiredSkill:"basic",stepNumber:5}],totalSmv:13,totalPricePerPiece:11,complexityLevel:"medium",version:1,isActive:!0,createdAt:N(),createdBy:"system"};s=[{id:(await T(e,d)).id,...d}],console.log("‚úÖ Created default T-shirt template")}const i=h(u,"production_lots");let g=0;for(const d of o.docs){const c=d.data();console.log(`üîÑ Processing WIP entry: ${c.bundleNumber}`);const b=s[0];if(!b){console.log(`‚ö†Ô∏è No template found for WIP entry ${c.bundleNumber}`);continue}const D={lotNumber:c.bundleNumber||`LOT-${Date.now()}`,articleNumber:c.articleNumber||"ART-000",articleName:c.articleDescription||c.description||"Basic Article",garmentType:b.category||"tshirt",totalPieces:c.quantity||50,colorSizeBreakdown:c.colorSizeBreakdown||[{color:c.color||"White",sizes:[{size:"S",quantity:Math.floor((c.quantity||50)*.2),completedQuantity:0},{size:"M",quantity:Math.floor((c.quantity||50)*.4),completedQuantity:0},{size:"L",quantity:Math.floor((c.quantity||50)*.3),completedQuantity:0},{size:"XL",quantity:Math.floor((c.quantity||50)*.1),completedQuantity:0}],totalPieces:c.quantity||50}],processSteps:b.operations&&Array.isArray(b.operations)?b.operations.map((l,S)=>({id:l.id||l.stepId||`step_${l.stepNumber||S+1}`,stepNumber:l.stepNumber||S+1,operation:l.operation||l.name||"Operation",operationNepali:l.operationNepali||l.nepaliName||"‡§Ö‡§™‡§∞‡•á‡§∂‡§®",machineType:l.machineType||"manual",pricePerPiece:parseFloat(l.pricePerPiece)||0,estimatedMinutes:parseFloat(l.smvMinutes||0)*(c.quantity||50),requiredSkill:l.requiredSkill||"basic",status:"pending",assignedOperators:[],completedPieces:0,dependencies:(l.stepNumber||S+1)>1?[`step_${(l.stepNumber||S+1)-1}`]:[]})):[{id:"step_1",stepNumber:1,operation:"Cutting",operationNepali:"‡§ï‡§æ‡§ü‡•ç‡§®‡•á",machineType:"cutting_machine",pricePerPiece:2,estimatedMinutes:2*(c.quantity||50),requiredSkill:"basic",status:"pending",assignedOperators:[],completedPieces:0,dependencies:[]},{id:"step_2",stepNumber:2,operation:"Single Needle",operationNepali:"‡§∏‡§ø‡§Ç‡§ó‡§≤ ‡§∏‡•Å‡§à",machineType:"single_needle",pricePerPiece:3,estimatedMinutes:5*(c.quantity||50),requiredSkill:"intermediate",status:"pending",assignedOperators:[],completedPieces:0,dependencies:["step_1"]}],currentStep:1,status:"cutting",createdAt:N(),createdBy:"system",wipEntryId:d.id||"",templateId:b.id||"default_template",templateName:b.templateName||"Default Template",dueDate:c.dueDate||new Date(Date.now()+10080*60*1e3),notes:`Generated from WIP entry ${c.bundleNumber||"Unknown"} using template ${b.templateName||"Default"}`},_=l=>{if(l==null)return null;if(Array.isArray(l))return l.map(_);if(typeof l=="object"){const S={};for(const[R,k]of Object.entries(l))k!==void 0&&(S[R]=_(k));return S}return l},I=_(D);console.log(`üîç Validated lot data for ${I.lotNumber}`);const $=await T(i,I);console.log(`‚úÖ Created production lot: ${D.lotNumber}`),await w(O(u,"production_bundles",d.id),{processed:!0,productionLotId:$.id,processedAt:N()}),g++}return console.log(`üéâ Generated ${g} production lots from WIP entries`),{success:!0,message:`Successfully generated ${g} production lots from WIP entries`,data:{generated:g}}}catch(t){return console.error("‚ùå Error generating production lots:",t),{success:!1,error:t instanceof Error?t.message:"Failed to generate production lots"}}}static async getUnassignedBundleOperations(){try{console.log("üîç Fetching unassigned bundle operations from production_lots...");const t=await P(y(h(u,"production_lots"),A(50)));console.log(`üì¶ Found ${t.size} production lots to check`);const r=[];let a=0,o=0;return t.forEach(e=>{const n=e.data();console.log(`üîç Checking lot ${e.id}, status: ${n.status}`),n.processSteps&&Array.isArray(n.processSteps)?(console.log(`‚öôÔ∏è Found ${n.processSteps.length} process steps in lot ${e.id}`),n.processSteps.forEach(s=>{a++,console.log(`üîß Step ${s.operation}: status=${s.status}, assigned operators=${s.assignedOperators?.length||0}`);const i=!s.assignedOperators||s.assignedOperators.length===0,g=s.status==="pending"||!s.status;if(i&&g){const d=n.bundles&&n.bundles[0]?n.bundles[0]:{};r.push({id:s.id||`step-${a}`,operation:s.operation,operationNepali:s.operationNepali||s.operation,machineType:s.machineType||"manual",pricePerPiece:s.pricePerPiece||5,smvMinutes:(s.estimatedMinutes||60)/(d.totalPieces||50),targetPieces:d.totalPieces||50,status:s.status||"pending",assignedOperatorId:null,requiredSkill:s.requiredSkill||"basic",priority:n.priority||"normal",bundleId:n.bundleNumber||e.id,bundleNumber:n.bundleNumber||`LOT-${e.id.substring(0,8)}`,articleNumber:n.articleNumber||"ART001",garmentType:n.garmentType||"Garment",lotNumber:n.lotNumber||e.id,dueDate:n.dueDate}),console.log(`‚úÖ Added unassigned operation: ${s.operation}`)}else o++,console.log(`‚è≠Ô∏è Skipped operation ${s.operation} - ${i?"not pending":"has assigned operators"}`)})):n.bundles&&Array.isArray(n.bundles)?(console.log(`üì¶ Found ${n.bundles.length} bundles in lot ${e.id} (legacy structure)`),n.bundles.forEach(s=>{s.operations&&Array.isArray(s.operations)&&s.operations.forEach(i=>{a++,console.log(`üîß Operation ${i.operation}: status=${i.status}, assigned=${i.assignedOperatorId||"none"}`),!i.assignedOperatorId&&(i.status==="pending"||!i.status)?(r.push({id:i.id||`op-${a}`,operation:i.operation,operationNepali:i.operationNepali||i.operation,machineType:i.machineType,pricePerPiece:i.pricePerPiece||5,smvMinutes:i.smvMinutes||5,targetPieces:i.targetPieces||50,status:i.status||"pending",assignedOperatorId:i.assignedOperatorId,requiredSkill:i.requiredSkill||"basic",priority:s.priority||"normal",bundleId:s.id||s.bundleNumber,bundleNumber:s.bundleNumber,articleNumber:s.articleNumber,garmentType:s.garmentType,lotNumber:n.lotNumber,dueDate:s.dueDate||n.dueDate}),console.log(`‚úÖ Added unassigned operation: ${i.operation}`)):o++})})):console.log(`‚ö†Ô∏è Lot ${e.id} has neither processSteps nor bundles array`)}),console.log(`üìä Summary: Total operations: ${a}, Assigned: ${o}, Unassigned: ${r.length}`),console.log(`‚úÖ Found ${r.length} unassigned operations for drag & drop`),{success:!0,data:r}}catch(t){return console.error("‚ùå Error fetching unassigned bundle operations:",t),{success:!1,error:"Failed to fetch unassigned operations",code:"FETCH_ERROR",data:[]}}}}export{U as EnhancedBundleService,U as default};
