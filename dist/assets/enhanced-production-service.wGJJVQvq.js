import{h as c,s as T,r as w,l as S,o as E}from"./index.B3OoR7j1.js";import{c as k,e as N,s as b,j as g,d as m,w as v,u as y,q as M,g as f,h as R}from"./firebase-vendor.D8xw0AXf.js";const D={polo:{name:"Polo T-Shirt",nameNepali:"पोलो टी-शर्ट",steps:[{stepNumber:1,operation:"Collar Making",operationNepali:"कलर बनाउने",machineType:"single_needle",pricePerPiece:2.5,estimatedMinutes:4,canRunParallel:!0,dependencies:[]},{stepNumber:2,operation:"Placket Making",operationNepali:"प्लेकेट बनाउने",machineType:"single_needle",pricePerPiece:2,estimatedMinutes:3,canRunParallel:!0,dependencies:[]},{stepNumber:3,operation:"Shoulder Join",operationNepali:"काँध जोड्ने",machineType:"overlock",pricePerPiece:1.5,estimatedMinutes:2,canRunParallel:!1,dependencies:[1,2]},{stepNumber:4,operation:"Sleeve Attach",operationNepali:"बाही जोड्ने",machineType:"overlock",pricePerPiece:3,estimatedMinutes:4,canRunParallel:!1,dependencies:[3]},{stepNumber:5,operation:"Top Stitch",operationNepali:"माथिल्लो सिलाई",machineType:"flatlock",pricePerPiece:1,estimatedMinutes:2,canRunParallel:!1,dependencies:[4]},{stepNumber:6,operation:"Side Seam",operationNepali:"छेउको सिलाई",machineType:"overlock",pricePerPiece:2,estimatedMinutes:3,canRunParallel:!1,dependencies:[5]},{stepNumber:7,operation:"Slit Making",operationNepali:"स्लिट बनाउने",machineType:"single_needle",pricePerPiece:1.5,estimatedMinutes:2,canRunParallel:!1,dependencies:[6]},{stepNumber:8,operation:"Bottom Fold",operationNepali:"तलको फोल्ड",machineType:"flatlock",pricePerPiece:1.5,estimatedMinutes:2,canRunParallel:!1,dependencies:[7]},{stepNumber:9,operation:"Finishing",operationNepali:"फिनिशिङ",machineType:"finishing",pricePerPiece:1,estimatedMinutes:1,canRunParallel:!1,dependencies:[8]}]},tshirt:{name:"T-Shirt",nameNepali:"टी-शर्ट",steps:[{stepNumber:1,operation:"Shoulder Join",operationNepali:"काँध जोड्ने",machineType:"overlock",pricePerPiece:1,estimatedMinutes:2,canRunParallel:!1,dependencies:[]},{stepNumber:2,operation:"Sleeve Attach",operationNepali:"बाही जोड्ने",machineType:"overlock",pricePerPiece:2,estimatedMinutes:3,canRunParallel:!1,dependencies:[1]},{stepNumber:3,operation:"Side Seam",operationNepali:"छेउको सिलाई",machineType:"overlock",pricePerPiece:1.5,estimatedMinutes:2.5,canRunParallel:!1,dependencies:[2]},{stepNumber:4,operation:"Bottom Hem",operationNepali:"तलको हेम",machineType:"flatlock",pricePerPiece:1,estimatedMinutes:1.5,canRunParallel:!1,dependencies:[3]},{stepNumber:5,operation:"Finishing",operationNepali:"फिनिशिङ",machineType:"finishing",pricePerPiece:.5,estimatedMinutes:1,canRunParallel:!1,dependencies:[4]}]},shirt:{name:"Shirt",nameNepali:"शर्ट",steps:[{stepNumber:1,operation:"Collar Making",operationNepali:"कलर बनाउने",machineType:"single_needle",pricePerPiece:3,estimatedMinutes:5,canRunParallel:!0,dependencies:[]},{stepNumber:2,operation:"Cuff Making",operationNepali:"कफ बनाउने",machineType:"single_needle",pricePerPiece:2,estimatedMinutes:3,canRunParallel:!0,dependencies:[]},{stepNumber:3,operation:"Shoulder Join",operationNepali:"काँध जोड्ने",machineType:"overlock",pricePerPiece:1.5,estimatedMinutes:3,canRunParallel:!1,dependencies:[1]},{stepNumber:4,operation:"Sleeve Attach",operationNepali:"बाही जोड्ने",machineType:"overlock",pricePerPiece:3.5,estimatedMinutes:5,canRunParallel:!1,dependencies:[2,3]},{stepNumber:5,operation:"Side Seam",operationNepali:"छेउको सिलाई",machineType:"overlock",pricePerPiece:2.5,estimatedMinutes:4,canRunParallel:!1,dependencies:[4]},{stepNumber:6,operation:"Button Hole",operationNepali:"बटन होल",machineType:"buttonhole",pricePerPiece:2,estimatedMinutes:3,canRunParallel:!1,dependencies:[5]},{stepNumber:7,operation:"Button Attach",operationNepali:"बटन जोड्ने",machineType:"single_needle",pricePerPiece:1,estimatedMinutes:2,canRunParallel:!1,dependencies:[6]},{stepNumber:8,operation:"Finishing",operationNepali:"फिनिशिङ",machineType:"finishing",pricePerPiece:1.5,estimatedMinutes:2,canRunParallel:!1,dependencies:[7]}]},pants:{name:"Pants",nameNepali:"प्यान्ट",steps:[{stepNumber:1,operation:"Pocket Making",operationNepali:"पकेट बनाउने",machineType:"single_needle",pricePerPiece:2.5,estimatedMinutes:4,canRunParallel:!0,dependencies:[]},{stepNumber:2,operation:"Waistband Making",operationNepali:"कम्मरब्यान्ड बनाउने",machineType:"single_needle",pricePerPiece:3,estimatedMinutes:5,canRunParallel:!0,dependencies:[]},{stepNumber:3,operation:"Front Join",operationNepali:"अगाडि जोड्ने",machineType:"overlock",pricePerPiece:2,estimatedMinutes:3,canRunParallel:!1,dependencies:[1]},{stepNumber:4,operation:"Back Join",operationNepali:"पछाडि जोड्ने",machineType:"overlock",pricePerPiece:2,estimatedMinutes:3,canRunParallel:!1,dependencies:[1]},{stepNumber:5,operation:"Side Seam",operationNepali:"छेउको सिलाई",machineType:"overlock",pricePerPiece:3,estimatedMinutes:4,canRunParallel:!1,dependencies:[3,4]},{stepNumber:6,operation:"Waistband Attach",operationNepali:"कम्मरब्यान्ड जोड्ने",machineType:"flatlock",pricePerPiece:2.5,estimatedMinutes:4,canRunParallel:!1,dependencies:[2,5]},{stepNumber:7,operation:"Bottom Hem",operationNepali:"तलको हेम",machineType:"flatlock",pricePerPiece:1.5,estimatedMinutes:2,canRunParallel:!1,dependencies:[6]},{stepNumber:8,operation:"Finishing",operationNepali:"फिनिशिङ",machineType:"finishing",pricePerPiece:1,estimatedMinutes:1,canRunParallel:!1,dependencies:[7]}]}};class B{async createCuttingDroplet(i){try{return{id:(await k(N(c,"cuttingDroplets"),{...i,createdAt:b()})).id,...i,createdAt:new Date}}catch(e){throw console.error("Error creating cutting droplet:",e),e}}async createBundlesFromCutting(i){try{const e=await g(m(c,"cuttingDroplets",i));if(!e.exists())throw new Error("Cutting droplet not found");const n={id:e.id,...e.data()},p=[],t=v(c),a=D[n.garmentType];if(!a)throw new Error(`No process template found for ${n.garmentType}`);let r=1;for(const u of n.colorSizeData)for(const o of u.sizes){const h=`${n.lotNumber}-${u.color}-${o.size}-${r}`,s=a.steps.map(l=>({stepNumber:l.stepNumber,operation:l.operation,operationNepali:l.operationNepali,machineType:l.machineType,pricePerPiece:l.pricePerPiece,estimatedMinutes:l.estimatedMinutes,canRunParallel:l.canRunParallel,dependencies:l.dependencies,status:l.dependencies.length===0?"ready":"waiting",completedPieces:0})),P={bundleNumber:h,lotNumber:n.lotNumber,articleNumber:n.articleNumber,color:u.color,size:o.size,pieces:o.pieces,currentStep:1,processSteps:s,status:"ready",assignedOperators:[],createdAt:b()},d=m(N(c,"productionBundles"));t.set(d,P),p.push({id:d.id,...P,createdAt:new Date}),r++}return t.update(m(c,"cuttingDroplets",i),{status:"ready_for_sewing"}),await t.commit(),p}catch(e){throw console.error("Error creating bundles from cutting:",e),e}}async assignBundleStepToOperator(i,e,n,p){try{const t=await g(m(c,"productionBundles",i));if(!t.exists())throw new Error("Bundle not found");const a=t.data(),r=a.processSteps.find(s=>s.stepNumber===e);if(!r)throw new Error("Step not found");if(r.status!=="ready")throw new Error("Step is not ready for assignment");const u={operatorId:n,operatorName:p,bundleId:i,bundleNumber:a.bundleNumber,stepNumber:e,operation:r.operation,machineType:r.machineType,assignedPieces:a.pieces,completedPieces:0,pricePerPiece:r.pricePerPiece,totalEarning:0,workDate:b(),status:"assigned",qualityIssues:[],notes:""},o=await k(N(c,"operatorWorkSessions"),u),h=a.processSteps.map(s=>s.stepNumber===e?{...s,status:"in_progress",assignedOperator:n}:s);return await y(m(c,"productionBundles",i),{processSteps:h,assignedOperators:Array.from(new Set([...a.assignedOperators,n]))}),await T(w(S,`operator_status/${n}`),{status:"working",currentBundle:a.bundleNumber,currentOperation:r.operation,machineType:r.machineType,startTime:Date.now(),lastActivity:Date.now()}),{id:o.id,...u,workDate:new Date}}catch(t){throw console.error("Error assigning bundle step to operator:",t),t}}async completeOperatorWork(i,e,n=""){try{const p=await g(m(c,"operatorWorkSessions",i));if(!p.exists())throw new Error("Work session not found");const t=p.data(),a=e*t.pricePerPiece;await y(m(c,"operatorWorkSessions",i),{completedPieces:e,totalEarning:a,status:e>=t.assignedPieces?"completed":"in_progress",endTime:e>=t.assignedPieces?b():null,notes:n});const r=await g(m(c,"productionBundles",t.bundleId));if(r.exists()){const o=r.data().processSteps.map(s=>{if(s.stepNumber===t.stepNumber){const P=e>=t.assignedPieces;return{...s,completedPieces:e,status:P?"completed":"in_progress",endTime:P?b():s.endTime}}return s}),h=o.map(s=>s.status==="waiting"&&s.dependencies.every(d=>o.find(l=>l.stepNumber===d)?.status==="completed")?{...s,status:"ready"}:s);await y(m(c,"productionBundles",t.bundleId),{processSteps:h})}e>=t.assignedPieces&&await T(w(S,`operator_status/${t.operatorId}`),{status:"online",currentBundle:null,currentOperation:null,machineType:null,startTime:null,lastActivity:Date.now(),todayEarnings:a})}catch(p){throw console.error("Error completing operator work:",p),p}}async getAvailableWorkForOperator(i,e){try{const n=M(N(c,"productionBundles"),f("status","==","ready")),p=await R(n),t=[];return p.docs.forEach(a=>{const r={id:a.id,...a.data()};r.processSteps.filter(o=>o.status==="ready"&&e.includes(o.machineType)&&!o.assignedOperator).forEach(o=>{t.push({bundle:r,step:o})})}),t}catch(n){throw console.error("Error getting available work for operator:",n),n}}async getOperatorMonthlyWork(i,e,n){const p=i;try{const t=new Date(n,e-1,1),a=new Date(n,e,0,23,59,59),r=M(N(c,"operatorWorkSessions"),f("operatorId","==",p),f("workDate",">=",t),f("workDate","<=",a),f("status","==","completed")),o=(await R(r)).docs.map(d=>({id:d.id,...d.data()})),h=o.reduce((d,l)=>d+l.completedPieces,0),s=o.reduce((d,l)=>d+l.totalEarning,0),P=new Set(o.map(d=>d.workDate.toDate().toDateString())).size;return{sessions:o,totalPieces:h,totalEarnings:s,workingDays:P}}catch(t){throw console.error("Error getting operator monthly work:",t),t}}subscribeToProductionDashboard(i){return E(w(S,"production_dashboard"),i)}getGarmentProcessTemplates(){return D}async updateBundlePricing(i,e){try{const n=await g(m(c,"productionBundles",i));if(!n.exists())throw new Error("Bundle not found");const t=n.data().processSteps.map(a=>{const r=e.find(u=>u.stepNumber===a.stepNumber);return r?{...a,pricePerPiece:r.newPrice}:a});await y(m(c,"productionBundles",i),{processSteps:t})}catch(n){throw console.error("Error updating bundle pricing:",n),n}}}const W=new B;export{W as e};
