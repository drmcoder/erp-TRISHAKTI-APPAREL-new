import{f as c}from"./index.B3OoR7j1.js";import{T as m}from"./firebase-vendor.D8xw0AXf.js";class E extends c{constructor(){super("users")}async getUserProfile(e){return this.getById(e)}async updateUserProfile(e,s){return await this.logUserActivity(e,"profile_update","User updated their profile",{updatedFields:Object.keys(s)}),this.update(e,s)}async getUsersByRole(e){return this.getWhere({field:"role",operator:"==",value:e},{orderByField:"name",orderDirection:"asc"})}async getAllUsers(e){try{const s=await this.getAll({orderByField:"name",orderDirection:"asc"});if(!s.success||!s.data)return s;let r=s.data;if(e&&(e.role&&(r=r.filter(t=>t.role===e.role)),e.department&&(r=r.filter(t=>t.department===e.department)),e.active!==void 0&&(r=r.filter(t=>t.active===e.active)),e.searchTerm)){const t=e.searchTerm.toLowerCase();r=r.filter(a=>a.name.toLowerCase().includes(t)||a.username.toLowerCase().includes(t)||a.email?.toLowerCase().includes(t)||a.department?.toLowerCase().includes(t))}return{success:!0,data:r}}catch(s){return console.error("Error filtering users:",s),{success:!1,error:s instanceof Error?s.message:"Unknown error occurred"}}}async createUser(e){const s={...e,active:!0,settings:{theme:"system",language:"en",notifications:{email:!0,push:!0,workAssignment:!0,qualityIssues:!0},...e.settings},activity:{lastSeen:new Date,totalLogins:0,workHours:0,completedTasks:0,...e.activity}};return await this.logSystemActivity("user_creation",`New user created: ${e.name}`,{newUserId:e.username,role:e.role}),this.create(s)}async deactivateUser(e,s){const r=await this.update(e,{active:!1});return r.success&&await this.logUserActivity(e,"account_deactivated","User account deactivated",{reason:s}),{success:r.success,error:r.error}}async activateUser(e){const s=await this.update(e,{active:!0});return s.success&&await this.logUserActivity(e,"account_activated","User account activated"),{success:s.success,error:s.error}}async updateUserRole(e,s,r){const t=await this.update(e,{role:s,permissions:r});return t.success&&await this.logUserActivity(e,"role_changed",`User role changed to ${s}`,{newRole:s,permissions:r}),{success:t.success,error:t.error}}async getUserActivity(e,s=50){return new c("user_activities").getWhere({field:"userId",operator:"==",value:e},{orderByField:"timestamp",orderDirection:"desc",limitCount:s})}validateObject(e){if(e==null)return null;if(Array.isArray(e))return e.map(s=>this.validateObject(s)).filter(s=>s!==void 0);if(typeof e=="object"){const s={};return Object.entries(e).forEach(([r,t])=>{if(t!==void 0){const a=this.validateObject(t);a!==void 0&&(s[r]=a)}}),s}return e}async logUserActivity(e,s,r,t){try{const a=new c("user_activities"),o=await this.getById(e),n=o.success&&o.data?o.data.name:"Unknown User",d=t?this.validateObject(t):null;await a.create({userId:e,userName:n,action:s,description:r,metadata:d,timestamp:m.now(),ipAddress:"unknown",userAgent:"unknown"})}catch(a){console.error("Error logging user activity:",a)}}async logSystemActivity(e,s,r){try{const t=new c("system_activities"),a=r?this.validateObject(r):null;await t.create({action:e,description:s,metadata:a,timestamp:m.now()})}catch(t){console.error("Error logging system activity:",t)}}async getUserStats(){try{const e=await this.getAll();if(!e.success||!e.data)return{success:!1,error:"Failed to fetch users"};const s=e.data,t=await new c("user_activities").getAll({orderByField:"timestamp",orderDirection:"desc",limitCount:20});return{success:!0,data:{totalUsers:s.length,activeUsers:s.filter(o=>o.active).length,usersByRole:s.reduce((o,n)=>(o[n.role]=(o[n.role]||0)+1,o),{}),recentActivity:t.success?t.data||[]:[]}}}catch(e){return console.error("Error getting user stats:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error occurred"}}}async updateLastSeen(e){try{await this.update(e,{activity:{lastSeen:new Date}})}catch(s){console.error("Error updating last seen:",s)}}async searchUsers(e,s=20){const r=await this.getAllUsers({searchTerm:e});return r.success&&r.data?{success:!0,data:r.data.slice(0,s)}:r}subscribeToUser(e,s){return this.subscribeToDocument(e,s)}subscribeToAllUsers(e){return this.subscribeToCollection(e,void 0,{orderByField:"name",orderDirection:"asc"})}async bulkUpdateUsers(e,s){try{const r=e.map(n=>this.update(n,s)),t=await Promise.allSettled(r),a=t.filter(n=>n.status==="rejected").length,o=t.length-a;return a>0?{success:!1,error:`${a} out of ${t.length} updates failed`}:(await this.logSystemActivity("bulk_user_update",`Bulk updated ${o} users`,{userIds:e,updates:Object.keys(s)}),{success:!0})}catch(r){return console.error("Error in bulk user update:",r),{success:!1,error:r instanceof Error?r.message:"Unknown error occurred"}}}async deleteUser(e){try{return await this.logSystemActivity("user_deletion",`User deleted: ${e}`,{deletedUserId:e}),await this.delete(e)}catch(s){return console.error("Error deleting user:",s),{success:!1,error:s instanceof Error?s.message:"Failed to delete user"}}}}const P=new E,i={OPERATOR_VIEW_DASHBOARD:{id:"operator.view.dashboard",name:"View Operator Dashboard",description:"Can view operator dashboard with personal metrics",resource:"dashboard",action:"view"},OPERATOR_VIEW_WORK_ASSIGNMENTS:{id:"operator.view.work-assignments",name:"View Work Assignments",description:"Can view assigned work items",resource:"work-assignments",action:"view"},OPERATOR_SELF_ASSIGN_WORK:{id:"operator.assign.work.self",name:"Self-Assign Work",description:"Can assign work to themselves",resource:"work-assignments",action:"self-assign"},OPERATOR_VIEW_PERFORMANCE:{id:"operator.view.performance",name:"View Personal Performance",description:"Can view their own performance metrics",resource:"performance",action:"view"},OPERATOR_UPDATE_STATUS:{id:"operator.update.status",name:"Update Work Status",description:"Can update work item status and progress",resource:"work-items",action:"update-status"},SUPERVISOR_VIEW_DASHBOARD:{id:"supervisor.view.dashboard",name:"View Supervisor Dashboard",description:"Can view supervisor dashboard with team metrics",resource:"dashboard",action:"view"},SUPERVISOR_VIEW_TEAM:{id:"supervisor.view.team",name:"View Team Members",description:"Can view team member information and status",resource:"team",action:"view"},SUPERVISOR_ASSIGN_WORK:{id:"supervisor.assign.work",name:"Assign Work to Team",description:"Can assign work items to team members",resource:"work-assignments",action:"assign"},SUPERVISOR_APPROVE_ASSIGNMENTS:{id:"supervisor.approve.assignments",name:"Approve Work Assignments",description:"Can approve or reject work assignment requests",resource:"work-assignments",action:"approve"},SUPERVISOR_VIEW_TEAM_PERFORMANCE:{id:"supervisor.view.team-performance",name:"View Team Performance",description:"Can view performance metrics for team members",resource:"performance",action:"view-team"},SUPERVISOR_MANAGE_TEAM_SCHEDULE:{id:"supervisor.manage.schedule",name:"Manage Team Schedule",description:"Can manage team work schedules",resource:"schedule",action:"manage"},ADMIN_VIEW_DASHBOARD:{id:"admin.view.dashboard",name:"View Admin Dashboard",description:"Can view administrative dashboard with company-wide metrics",resource:"dashboard",action:"view"},ADMIN_MANAGE_USERS:{id:"admin.manage.users",name:"Manage Users",description:"Can create, update, and delete user accounts",resource:"users",action:"manage"},ADMIN_MANAGE_ROLES:{id:"admin.manage.roles",name:"Manage Roles",description:"Can create and modify user roles and permissions",resource:"roles",action:"manage"},ADMIN_VIEW_ALL_PERFORMANCE:{id:"admin.view.all-performance",name:"View All Performance Data",description:"Can view performance data for all users and departments",resource:"performance",action:"view-all"},ADMIN_MANAGE_PRODUCTION:{id:"admin.manage.production",name:"Manage Production",description:"Can manage production lines, machines, and workflows",resource:"production",action:"manage"},ADMIN_GENERATE_REPORTS:{id:"admin.generate.reports",name:"Generate Reports",description:"Can generate and export system reports",resource:"reports",action:"generate"},ADMIN_MANAGE_NOTIFICATIONS:{id:"admin.manage.notifications",name:"Manage Notifications",description:"Can send system-wide notifications and manage notification settings",resource:"notifications",action:"manage"},ADMIN_VIEW_ANALYTICS:{id:"admin.view.analytics",name:"View System Analytics",description:"Can view detailed system analytics and insights",resource:"analytics",action:"view"}},u={OPERATOR:{id:"operator",name:"Operator",description:"Production line operator with basic permissions",permissions:[i.OPERATOR_VIEW_DASHBOARD,i.OPERATOR_VIEW_WORK_ASSIGNMENTS,i.OPERATOR_SELF_ASSIGN_WORK,i.OPERATOR_VIEW_PERFORMANCE,i.OPERATOR_UPDATE_STATUS]},SUPERVISOR:{id:"supervisor",name:"Supervisor",description:"Team supervisor with team management permissions",permissions:[i.SUPERVISOR_VIEW_DASHBOARD,i.SUPERVISOR_VIEW_TEAM,i.SUPERVISOR_ASSIGN_WORK,i.SUPERVISOR_APPROVE_ASSIGNMENTS,i.SUPERVISOR_VIEW_TEAM_PERFORMANCE,i.SUPERVISOR_MANAGE_TEAM_SCHEDULE,i.OPERATOR_VIEW_WORK_ASSIGNMENTS,i.OPERATOR_VIEW_PERFORMANCE,i.OPERATOR_UPDATE_STATUS]},ADMIN:{id:"admin",name:"Administrator",description:"System administrator with full permissions",permissions:[i.ADMIN_VIEW_DASHBOARD,i.ADMIN_MANAGE_USERS,i.ADMIN_MANAGE_ROLES,i.ADMIN_VIEW_ALL_PERFORMANCE,i.ADMIN_MANAGE_PRODUCTION,i.ADMIN_GENERATE_REPORTS,i.ADMIN_MANAGE_NOTIFICATIONS,i.ADMIN_VIEW_ANALYTICS,i.SUPERVISOR_VIEW_DASHBOARD,i.SUPERVISOR_VIEW_TEAM,i.SUPERVISOR_ASSIGN_WORK,i.SUPERVISOR_APPROVE_ASSIGNMENTS,i.SUPERVISOR_VIEW_TEAM_PERFORMANCE,i.SUPERVISOR_MANAGE_TEAM_SCHEDULE,i.OPERATOR_VIEW_DASHBOARD,i.OPERATOR_VIEW_WORK_ASSIGNMENTS,i.OPERATOR_SELF_ASSIGN_WORK,i.OPERATOR_VIEW_PERFORMANCE,i.OPERATOR_UPDATE_STATUS]}};class S{userPermissions=new Map;hasPermission(e,s){const r=this.userPermissions.get(e);if(!r)return!1;const t=r.role.permissions.some(o=>o.id===s),a=r.customPermissions?.some(o=>o.id===s)||!1;return t||a}hasAnyPermission(e,s){return s.some(r=>this.hasPermission(e,r))}hasAllPermissions(e,s){return s.every(r=>this.hasPermission(e,r))}getUserRole(e){return this.userPermissions.get(e)?.role||null}setUserPermissions(e,s,r){this.userPermissions.set(e,{userId:e,role:s,customPermissions:r})}setUserRole(e,s){const r=u[s];r&&this.setUserPermissions(e,r)}getUserPermissions(e){const s=this.userPermissions.get(e);if(!s)return[];const r=s.role.permissions,t=s.customPermissions||[];return[...r,...t].filter((n,d,A)=>A.findIndex(R=>R.id===n.id)===d)}canAccessDashboard(e,s){switch(s){case"operator":return this.hasPermission(e,i.OPERATOR_VIEW_DASHBOARD.id);case"supervisor":return this.hasPermission(e,i.SUPERVISOR_VIEW_DASHBOARD.id);case"admin":return this.hasPermission(e,i.ADMIN_VIEW_DASHBOARD.id);default:return!1}}getPreferredDashboard(e){return this.canAccessDashboard(e,"admin")?"admin":this.canAccessDashboard(e,"supervisor")?"supervisor":this.canAccessDashboard(e,"operator")?"operator":null}async loadUserPermissions(e){try{const s=localStorage.getItem(`user-permissions-${e}`);if(s){const r=JSON.parse(s),t=u[r.roleId];t&&this.setUserPermissions(e,t,r.customPermissions)}}catch(s){console.error("Failed to load user permissions:",s)}}async saveUserPermissions(e){try{const s=this.userPermissions.get(e);if(s){const r={roleId:s.role.id,customPermissions:s.customPermissions};localStorage.setItem(`user-permissions-${e}`,JSON.stringify(r))}}catch(s){console.error("Failed to save user permissions:",s)}}initializeDemoPermissions(){this.setUserRole("operator-001","OPERATOR"),this.setUserRole("operator","OPERATOR"),this.setUserRole("op-maya-001","OPERATOR"),this.setUserRole("supervisor-001","SUPERVISOR"),this.setUserRole("supervisor","SUPERVISOR"),this.setUserRole("sup","SUPERVISOR"),this.setUserRole("sup-john-001","SUPERVISOR"),this.setUserRole("admin-001","ADMIN"),this.setUserRole("admin","ADMIN"),this.setUserRole("administrator","ADMIN"),this.setUserRole("mgr-admin-001","ADMIN")}}const p=new S;typeof window<"u"&&p.initializeDemoPermissions();export{i as P,P as U,p};
