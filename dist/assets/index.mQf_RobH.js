import{c as P,d as S,s as g,e as z,g as G,u as he,f as Ae,q as A,w as V,o as oe,h as Re,l as ee,a as fe,b as ce,i as H,j as ge,k as j,r as ie,m as Ee,T as le,n as ke,p as Oe,t as Ie}from"./firebase-vendor.BZUNkHzc.js";import{d as h,C as y,s as B,r as R,a as b,R as k,b as x,u as Te,o as K,c as ue,e as Pe,f as de,h as _e,E as X,i as De,j as xe,k as Ce}from"./firebase.BVb4kvNg.js";import{M as Z,S as T}from"./operator-service.BvbEc7Oq.js";import"./react-vendor.BcnQP8kQ.js";import"./damage-report-service.CZqmI8OF.js";import{B as W}from"./base-service.9pve6B0A.js";import"./operator-wallet-service.CYKz_Xt9.js";class D{static validateOperatorCreation(e){const t=[],s=[];e.username.length<3&&t.push("Username must be at least 3 characters long"),/^TSA-\d{4}$/.test(e.employeeId)||t.push("Employee ID must follow format: TSA-XXXX (e.g., TSA-0001)"),e.machineTypes.includes(e.primaryMachine)||t.push("Primary machine must be included in machine types list");const i=Z.find(c=>c.machineType===e.primaryMachine);if(i){const c=T.findIndex(d=>d.value===e.skillLevel),u=T.findIndex(d=>d.value===i.requiredSkillLevel);c<u&&t.push(`Operator skill level (${e.skillLevel}) is insufficient for primary machine ${i.displayName}`)}(Date.now()-new Date(e.hiredDate).getTime())/(1e3*60*60*24*30)<3&&e.skillLevel==="expert"&&s.push("Expert skill level assigned to recently hired operator (< 3 months)");const n=T.find(c=>c.value===e.skillLevel),o=n?.value==="beginner"?2:n?.value==="intermediate"?4:n?.value==="advanced"?6:8;return e.maxConcurrentWork>o&&s.push(`Max concurrent work (${e.maxConcurrentWork}) exceeds recommended for skill level (${o})`),e.email&&!e.email.endsWith("@tsa.com")&&!e.email.endsWith("@contractor.tsa.com")&&s.push("Email domain should be @tsa.com for employees or @contractor.tsa.com for contractors"),{isValid:t.length===0,errors:t,warnings:s}}static validateWorkAssignment(e,t){if(!(e.machineTypes.includes(t.machineType)||e.primaryMachine===t.machineType))return{canAssign:!1,reason:`Operator cannot work on ${t.machineType}`,machineIncompatible:!0};const r=T.findIndex(o=>o.value===e.skillLevel),i=T.findIndex(o=>o.value===t.skillRequired);return r<i?{canAssign:!1,reason:"Operator skill level insufficient for required work",skillMismatch:!0}:("realtimeStatus"in e&&e.realtimeStatus?.currentWorkItems||0)>=e.maxConcurrentWork?{canAssign:!1,reason:`Operator at maximum concurrent work capacity (${e.maxConcurrentWork})`,maxConcurrentExceeded:!0}:("realtimeStatus"in e?e.realtimeStatus?.status==="idle"||e.realtimeStatus?.status==="working":e.currentStatus==="idle"||e.currentStatus==="working")?{canAssign:!0}:{canAssign:!1,reason:`Operator not available (status: ${"realtimeStatus"in e?e.realtimeStatus?.status:e.currentStatus})`}}static analyzePerformance(e){const t=[];let s=0;const r=e.averageEfficiency;let i="stable";r<.7?(i="declining",t.push("Consider additional training or mentoring"),t.push("Review current work assignments for complexity")):r>.9&&(i="improving",t.push("Consider for advanced projects"),t.push("Potential candidate for team lead role"));const a=e.qualityScore;let n="stable";return a<.8?(n="declining",t.push("Quality control training needed"),t.push("Implement peer review process")):a>.95&&(n="improving",t.push("Consider for quality assurance role")),s=Math.round((r*.6+a*.4)*100),e.totalWorkingDays/22>12&&e.skillLevel==="intermediate"&&t.push("Consider promotion to advanced skill level"),e.completedBundles>100&&r>.85&&t.push("High performer - consider for complex assignments"),{efficiencyTrend:i,qualityTrend:n,productivityScore:s,recommendedActions:t}}static validateShiftAssignment(e,t,s){const r=[],i=[];e.shift!==t&&i.push(`Operator regular shift is ${e.shift}, requesting ${t}`),t==="night"&&e.totalWorkingDays/22<6&&r.push("Operators with less than 6 months experience cannot work night shifts");const a=s.getDay();return(a===0||a===6)&&e.skillLevel==="beginner"&&i.push("Beginner operators should avoid weekend shifts without supervision"),{isValid:r.length===0,errors:r,warnings:i}}static validateMachineAssignment(e,t,s){const r=[],i=[];e.machineTypes.includes(s)||r.push(`Operator not certified for machine type: ${s}`),e.primaryMachine===s?i.push("Assigning to primary machine - optimal performance expected"):i.push("Assigning to secondary machine - monitor performance closely");const a=Z.find(n=>n.machineType===s);if(a){const n=T.findIndex(c=>c.value===e.skillLevel),o=T.findIndex(c=>c.value===a.requiredSkillLevel);n<o&&r.push(`Insufficient skill level for machine type: ${s}`)}return{isValid:r.length===0,errors:r,warnings:i}}static validateLeaveRequest(e,t,s,r){const i=[],a=[],n=Math.ceil((r.getTime()-s.getTime())/864e5),o={sick:15,annual:21,emergency:7,maternity:98};n>o[t]&&i.push(`${t} leave cannot exceed ${o[t]} days`);const c=Math.ceil((s.getTime()-Date.now())/(1e3*60*60*24));return t==="annual"&&c<7&&a.push("Annual leave should be requested at least 7 days in advance"),"realtimeStatus"in e&&e.realtimeStatus?.currentWorkItems>0&&a.push("Operator has pending work assignments - consider reassignment"),{isValid:i.length===0,errors:i,warnings:a}}static recommendTraining(e){const t=[];e.averageEfficiency<.7&&(t.push("Efficiency Improvement Workshop"),t.push("Time Management Training")),e.qualityScore<.8&&(t.push("Quality Control Certification"),t.push("Attention to Detail Training"));const s=e.totalWorkingDays/22;s>6&&e.skillLevel==="beginner"&&t.push("Intermediate Skills Certification"),s>18&&e.skillLevel==="intermediate"&&(t.push("Advanced Operations Training"),t.push("Leadership Skills Workshop"));const r=Z.filter(i=>!e.machineTypes.includes(i.machineType));return r.length>0&&t.push(`Cross-training on ${r[0].displayName}`),t.push("Annual Safety Refresher Course"),t}static evaluatePromotion(e){const t=[],s=[],r=T.findIndex(d=>d.value===e.skillLevel),i=T[r+1];if(!i)return{eligible:!1,nextLevel:"Maximum level reached",requirements:[],blockers:["Already at highest skill level"]};const a=e.totalWorkingDays/22,o={intermediate:6,advanced:18,expert:36}[i.value];a<o&&s.push(`Need ${o-a} more months of experience`),e.averageEfficiency<.8&&s.push("Efficiency must be at least 80%"),e.qualityScore<.85&&s.push("Quality score must be at least 85%");const u={intermediate:50,advanced:200,expert:500}[i.value];return e.completedBundles<u&&s.push(`Need ${u-e.completedBundles} more completed bundles`),t.push(`Complete ${i.label} certification course`),t.push("Pass practical skill assessment"),t.push("Supervisor evaluation"),{eligible:s.length===0,nextLevel:i.label,requirements:t,blockers:s}}}const _={validateOperatorCreation:D.validateOperatorCreation,validateWorkAssignment:D.validateWorkAssignment,analyzePerformance:D.analyzePerformance,validateShiftAssignment:D.validateShiftAssignment,validateMachineAssignment:D.validateMachineAssignment,validateLeaveRequest:D.validateLeaveRequest,recommendTraining:D.recommendTraining,evaluatePromotion:D.evaluatePromotion};class I{collectionName;config;cache;offlineQueue;metrics;listeners;constructor(e,t){this.collectionName=e,this.config=this.mergeConfig(t),this.cache=new Map,this.offlineQueue=[],this.listeners=new Map,this.metrics=this.initializeMetrics(),this.config.offlineSync&&this.initializeOfflineSync()}mergeConfig(e){return{...{cache:{enabled:!0,ttl:3e5,maxSize:1e3,strategy:"lru",invalidateOnUpdate:!0,prefetch:!1},retry:{enabled:!0,maxAttempts:3,backoffStrategy:"exponential",baseDelay:1e3,maxDelay:1e4,retryCondition:s=>!s.code?.includes("permission")},validation:{enabled:!0,strict:!1,customValidators:{},sanitizers:{}},performance:{enabled:!0,trackLatency:!0,trackThroughput:!0,trackErrors:!0,sampleRate:1},timeout:3e4,compression:!1,offlineSync:!0},...e}}initializeMetrics(){return{requestCount:0,averageLatency:0,errorRate:0,cacheHitRate:0,throughput:0,lastUpdated:new Date}}getCollectionRef(){return P(h,this.collectionName)}getDocumentRef(e){return S(h,this.collectionName,e)}async executeWithRetry(e,t){if(!this.config.retry.enabled)return e();let s,r=this.config.retry.baseDelay;for(let i=1;i<=this.config.retry.maxAttempts;i++)try{const a=Date.now(),n=await Promise.race([e(),new Promise((o,c)=>setTimeout(()=>c(new Error("Timeout")),this.config.timeout))]);return this.config.performance.enabled&&this.updateMetrics("success",Date.now()-a),n}catch(a){if(s=a,this.config.performance.enabled&&this.updateMetrics("error",0),i===this.config.retry.maxAttempts||!this.config.retry.retryCondition?.(a))break;switch(await this.delay(r),this.config.retry.backoffStrategy){case"exponential":r=Math.min(r*2,this.config.retry.maxDelay);break;case"linear":r=Math.min(r+this.config.retry.baseDelay,this.config.retry.maxDelay);break}}throw s}delay(e){return new Promise(t=>setTimeout(t,e))}updateMetrics(e,t){this.metrics.requestCount++,e==="success"&&(this.metrics.averageLatency=(this.metrics.averageLatency+t)/2),this.metrics.errorRate=this.metrics.errorRate*.9+(e==="error"?.1:0),this.metrics.lastUpdated=new Date}getCacheKey(e,t){return`${this.collectionName}:${e}:${JSON.stringify(t)}`}getFromCache(e){if(!this.config.cache.enabled)return null;const t=this.cache.get(e);return t?Date.now()-t.timestamp>t.ttl?(this.cache.delete(e),null):(this.metrics.cacheHitRate=this.metrics.cacheHitRate*.9+.1,t.data):null}setCache(e,t,s){if(this.config.cache.enabled){if(this.cache.size>=this.config.cache.maxSize){const r=this.cache.keys().next().value;r&&this.cache.delete(r)}this.cache.set(e,{data:t,timestamp:Date.now(),ttl:s||this.config.cache.ttl})}}invalidateCache(e){if(e)for(const t of this.cache.keys())t.includes(e)&&this.cache.delete(t);else this.cache.clear()}validateData(e){if(!this.config.validation.enabled)return{valid:!0,errors:[]};const t=[];if(this.validate){const s=this.validate(e);s.valid||t.push(...s.errors)}return{valid:t.length===0,errors:t}}async logAudit(e,t,s,r){if(this.shouldAudit())try{const i={entityType:this.collectionName,entityId:t,action:e,performedBy:r||"system",userRole:"unknown",changes:s?[s]:void 0,metadata:{timestamp:new Date,service:this.constructor.name},createdAt:g(),updatedAt:g()};await z(P(h,"auditLogs"),i)}catch(i){console.error("Failed to log audit:",i)}}shouldAudit(){return!0}initializeOfflineSync(){window.addEventListener("online",this.processPendingOperations.bind(this)),window.addEventListener("offline",()=>{console.log(`${this.collectionName} service is now offline`)}),this.processPendingOperations()}async processPendingOperations(){if(!navigator.onLine||this.offlineQueue.length===0)return;console.log(`Processing ${this.offlineQueue.length} offline operations for ${this.collectionName}`);const e=[...this.offlineQueue];this.offlineQueue=[];for(const t of e)try{await this.executeOfflineOperation(t)}catch(s){t.retryCount++,t.status="failed",t.error=s instanceof Error?s.message:"Unknown error",t.retryCount<3&&(t.status="pending",this.offlineQueue.push(t))}}async executeOfflineOperation(e){switch(e.type){case"create":e.data&&await this.create(e.data);break;case"update":e.documentId&&e.data&&await this.update(e.documentId,e.data);break;case"delete":e.documentId&&await this.delete(e.documentId);break}}addToOfflineQueue(e){this.offlineQueue.length>=this.config.maxOfflineOperations&&this.offlineQueue.shift(),this.offlineQueue.push({...e,id:Date.now().toString(),timestamp:new Date,status:"pending",retryCount:0})}async create(e,t){return this.executeWithRetry(async()=>{const s=this.validateData(e);if(!s.valid)return{success:!1,error:"Validation failed",errorCode:"VALIDATION_ERROR",metadata:{errors:s.errors}};const r=this.getCacheKey("create",e),i={...e,createdAt:g(),updatedAt:g(),createdBy:t,updatedBy:t};let a;if(navigator.onLine){a=await z(this.getCollectionRef(),i);const n=await this.getById(a.id);return this.setCache(r,n.data),await this.logAudit("create",a.id,i,t),this.config.cache.invalidateOnUpdate&&this.invalidateCache(this.collectionName),{success:!0,data:n.data,id:a.id,message:"Document created successfully"}}else{this.addToOfflineQueue({type:"create",collection:this.collectionName,data:i});const n=`offline_${Date.now()}`;return{success:!0,data:{...i,id:n},id:n,message:"Document queued for creation (offline)",metadata:{offline:!0}}}},"create")}async getById(e,t=!0){return this.executeWithRetry(async()=>{const s=this.getCacheKey("getById",{id:e});if(t){const a=this.getFromCache(s);if(a)return{success:!0,data:a,metadata:{cached:!0}}}const r=this.getDocumentRef(e),i=await G(r);if(i.exists()){const a={id:i.id,...i.data()};return t&&this.setCache(s,a),{success:!0,data:a,metadata:{cached:!1}}}else return{success:!1,error:"Document not found",errorCode:"NOT_FOUND"}},"getById")}async update(e,t,s){return this.executeWithRetry(async()=>{const r=this.validateData(t);if(!r.valid)return{success:!1,error:"Validation failed",errorCode:"VALIDATION_ERROR",metadata:{errors:r.errors}};if(navigator.onLine){const i=await this.getById(e,!1);if(!i.success)return i;const a=this.getDocumentRef(e),n={...t,updatedAt:g(),updatedBy:s};await he(a,n);const o=await this.getById(e,!1),c=this.calculateChanges(i.data,n);return await this.logAudit("update",e,c,s),this.config.cache.invalidateOnUpdate&&this.invalidateCache(e),{success:!0,data:o.data,message:"Document updated successfully"}}else return this.addToOfflineQueue({type:"update",collection:this.collectionName,documentId:e,data:t}),{success:!0,message:"Update queued for sync (offline)",metadata:{offline:!0}}},"update")}async delete(e,t){return this.executeWithRetry(async()=>{if(navigator.onLine){const s=await this.getById(e,!1),r=this.getDocumentRef(e);return await Ae(r),await this.logAudit("delete",e,s.data,t),this.config.cache.invalidateOnUpdate&&this.invalidateCache(e),{success:!0,message:"Document deleted successfully"}}else return this.addToOfflineQueue({type:"delete",collection:this.collectionName,documentId:e}),{success:!0,message:"Delete queued for sync (offline)",metadata:{offline:!0}}},"delete")}calculateChanges(e,t){const s={};for(const r in t)e[r]!==t[r]&&(s[r]={oldValue:e[r],newValue:t[r]});return s}async query(e={}){return this.executeWithRetry(async()=>{const t=this.getCacheKey("query",e);if(e.useCache!==!1){const n=this.getFromCache(t);if(n)return{success:!0,data:n,metadata:{cached:!0,totalCount:n.length}}}let s=A(this.getCollectionRef());e.where&&e.where.length>0&&e.where.forEach(n=>{s=A(s,V(n.field,n.operator,n.value))}),e.orderByField&&(s=A(s,oe(e.orderByField,e.orderDirection||"asc"))),e.lastDoc&&(s=A(s,Re(e.lastDoc))),e.limit&&(s=A(s,ee(e.limit)));const r=await fe(s),i=r.docs.map(n=>({id:n.id,...n.data()}));e.useCache!==!1&&this.setCache(t,i);const a={totalCount:i.length,hasMore:i.length===(e.limit||0),lastDoc:r.docs[r.docs.length-1],cached:!1};return{success:!0,data:i,metadata:a}},"query")}async getAll(e={}){return this.query(e)}async getWhere(e,t,s,r={}){const i={field:e,operator:t,value:s};return this.query({...r,where:[i]})}subscribe(e,t={}){let s=A(this.getCollectionRef());t.filter&&t.filter.length>0&&t.filter.forEach(a=>{s=A(s,V(a.field,a.operator,a.value))}),t.orderBy&&(s=A(s,oe(t.orderBy.field,t.orderBy.direction))),t.limit&&(s=A(s,ee(t.limit)));const r=Date.now().toString(),i=ce(s,{includeMetadataChanges:t.includeMetadata||!1},a=>{const n=a.docs.map(c=>({id:c.id,...c.data()})),o={source:a.metadata.fromCache?"cache":"server",hasPendingWrites:a.metadata.hasPendingWrites,isFromCache:a.metadata.fromCache,timestamp:new Date};if(this.config.cache.enabled){const c=this.getCacheKey("subscribe",t);this.setCache(c,n)}e(n,o)},a=>{console.error(`Error in ${this.collectionName} subscription:`,a),e([],{source:"server",hasPendingWrites:!1,isFromCache:!1,timestamp:new Date})});return this.listeners.set(r,i),()=>{i(),this.listeners.delete(r)}}subscribeToDocument(e,t){const s=this.getDocumentRef(e),r=`doc_${e}`,i=ce(s,a=>{const n={source:a.metadata.fromCache?"cache":"server",hasPendingWrites:a.metadata.hasPendingWrites,isFromCache:a.metadata.fromCache,timestamp:new Date};if(a.exists()){const o={id:a.id,...a.data()};if(this.config.cache.enabled){const c=this.getCacheKey("getById",{id:e});this.setCache(c,o)}t(o,n)}else t(null,n)},a=>{console.error(`Error subscribing to document ${e}:`,a),t(null)});return this.listeners.set(r,i),()=>{i(),this.listeners.delete(r)}}getMetrics(){return{...this.metrics}}getCacheStats(){return{size:this.cache.size,keys:Array.from(this.cache.keys()),hitRate:this.metrics.cacheHitRate}}cleanup(){this.listeners.forEach(e=>e()),this.listeners.clear(),this.cache.clear(),this.offlineQueue=[],console.log(`${this.collectionName} service cleaned up`)}async setNetworkEnabled(e){try{e?(await H(h),console.log(`${this.collectionName} service: Network enabled`),this.config.offlineSync&&await this.processPendingOperations()):(await ge(h),console.log(`${this.collectionName} service: Network disabled`))}catch(t){console.error(`Error ${e?"enabling":"disabling"} network:`,t)}}async batchCreate(e,t){return this.executeWithRetry(async()=>{const s=j(h),r=[];e.forEach(({id:i,data:a})=>{try{const n=this.validateData(a);if(!n.valid){r.push({id:i||"unknown",success:!1,error:`Validation failed: ${n.errors.join(", ")}`});return}const o={...a,createdAt:g(),updatedAt:g(),createdBy:t,updatedBy:t},c=i?this.getDocumentRef(i):S(this.getCollectionRef());s.set(c,o),r.push({id:c.id,success:!0})}catch(n){r.push({id:i||"unknown",success:!1,error:n instanceof Error?n.message:"Unknown error"})}});try{await s.commit(),this.config.cache.invalidateOnUpdate&&this.invalidateCache(this.collectionName);const i=r.filter(a=>a.success);for(const a of i)await this.logAudit("create",a.id,null,t);return{success:!0,results:r,totalProcessed:e.length,totalFailed:r.filter(a=>!a.success).length}}catch{return{success:!1,results:r.map(a=>({...a,success:!1,error:"Batch commit failed"})),totalProcessed:e.length,totalFailed:e.length}}},"batchCreate")}async batchUpdate(e,t){return this.executeWithRetry(async()=>{const s=j(h),r=[];for(const i of e)try{const a=this.validateData(i.data);if(!a.valid){r.push({id:i.id,success:!1,error:`Validation failed: ${a.errors.join(", ")}`});continue}const n={...i.data,updatedAt:g(),updatedBy:t},o=this.getDocumentRef(i.id);s.update(o,n),r.push({id:i.id,success:!0})}catch(a){r.push({id:i.id,success:!1,error:a instanceof Error?a.message:"Unknown error"})}try{await s.commit(),this.config.cache.invalidateOnUpdate&&this.invalidateCache(this.collectionName);const i=r.filter(a=>a.success);for(const a of i)await this.logAudit("update",a.id,null,t);return{success:!0,results:r,totalProcessed:e.length,totalFailed:r.filter(a=>!a.success).length}}catch{return{success:!1,results:r.map(a=>({...a,success:!1,error:"Batch commit failed"})),totalProcessed:e.length,totalFailed:e.length}}},"batchUpdate")}async transaction(e,t){return this.executeWithRetry(async()=>{try{const s=await ie(h,async r=>{const i={};for(const a of e){const{type:n,collection:o,id:c,data:u,conditions:d}=a;if(o!==this.collectionName)throw new Error(`Transaction can only operate on ${this.collectionName} collection`);switch(n){case"read":if(c){const m=this.getDocumentRef(c),f=await r.get(m);i[c]=f.exists()?{id:f.id,...f.data()}:null}break;case"create":if(u){const m=this.validateData(u);if(!m.valid)throw new Error(`Validation failed: ${m.errors.join(", ")}`);const f=S(this.getCollectionRef()),v={...u,createdAt:g(),updatedAt:g(),createdBy:t,updatedBy:t};r.set(f,v),i[f.id]={id:f.id,...v}}break;case"update":if(c&&u){const m=this.validateData(u);if(!m.valid)throw new Error(`Validation failed: ${m.errors.join(", ")}`);const f=this.getDocumentRef(c),v={...u,updatedAt:g(),updatedBy:t};r.update(f,v),i[c]={id:c,...v}}break;case"delete":if(c){const m=this.getDocumentRef(c);r.delete(m),i[c]={deleted:!0}}break}}return i});return this.config.cache.invalidateOnUpdate&&this.invalidateCache(this.collectionName),await this.logAudit("transaction","multiple",e,t),{success:!0,results:s}}catch(s){return{success:!1,error:s instanceof Error?s.message:"Transaction failed"}}},"transaction")}}class Ne extends I{constructor(e){super(y.OPERATORS,e)}validate(e){const t=[];return(!e.username||typeof e.username!="string")&&t.push("Username is required and must be a string"),(!e.name||typeof e.name!="string")&&t.push("Name is required and must be a string"),e.role!=="operator"&&t.push('Role must be "operator"'),(!e.skills||!Array.isArray(e.skills))&&t.push("Skills must be provided as an array"),e.efficiencyRating!==void 0&&(typeof e.efficiencyRating!="number"||e.efficiencyRating<0||e.efficiencyRating>100)&&t.push("Efficiency rating must be a number between 0 and 100"),e.qualityScore!==void 0&&(typeof e.qualityScore!="number"||e.qualityScore<0||e.qualityScore>100)&&t.push("Quality score must be a number between 0 and 100"),{valid:t.length===0,errors:t}}async getBySkill(e,t){return this.getWhere("skills","array-contains",e,t)}async getAvailableOperators(e){return this.getWhere("availabilityStatus","==","available",e)}async getByEfficiencyRange(e,t,s){const r=[{field:"efficiencyRating",operator:">=",value:e},{field:"efficiencyRating",operator:"<=",value:t}];return this.query({...s,where:r})}async updateAvailabilityStatus(e,t,s){return this.update(e,{availabilityStatus:t,lastActiveTime:new Date},s)}async updateStatistics(e,t,s){const r={};return t.piecesCompleted!==void 0&&(r.totalPiecesCompleted=t.piecesCompleted),t.earnings!==void 0&&(r.totalEarnings=t.earnings),t.efficiencyRating!==void 0&&(r.efficiencyRating=t.efficiencyRating),t.qualityScore!==void 0&&(r.qualityScore=t.qualityScore),this.update(e,r,s)}async getTopPerformers(e=10){return this.query({orderByField:"efficiencyRating",orderDirection:"desc",limit:e,where:[{field:"active",operator:"==",value:!0}]})}async searchOperators(e,t){const s=await this.query({...t,where:[{field:"name",operator:">=",value:e},{field:"name",operator:"<=",value:e+""}]}),r=await this.query({...t,where:[{field:"username",operator:">=",value:e},{field:"username",operator:"<=",value:e+""}]});if(s.success&&r.success){const a=[...s.data||[],...r.data||[]].filter((n,o,c)=>c.findIndex(u=>u.id===n.id)===o);return{success:!0,data:a,metadata:{totalCount:a.length}}}return s.success?s:r}async getOperatorDashboardData(e){try{const t=await this.getById(e);if(!t.success)return t;const s=new Date().toISOString().split("T")[0];return{success:!0,data:{operator:t.data,todayStats:{piecesCompleted:0,earnings:0,hoursWorked:0,efficiency:0},weeklyStats:{totalPieces:0,totalEarnings:0,averageEfficiency:0,workingDays:0},currentAssignments:[],recentCompletions:[]}}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Failed to get dashboard data"}}}async updateMultipleStatuses(e,t){const s=e.map(r=>({id:r.operatorId,data:{availabilityStatus:r.status,lastActiveTime:new Date}}));return this.batchUpdate(s,t)}async getByDepartment(e,t){return this.getWhere("department","==",e,t)}async getByMachineType(e,t){return this.getWhere("machineType","==",e,t)}async getOperatorsOnShift(e,t){return this.getWhere("shiftPreference","==",e,t)}shouldAudit(){return!0}}class Me extends I{constructor(e){super(y.SUPERVISORS,e)}validate(e){const t=[];return(!e.username||typeof e.username!="string")&&t.push("Username is required and must be a string"),(!e.name||typeof e.name!="string")&&t.push("Name is required and must be a string"),e.role!=="supervisor"&&t.push('Role must be "supervisor"'),(!e.supervisorLevel||!["junior","senior","lead"].includes(e.supervisorLevel))&&t.push("Supervisor level must be junior, senior, or lead"),(!e.responsibleLines||!Array.isArray(e.responsibleLines))&&t.push("Responsible lines must be provided as an array"),(!e.teamMembers||!Array.isArray(e.teamMembers))&&t.push("Team members must be provided as an array"),{valid:t.length===0,errors:t}}async getBySupervisorLevel(e,t){return this.getWhere("supervisorLevel","==",e,t)}async getByResponsibleLine(e,t){return this.getWhere("responsibleLines","array-contains",e,t)}async getSupervisorForOperator(e,t){return this.getWhere("teamMembers","array-contains",e,t)}async addOperatorToTeam(e,t,s){const r=await this.getById(e);if(!r.success||!r.data)return r;const i=[...r.data.teamMembers||[]];return i.includes(t)||i.push(t),this.update(e,{teamMembers:i,managedOperatorCount:i.length},s)}async removeOperatorFromTeam(e,t,s){const r=await this.getById(e);if(!r.success||!r.data)return r;const i=(r.data.teamMembers||[]).filter(a=>a!==t);return this.update(e,{teamMembers:i,managedOperatorCount:i.length},s)}async assignLineResponsibility(e,t,s){const r=await this.getById(e);if(!r.success||!r.data)return r;const i=[...r.data.responsibleLines||[]];return i.includes(t)||i.push(t),this.update(e,{responsibleLines:i},s)}async removeLineResponsibility(e,t,s){const r=await this.getById(e);if(!r.success||!r.data)return r;const i=(r.data.responsibleLines||[]).filter(a=>a!==t);return this.update(e,{responsibleLines:i},s)}async getSupervisorWorkload(e){try{const t=await this.getById(e);return!t.success||!t.data?t:{success:!0,data:{supervisor:t.data,totalOperators:t.data.teamMembers?.length||0,activeOperators:0,totalLines:t.data.responsibleLines?.length||0,pendingTasks:0,todayAssignments:0}}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Failed to get workload data"}}}async getSupervisorsWithCapacity(e=20,t){return this.query({...t,where:[{field:"managedOperatorCount",operator:"<",value:e},{field:"active",operator:"==",value:!0}]})}async getSeniorSupervisors(e){return this.query({...e,where:[{field:"supervisorLevel",operator:"in",value:["senior","lead"]},{field:"active",operator:"==",value:!0}]})}async bulkReassignOperators(e,t,s,r){try{const i=[{type:"read",collection:this.collectionName,id:e},{type:"read",collection:this.collectionName,id:t}],a=await this.transaction(i,r);if(!a.success)return{success:!1,error:"Failed to read supervisors for reassignment"};const n=a.results[e],o=a.results[t];if(!n||!o)return{success:!1,error:"One or both supervisors not found"};const c=(n.teamMembers||[]).filter(f=>!s.includes(f)),u=[...o.teamMembers||[],...s],d=[{type:"update",collection:this.collectionName,id:e,data:{teamMembers:c,managedOperatorCount:c.length}},{type:"update",collection:this.collectionName,id:t,data:{teamMembers:u,managedOperatorCount:u.length}}];return(await this.transaction(d,r)).success?{success:!0,data:{fromSupervisor:{...n,teamMembers:c,managedOperatorCount:c.length},toSupervisor:{...o,teamMembers:u,managedOperatorCount:u.length},reassignedCount:s.length}}:{success:!1,error:"Failed to update supervisor assignments"}}catch(i){return{success:!1,error:i instanceof Error?i.message:"Bulk reassignment failed"}}}async getSupervisorDashboardData(e){try{const t=await this.getById(e);return!t.success||!t.data?t:{success:!0,data:{supervisor:t.data,teamStats:{totalOperators:t.data.teamMembers?.length||0,activeOperators:0,efficiency:0,qualityScore:0},lineStatus:{totalLines:t.data.responsibleLines?.length||0,activeLines:0,targetEfficiency:0,actualEfficiency:0},pendingApprovals:[],todayActivities:[]}}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Failed to get dashboard data"}}}async searchSupervisors(e,t){const s=[{field:"name",operator:">=",value:e},{field:"name",operator:"<=",value:e+""},...t?[{field:"supervisorLevel",operator:"==",value:t}]:[]];return this.query({where:s})}shouldAudit(){return!0}}class Le extends I{constructor(e){super(y.WORK_ITEMS,e)}validate(e){const t=[];return(!e.bundleNumber||typeof e.bundleNumber!="string")&&t.push("Bundle number is required and must be a string"),(!e.operation||typeof e.operation!="string")&&t.push("Operation is required and must be a string"),(!e.pieces||typeof e.pieces!="number"||e.pieces<=0)&&t.push("Pieces must be a positive number"),(!e.rate||typeof e.rate!="number"||e.rate<=0)&&t.push("Rate must be a positive number"),e.status&&!["pending","assigned","self_assigned","in_progress","completed","cancelled","on_hold"].includes(e.status)&&t.push("Invalid status value"),e.paymentStatus&&!["PENDING","HELD_FOR_DAMAGE","RELEASED","PAID"].includes(e.paymentStatus)&&t.push("Invalid payment status value"),{valid:t.length===0,errors:t}}async getByStatus(e,t){return this.getWhere("status","==",e,t)}async getAssignedToOperator(e,t){return this.getWhere("operatorId","==",e,{...t,where:[{field:"operatorId",operator:"==",value:e},{field:"status",operator:"in",value:["assigned","self_assigned","in_progress"]}]})}async getByBundle(e,t){return this.getWhere("bundleNumber","==",e,t)}async getPendingWorkItems(e){return this.getWhere("status","==","pending",e)}async getByOperation(e,t){return this.getWhere("operation","==",e,t)}async getByPaymentStatus(e,t){return this.getWhere("paymentStatus","==",e,t)}async getWorkItemsRequiringRework(e){return this.getWhere("reworkRequired","==",!0,e)}async selfAssignWorkItem(e,t,s){const r=await this.getById(e);return!r.success||!r.data?r:r.data.status!=="pending"?{success:!1,error:"Work item is not available for self-assignment",errorCode:"WORK_ITEM_NOT_AVAILABLE"}:this.update(e,{operatorId:t,status:"self_assigned",assignedAt:new Date},s)}async startWork(e,t,s){const r=await this.getById(e);return!r.success||!r.data?r:r.data.operatorId!==t?{success:!1,error:"Work item is not assigned to this operator",errorCode:"WORK_ITEM_NOT_ASSIGNED"}:["assigned","self_assigned"].includes(r.data.status)?this.update(e,{status:"in_progress",startedAt:new Date},s):{success:!1,error:"Work item cannot be started in current status",errorCode:"INVALID_STATUS_TRANSITION"}}async completeWorkItem(e,t,s){const r=await this.getById(e);if(!r.success||!r.data)return r;if(r.data.operatorId!==t.operatorId)return{success:!1,error:"Work item is not assigned to this operator",errorCode:"WORK_ITEM_NOT_ASSIGNED"};if(r.data.status!=="in_progress")return{success:!1,error:"Work item is not in progress",errorCode:"INVALID_STATUS_TRANSITION"};const i={status:"completed",completedAt:new Date,completedPieces:t.piecesCompleted,qualityScore:t.qualityScore,actualTimeMinutes:t.timeSpentMinutes,defects:t.defects,paymentStatus:"RELEASED",canWithdraw:!0},a=t.piecesCompleted*r.data.rate;return i.totalValue=a,this.update(e,i,s)}async holdPaymentForDamage(e,t,s,r){return this.update(e,{paymentStatus:"HELD_FOR_DAMAGE",canWithdraw:!1,reworkRequired:!0,reworkReason:`Payment held due to damage report: ${t}`},r)}async releaseHeldPayment(e,t){const s=await this.getById(e);return!s.success||!s.data?s:s.data.paymentStatus!=="HELD_FOR_DAMAGE"?{success:!1,error:"Payment is not currently held",errorCode:"PAYMENT_NOT_HELD"}:this.update(e,{paymentStatus:"RELEASED",canWithdraw:!0,reworkRequired:!1,reworkReason:void 0},t)}async getByDifficulty(e,t){return this.getWhere("difficulty","==",e,t)}async getWorkItemsByDateRange(e,t,s){return this.query({...s,where:[{field:"createdAt",operator:">=",value:e},{field:"createdAt",operator:"<=",value:t}]})}async getCompletedWorkItemsByDateRange(e,t,s){return this.query({...s,where:[{field:"completedAt",operator:">=",value:e},{field:"completedAt",operator:"<=",value:t},{field:"status",operator:"==",value:"completed"}]})}async getWorkItemStatistics(e){try{const t=[];e?.operatorId&&t.push({field:"operatorId",operator:"==",value:e.operatorId}),e?.bundleNumber&&t.push({field:"bundleNumber",operator:"==",value:e.bundleNumber}),e?.operation&&t.push({field:"operation",operator:"==",value:e.operation}),e?.dateFrom&&t.push({field:"createdAt",operator:">=",value:e.dateFrom}),e?.dateTo&&t.push({field:"createdAt",operator:"<=",value:e.dateTo});const s=await this.query({where:t,limit:1e4});if(!s.success||!s.data)return{success:!1,error:"Failed to fetch work items for statistics"};const r=s.data;return{success:!0,data:{totalItems:r.length,completedItems:r.filter(a=>a.status==="completed").length,pendingItems:r.filter(a=>a.status==="pending").length,inProgressItems:r.filter(a=>a.status==="in_progress").length,totalPieces:r.reduce((a,n)=>a+n.pieces,0),completedPieces:r.reduce((a,n)=>a+(n.completedPieces||0),0),totalEarnings:r.reduce((a,n)=>a+(n.totalValue||0),0),averageQuality:r.length>0?r.reduce((a,n)=>a+(n.qualityScore||0),0)/r.length:0,averageEfficiency:0}}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Failed to calculate statistics"}}}async bulkUpdateStatus(e,t,s){const r=e.map(i=>({id:i,data:{status:t}}));return this.batchUpdate(r,s)}async getWorkItemsSummary(e){try{const t=e?[{field:"operatorId",operator:"==",value:e}]:[],s=await this.query({where:t,limit:1e4});if(!s.success||!s.data)return{success:!1,error:"Failed to fetch work items summary"};const r=s.data;return{success:!0,data:{pending:r.filter(a=>a.status==="pending").length,assigned:r.filter(a=>["assigned","self_assigned"].includes(a.status)).length,inProgress:r.filter(a=>a.status==="in_progress").length,completed:r.filter(a=>a.status==="completed").length,onHold:r.filter(a=>a.status==="on_hold").length}}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Failed to get summary"}}}shouldAudit(){return!0}}class We extends I{constructor(e){super(y.BUNDLES,e)}validate(e){const t=[];return(!e.bundleNumber||typeof e.bundleNumber!="string")&&t.push("Bundle number is required and must be a string"),(!e.articleNumber||typeof e.articleNumber!="string")&&t.push("Article number is required and must be a string"),(!e.customerPO||typeof e.customerPO!="string")&&t.push("Customer PO is required and must be a string"),(!e.orderQuantity||typeof e.orderQuantity!="number"||e.orderQuantity<=0)&&t.push("Order quantity must be a positive number"),e.deliveryDate||t.push("Delivery date is required"),(!e.sizes||!Array.isArray(e.sizes)||e.sizes.length===0)&&t.push("Sizes must be provided as a non-empty array"),e.priority&&!["low","normal","high","urgent"].includes(e.priority)&&t.push("Priority must be low, normal, high, or urgent"),e.status&&!["pending","in_progress","completed","on_hold","cancelled"].includes(e.status)&&t.push("Invalid status value"),{valid:t.length===0,errors:t}}async getByStatus(e,t){return this.getWhere("status","==",e,t)}async getByPriority(e,t){return this.getWhere("priority","==",e,t)}async getByCustomerPO(e,t){return this.getWhere("customerPO","==",e,t)}async getByArticleNumber(e,t){return this.getWhere("articleNumber","==",e,t)}async getByDeliveryDateRange(e,t,s){return this.query({...s,where:[{field:"deliveryDate",operator:">=",value:e},{field:"deliveryDate",operator:"<=",value:t}]})}async getUrgentBundles(e){const t=new Date;return t.setDate(t.getDate()+3),this.query({...e,where:[{field:"priority",operator:"in",value:["high","urgent"]}]})}async getOverdueBundles(e){const t=new Date;return this.query({...e,where:[{field:"deliveryDate",operator:"<",value:t},{field:"status",operator:"!=",value:"completed"}]})}async updateProgress(e,t,s){const r=await this.getById(e);if(!r.success||!r.data)return r;const i=r.data.totalPieces,a=Math.max(0,i-t),n={completedPieces:t,remainingPieces:a};return t===0&&r.data.status==="pending"||(t>0&&t<i?n.status="in_progress":t>=i&&(n.status="completed",n.actualCompletion=new Date)),this.update(e,n,s)}async setPriority(e,t,s){return this.update(e,{priority:t},s)}async holdBundle(e,t,s){return this.update(e,{status:"on_hold"},s)}async resumeBundle(e,t){const s=await this.getById(e);if(!s.success||!s.data)return s;const r=s.data.completedPieces>0?"in_progress":"pending";return this.update(e,{status:r},t)}async cancelBundle(e,t,s){return this.update(e,{status:"cancelled"},s)}async getBundleStatistics(e){try{const t=[];e?.status&&t.push({field:"status",operator:"==",value:e.status}),e?.priority&&t.push({field:"priority",operator:"==",value:e.priority}),e?.articleNumber&&t.push({field:"articleNumber",operator:"==",value:e.articleNumber}),e?.dateFrom&&t.push({field:"createdAt",operator:">=",value:e.dateFrom}),e?.dateTo&&t.push({field:"createdAt",operator:"<=",value:e.dateTo});const s=await this.query({where:t,limit:1e4});if(!s.success||!s.data)return{success:!1,error:"Failed to fetch bundles for statistics"};const r=s.data,i=new Date;return{success:!0,data:{totalBundles:r.length,completedBundles:r.filter(n=>n.status==="completed").length,inProgressBundles:r.filter(n=>n.status==="in_progress").length,pendingBundles:r.filter(n=>n.status==="pending").length,onHoldBundles:r.filter(n=>n.status==="on_hold").length,overdueBundles:r.filter(n=>new Date(n.deliveryDate)<i&&n.status!=="completed").length,totalPieces:r.reduce((n,o)=>n+o.totalPieces,0),completedPieces:r.reduce((n,o)=>n+o.completedPieces,0),averageCompletionRate:r.length>0?r.reduce((n,o)=>{const c=o.totalPieces>0?o.completedPieces/o.totalPieces*100:0;return n+c},0)/r.length:0,averageDelayDays:0}}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Failed to calculate statistics"}}}async getBundleTimeline(e){try{return{success:!0,data:[{timestamp:new Date,event:"Bundle Created",description:"Bundle was created in the system",type:"info"}]}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Failed to get timeline"}}}async searchBundles(e,t){const s=await this.query({...t,where:[{field:"bundleNumber",operator:">=",value:e},{field:"bundleNumber",operator:"<=",value:e+""}]}),r=await this.query({...t,where:[{field:"articleNumber",operator:">=",value:e},{field:"articleNumber",operator:"<=",value:e+""}]});if(s.success&&r.success){const a=[...s.data||[],...r.data||[]].filter((n,o,c)=>c.findIndex(u=>u.id===n.id)===o);return{success:!0,data:a,metadata:{totalCount:a.length}}}return s.success?s:r}async getBundleDashboardSummary(){try{const e=await this.getAll({limit:1e4});if(!e.success||!e.data)return{success:!1,error:"Failed to fetch bundles for summary"};const t=e.data,s=new Date,r=new Date(s.getFullYear(),s.getMonth(),s.getDate());return{success:!0,data:{totalBundles:t.length,activeBundles:t.filter(a=>["pending","in_progress"].includes(a.status)).length,completedToday:t.filter(a=>a.status==="completed"&&a.actualCompletion&&new Date(a.actualCompletion)>=r).length,overdue:t.filter(a=>new Date(a.deliveryDate)<s&&a.status!=="completed").length,highPriority:t.filter(a=>["high","urgent"].includes(a.priority)).length}}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to get summary"}}}shouldAudit(){return!0}}let qe=class extends I{constructor(e){super(y.NOTIFICATIONS,e)}validate(e){const t=[];return(!e.recipientId||typeof e.recipientId!="string")&&t.push("Recipient ID is required and must be a string"),(!e.type||!["info","warning","error","success","work_assignment","quality_issue","payment","system"].includes(e.type))&&t.push("Invalid notification type"),(!e.title||typeof e.title!="string")&&t.push("Title is required and must be a string"),(!e.message||typeof e.message!="string")&&t.push("Message is required and must be a string"),(!e.priority||!["low","normal","high","urgent"].includes(e.priority))&&t.push("Priority must be low, normal, high, or urgent"),(!e.channels||!Array.isArray(e.channels)||e.channels.length===0)&&t.push("Channels must be provided as a non-empty array"),{valid:t.length===0,errors:t}}async getNotificationsForUser(e,t){const s=[{field:"recipientId",operator:"==",value:e}];return t?.unreadOnly&&s.push({field:"read",operator:"==",value:!1}),this.query({...t,where:s,orderByField:"createdAt",orderDirection:"desc"})}async getByType(e,t){return this.getWhere("type","==",e,t)}async getByPriority(e,t){return this.getWhere("priority","==",e,t)}async getUnreadCount(e){try{return{success:!0,data:(await this.query({where:[{field:"recipientId",operator:"==",value:e},{field:"read",operator:"==",value:!1}],limit:1e3})).data?.length||0}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Failed to get unread count"}}}async markAsRead(e,t){return this.update(e,{read:!0,readAt:new Date},t)}async markMultipleAsRead(e,t){const s=e.map(r=>({id:r,data:{read:!0,readAt:new Date}}));return this.batchUpdate(s,t)}async markAllAsReadForUser(e){try{const t=await this.getNotificationsForUser(e,{unreadOnly:!0});if(!t.success||!t.data||t.data.length===0)return{success:!0,data:{updated:0}};const s=t.data.map(r=>r.id);return this.markMultipleAsRead(s,e)}catch(t){return{success:!1,error:t instanceof Error?t.message:"Failed to mark all as read"}}}async createBroadcastNotification(e,t,s){try{const r=e.map(a=>({data:{...t,recipientId:a,read:!1,actionRequired:t.actionRequired||!1}})),i=await this.batchCreate(r,s);if(i.success){const a=i.results.filter(n=>n.success).map(n=>n.id);return{success:!0,data:{created:i.totalProcessed-i.totalFailed,failed:i.totalFailed,notificationIds:a}}}else return{success:!1,error:"Broadcast notification creation failed"}}catch(r){return{success:!1,error:r instanceof Error?r.message:"Failed to create broadcast notification"}}}async createSystemNotification(e,t){return this.create({...e,recipientId:"all",recipientType:"all",read:!1,actionRequired:e.actionRequired||!1},t)}async getActionRequiredNotifications(e,t){return this.query({...t,where:[{field:"recipientId",operator:"==",value:e},{field:"actionRequired",operator:"==",value:!0},{field:"read",operator:"==",value:!1}],orderByField:"createdAt",orderDirection:"desc"})}async getExpiredNotifications(e){const t=new Date;return this.query({...e,where:[{field:"expiresAt",operator:"<",value:t}]})}async cleanupExpiredNotifications(){try{const e=await this.getExpiredNotifications({limit:1e3});if(!e.success||!e.data||e.data.length===0)return{success:!0,data:{deletedCount:0}};let t=0;for(const s of e.data)(await this.delete(s.id)).success&&t++;return{success:!0,data:{deletedCount:t}}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to cleanup expired notifications"}}}async getNotificationStatistics(e,t){try{const s=[];e&&s.push({field:"recipientId",operator:"==",value:e}),t&&(s.push({field:"createdAt",operator:">=",value:t.from}),s.push({field:"createdAt",operator:"<=",value:t.to}));const r=await this.query({where:s,limit:1e4});if(!r.success||!r.data)return{success:!1,error:"Failed to fetch notifications for statistics"};const i=r.data;return{success:!0,data:{total:i.length,read:i.filter(n=>n.read).length,unread:i.filter(n=>!n.read).length,byType:i.reduce((n,o)=>(n[o.type]=(n[o.type]||0)+1,n),{}),byPriority:i.reduce((n,o)=>(n[o.priority]=(n[o.priority]||0)+1,n),{}),actionRequired:i.filter(n=>n.actionRequired&&!n.read).length}}}catch(s){return{success:!1,error:s instanceof Error?s.message:"Failed to calculate statistics"}}}subscribeToUserNotifications(e,t){return this.subscribe(t,{filter:[{field:"recipientId",operator:"==",value:e}],orderBy:{field:"createdAt",direction:"desc"},limit:50})}shouldAudit(){return!1}};new Ne({cache:{enabled:!0,ttl:600*1e3,maxSize:500,strategy:"lru",invalidateOnUpdate:!0},retry:{enabled:!0,maxAttempts:3,backoffStrategy:"exponential",baseDelay:1e3,maxDelay:1e4},performance:{enabled:!0,trackLatency:!0,trackThroughput:!0,trackErrors:!0,sampleRate:1}});new Me({cache:{enabled:!0,ttl:900*1e3,maxSize:200,strategy:"lru",invalidateOnUpdate:!0}});new Le({cache:{enabled:!0,ttl:300*1e3,maxSize:1e3,strategy:"lru",invalidateOnUpdate:!0},retry:{enabled:!0,maxAttempts:5,backoffStrategy:"exponential",baseDelay:500,maxDelay:5e3}});new We({cache:{enabled:!0,ttl:1800*1e3,maxSize:1e3,strategy:"lru",invalidateOnUpdate:!0}});new qe({cache:{enabled:!0,ttl:120*1e3,maxSize:500,strategy:"lru",invalidateOnUpdate:!1},offlineSync:!1});class Fe extends I{constructor(e){super("management",e)}validate(e){return{valid:!0,errors:[]}}}let Ue=class extends I{constructor(e){super("workAssignments",e)}validate(e){return{valid:!0,errors:[]}}};class Be extends I{constructor(e){super("productionStats",e)}validate(e){return{valid:!0,errors:[]}}}class $e extends I{constructor(e){super("qualityIssues",e)}validate(e){return{valid:!0,errors:[]}}}class ze extends I{constructor(e){super("systemSettings",e)}validate(e){return{valid:!0,errors:[]}}}new Fe;new Ue;new Be;new $e;new ze;class C{static validateSupervisorCreation(e){const t=[],s=[],r=e;(!r.username||r.username.length<3)&&t.push("Username must be at least 3 characters long"),(!e.supervisorLevel||!["junior","senior","lead"].includes(e.supervisorLevel))&&t.push("Supervisor level must be junior, senior, or lead");const i=e.experienceMonths||0,n={junior:12,senior:36,lead:60}[e.supervisorLevel];n&&i<n&&t.push(`${e.supervisorLevel} supervisor requires at least ${n} months of experience`);const c={junior:8,senior:15,lead:25}[e.supervisorLevel];e.teamMembers&&e.teamMembers.length>c&&s.push(`Team size (${e.teamMembers.length}) exceeds recommended maximum for ${e.supervisorLevel} supervisor (${c})`),(!e.responsibleLines||!Array.isArray(e.responsibleLines)||e.responsibleLines.length===0)&&t.push("Supervisor must be assigned to at least one production line");const d={junior:2,senior:4,lead:8}[e.supervisorLevel];return e.responsibleLines&&e.responsibleLines.length>d&&s.push(`Line responsibility (${e.responsibleLines.length}) exceeds recommended for ${e.supervisorLevel} supervisor (${d})`),{isValid:t.length===0,errors:t,warnings:s}}static evaluateWorkAssignment(e,t,s,r){const i=[],a=[];let n="low";if(!e.teamMembers.includes(t.id))return{canAssign:!1,reason:"Operator is not under your supervision",alternativeSuggestions:["Contact operator's direct supervisor"],requiredApprovals:[],riskLevel:"high"};if(r.currentWorkload>=t.maxConcurrentWork)return{canAssign:!1,reason:"Operator at maximum workload capacity",alternativeSuggestions:["Wait for current work completion","Reassign lower priority work","Find alternative operator"],requiredApprovals:[],riskLevel:"medium"};const o=["beginner","intermediate","advanced","expert"],c=o.indexOf(r.operatorSkillLevel),u=o.indexOf(s.requiredSkillLevel||"beginner");c<u&&(n="high",i.push("Consider providing additional supervision"),i.push("Pair with experienced operator for mentoring"),e.supervisorLevel==="junior"&&a.push("Senior supervisor approval required for skill mismatch assignments"));const d=(r.deadline.getTime()-Date.now())/(1e3*60*60);return d<24&&(n=n==="high"?"high":"medium",i.push("Monitor progress closely due to tight deadline"),d<4&&a.push("Management approval required for urgent assignments")),r.machineAvailability?(t.qualityScore<.8&&s.priority==="high"&&(n="high",i.push("Implement additional quality checks"),i.push("Consider assigning to higher quality operator"),e.supervisorLevel==="junior"&&a.push("Senior supervisor approval for high-priority work to low-quality operator")),{canAssign:!0,alternativeSuggestions:i,requiredApprovals:a,riskLevel:n}):{canAssign:!1,reason:"Required machine type not available",alternativeSuggestions:["Schedule when machine becomes available","Find operator with alternative machine skills"],requiredApprovals:[],riskLevel:"medium"}}static evaluateAssignmentRequest(e,t,s,r){const i=[],a=[];let n="junior";const o={minEfficiency:.85,minQuality:.9,maxWorkloadUtilization:.8},c=s.averageEfficiency>=o.minEfficiency&&s.qualityScore>=o.minQuality,u=["beginner","intermediate","advanced","expert"],d=u.indexOf(s.skillLevel),m=u.indexOf(r.requiredSkillLevel||"beginner"),f=Math.max(0,m-d);f>0&&(i.push(`Skill level gap: operator is ${s.skillLevel}, work requires ${r.requiredSkillLevel}`),n=f>1?"senior":"junior",a.push("Verify operator training records")),r.complexity>7&&(i.push("High complexity work item"),a.push("Ensure operator has handled similar complexity before"),n="senior");const v=(s.realtimeStatus?.currentWorkItems||0)/s.maxConcurrentWork;v>.9&&(i.push("Operator near maximum capacity"),a.push("Confirm operator can handle additional workload")),s.machineTypes.includes(r.machineType)||(i.push("Machine type not in operator certifications"),n="senior",a.push("Verify cross-training completion")),r.priority==="urgent"&&(i.push("Urgent priority work assignment"),a.push("Confirm deadline feasibility"),c||(n="senior"));const E=c&&f===0&&v<=o.maxWorkloadUtilization&&s.machineTypes.includes(r.machineType)&&r.complexity<=6&&r.priority!=="urgent"&&t.supervisorLevel!=="junior";let w="";return E?w="High-performing operator with perfect skill match and optimal workload":i.length>0?w=`Manual review required due to: ${i.join(", ")}`:w="Standard approval process required",{shouldAutoApprove:E,reason:w,requiredSupervisorLevel:n,additionalValidations:a,riskFactors:i}}static analyzeTeamProductivity(e,t,s){const r=[],i=t.reduce((u,d)=>u+d.averageEfficiency,0)/t.length,a=t.reduce((u,d)=>u+d.qualityScore,0)/t.length,n=s.completedWork.length>0?s.completedWork.filter(u=>u.status==="completed").length/s.completedWork.length:0,o=s.totalDeliveries>0?s.onTimeDeliveries/s.totalDeliveries:0,c=(i*.3+a*.3+n*.2+o*.2)*100;return i<.7&&(r.push("Implement efficiency improvement training"),r.push("Review work allocation strategies"),r.push("Consider process optimization workshops")),a<.85&&(r.push("Increase quality control measures"),r.push("Implement peer review processes"),r.push("Schedule quality training sessions")),o<.9&&(r.push("Improve deadline management"),r.push("Implement better work planning"),r.push("Review resource allocation")),n<.8&&(r.push("Investigate workflow bottlenecks"),r.push("Review task complexity assignments"),r.push("Consider team restructuring")),e.supervisorLevel==="junior"&&c<70&&(r.push("Seek senior supervisor mentoring"),r.push("Attend supervisory skill development training")),t.length>10&&e.supervisorLevel==="junior"&&r.push("Consider team size reduction or promotion to senior level"),{teamEfficiency:i,averageQuality:a,completionRate:n,onTimeDelivery:o,recommendedActions:r,teamHealthScore:Math.round(c)}}static evaluateSupervisorPerformance(e,t,s){const r=[],i=[],a=[],n=s.correctDecisions/s.decisionsMade;n>.9?r.push("Excellent decision-making skills"):n<.7&&i.push("Improve decision-making accuracy through training"),t.teamHealthScore>80?r.push("Strong team leadership and performance management"):t.teamHealthScore<60&&i.push("Focus on team productivity improvement"),s.trainingSessionsConducted>0?r.push("Active in team development and training"):i.push("Increase focus on team training and development"),s.teamSatisfactionScore>4?r.push("High team satisfaction and morale"):s.teamSatisfactionScore<3&&i.push("Improve team communication and relationship building");const o={decisionAccuracy:n*25,teamHealth:t.teamHealthScore/100*30,teamSatisfaction:s.teamSatisfactionScore/5*25,development:Math.min(s.trainingSessionsConducted*5,20)},c=Object.values(o).reduce((d,m)=>d+m,0);let u=!1;return e.supervisorLevel==="junior"&&c>=75?(u=!0,a.push("Complete senior supervisor certification"),a.push("Demonstrate team size management (10+ operators)"),a.push("Lead cross-training initiatives")):e.supervisorLevel==="senior"&&c>=85?(u=!0,a.push("Complete leadership development program"),a.push("Demonstrate multi-line management capability"),a.push("Mentor junior supervisors")):(c<60&&a.push("Improve overall performance score to 60+"),t.teamHealthScore<70&&a.push("Achieve team health score of 70+"),n<.8&&a.push("Improve decision accuracy to 80+")),{overallScore:Math.round(c),strengths:r,improvementAreas:i,promotionEligible:u,nextLevelRequirements:a}}static shouldEscalateDecision(e,t){const{type:s,impact:r,cost:i,affectedOperators:a,customerImpact:n}=t,c={junior:{maxCost:5e3,maxOperators:3,canHandleCustomerImpact:!1},senior:{maxCost:2e4,maxOperators:10,canHandleCustomerImpact:!0},lead:{maxCost:5e4,maxOperators:25,canHandleCustomerImpact:!0}}[e.supervisorLevel];return i>c.maxCost?{shouldEscalate:!0,reason:`Cost (₹${i}) exceeds supervisor authority limit (₹${c.maxCost})`,escalateTo:"management",timeframe:i>c.maxCost*2?"immediate":"within_hour"}:a>c.maxOperators?{shouldEscalate:!0,reason:`Number of affected operators (${a}) exceeds authority limit (${c.maxOperators})`,escalateTo:"senior_supervisor",timeframe:"within_hour"}:n&&!c.canHandleCustomerImpact?{shouldEscalate:!0,reason:"Customer impact decisions require higher authority",escalateTo:"management",timeframe:"immediate"}:s==="quality_issue"&&r==="high"?{shouldEscalate:!0,reason:"High impact quality issues require specialized expertise",escalateTo:"quality_head",timeframe:"immediate"}:s==="disciplinary"&&r==="high"?{shouldEscalate:!0,reason:"Serious disciplinary actions require management approval",escalateTo:"management",timeframe:"within_day"}:{shouldEscalate:!1,reason:"Within supervisor authority limits",escalateTo:"senior_supervisor",timeframe:"immediate"}}static evaluateQualityIssue(e,t){const{severity:s,affectedPieces:r,totalPieces:i,customerOrder:a,defectType:n}=t,o=r/i,c=[];return s==="critical"?(c.push("Immediate supervisor notification"),c.push("Document root cause analysis"),c.push("Implement corrective actions"),{action:"escalate",reasoning:"Critical quality issues require management decision",paymentAction:"hold_payment",additionalSteps:c}):s==="major"&&(o>.1||a)?n.includes("measurement")||n.includes("size")?(c.push("Quality team verification"),c.push("Check measurement tools calibration"),{action:"scrap",reasoning:"Size/measurement defects cannot be reworked effectively",paymentAction:"no_pay",additionalSteps:c}):(c.push("Assign to experienced operator for rework"),c.push("Additional quality inspection after rework"),{action:"rework",reasoning:"Major defects can be corrected through rework",paymentAction:"partial_pay",additionalSteps:c}):s==="minor"?o<.05?{action:"accept_with_discount",reasoning:"Minor defects with low impact rate",paymentAction:"partial_pay",additionalSteps:["Note quality concern in operator record"]}:(c.push("Provide quality feedback to operator"),c.push("Monitor next few bundles closely"),{action:"rework",reasoning:"High rate of minor defects needs correction",paymentAction:"partial_pay",additionalSteps:c}):{action:"escalate",reasoning:"Unable to determine appropriate action",paymentAction:"hold_payment",additionalSteps:["Require senior supervisor review"]}}}const te={validateSupervisorCreation:C.validateSupervisorCreation,evaluateWorkAssignment:C.evaluateWorkAssignment,evaluateAssignmentRequest:C.evaluateAssignmentRequest,analyzeTeamProductivity:C.analyzeTeamProductivity,evaluateSupervisorPerformance:C.evaluateSupervisorPerformance,shouldEscalateDecision:C.shouldEscalateDecision,evaluateQualityIssue:C.evaluateQualityIssue};class Q{static evaluateResourceAllocation(e,t,s,r){const i=[],a=[];let n=0;s.sort((u,d)=>{const m=this.calculateBundlePriority(u,r);return this.calculateBundlePriority(d,r)-m}),this.groupOperatorsBySkill(e);for(const u of t){const d=e.filter(w=>w.machineTypes.includes(u.machineType)&&w.currentStatus==="idle");if(d.length===0){i.push(`No available operators for ${u.name}`);continue}const m=Math.min(d.length,u.maxOperators,Math.ceil(u.targetEfficiency*u.maxOperators)),f=d.sort((w,L)=>L.averageEfficiency*L.qualityScore-w.averageEfficiency*w.qualityScore).slice(0,m),v=f.reduce((w,L)=>w+L.averageEfficiency,0)/f.length,E=m*v*u.hoursPerDay*u.averageRatePerHour;a.push({lineId:u.id,allocatedOperators:m,expectedEfficiency:v,predictedOutput:E}),n+=E*u.profitMarginPerPiece}const o=a.filter(u=>u.allocatedOperators<3);return o.length>0&&i.push(`${o.length} production lines under-utilized`),e.filter(u=>u.realtimeStatus?.currentWorkItems>u.maxConcurrentWork*.9).length>e.length*.3&&i.push("Over 30% of operators at maximum capacity"),{canAllocate:a.length>0,optimizedDistribution:a,riskFactors:i,expectedROI:n,timeToBreakeven:n>0?30:void 0}}static evaluateBudgetRequest(e,t,s){const r=[],i=[];let a="medium";if(e.amount>t.remaining)return{approved:!1,approvedAmount:0,conditions:[`Request exceeds available budget by ₹${e.amount-t.remaining}`],paybackPeriod:0,riskAssessment:"high",alternatives:["Request budget reallocation from other departments","Phase the investment over multiple quarters","Seek partial approval for critical components only"]};let n=.7,o=12;switch(e.category){case"equipment":n=.6,o=8,e.amount>1e5&&(r.push("Requires detailed equipment ROI analysis"),r.push("Must include maintenance cost projections"));break;case"training":n=.8,o=18,r.push("Must track skill improvement metrics"),r.push("Require training completion certificates");break;case"technology":n=.7,o=10,e.amount>2e5&&(r.push("Pilot implementation required first"),r.push("Vendor support agreement mandatory"));break;case"infrastructure":n=.5,o=24,r.push("Must improve overall facility efficiency");break;case"expansion":n=.8,o=15,r.push("Market demand analysis required"),r.push("Gradual rollout plan mandatory");break}const c=s.previousRequestsROI.length>0?s.previousRequestsROI.reduce((v,E)=>v+E,0)/s.previousRequestsROI.length:.5;c<.3?(a="high",n+=.2,r.push("Enhanced monitoring and reporting required due to low historical ROI")):c>.8&&(a="low",n-=.1),s.departmentEfficiency<.7&&(r.push("Department must improve efficiency metrics before additional investment"),n+=.15),s.pastBudgetUtilization<.8&&(r.push("Must improve budget utilization (currently "+Math.round(s.pastBudgetUtilization*100)+"%)"),a="medium");const u=e.amount/t.total;u>.3?(a="high",r.push("Large investment requires board approval"),r.push("Phased implementation plan required")):u<.05&&(a="low");const m=(c+s.departmentEfficiency+s.pastBudgetUtilization)/3>=n,f=m?e.amount:Math.min(e.amount*.5,t.remaining*.2);return!m&&f>0&&(i.push(`Partial approval of ₹${f} available`),i.push("Resubmit with improved justification and reduced scope")),{approved:m,approvedAmount:m?e.amount:f,conditions:r,paybackPeriod:o,riskAssessment:a,alternatives:m?void 0:i}}static analyzeCompanyPerformance(e,t,s,r){const i=[],a=[],n=Math.min(t.profitMargin*100,100),o=t.budgetUtilization*100,c=(n+o)/2,u=e.activeOperators/e.totalOperators*100,d=e.averageEfficiency*100,m=e.qualityScore*100,f=e.onTimeDelivery*100,v=(u+d+m+f)/4,E=s.marketShare*100,w=s.competitorAnalysis*100,L=e.customerSatisfactionScore/5*100,we=s.customerRetentionRate*100,Y=(E+w+L+we)/4,Se=Math.min(s.growthRate*10,100),be=this.calculateTrendScore(r),ne=Math.min(Se+be,100);return c<60&&(i.push("Implement cost reduction strategies"),i.push("Review pricing strategy and profit margins"),i.push("Optimize resource allocation"),a.push({metric:"Financial Health",current:Math.round(c),target:75,trend:r.profitabilityTrend})),v<70&&(i.push("Invest in operator training and development"),i.push("Upgrade equipment and technology"),i.push("Implement lean manufacturing principles"),a.push({metric:"Operational Efficiency",current:Math.round(v),target:85,trend:r.efficiencyTrend})),Y<65&&(i.push("Enhance customer relationship management"),i.push("Improve product quality and delivery times"),i.push("Develop competitive market strategies"),a.push({metric:"Market Position",current:Math.round(Y),target:80,trend:"stable"})),ne<50&&(i.push("Explore new market opportunities"),i.push("Invest in innovation and product development"),i.push("Consider strategic partnerships or acquisitions")),e.averageEfficiency<.75&&i.push("Conduct efficiency improvement workshops"),e.qualityScore<.85&&i.push("Implement comprehensive quality management system"),e.onTimeDelivery<.9&&i.push("Improve production planning and scheduling"),{financialHealth:Math.round(c),operationalEfficiency:Math.round(v),marketPosition:Math.round(Y),growthPotential:Math.round(ne),recommendedActions:i,criticalMetrics:a}}static evaluateExpansionOpportunity(e,t,s){const r=[],i=[],a=[];if(e.investmentRequired>s.availableCapital*.8)return r.push("Investment exceeds 80% of available capital"),i.push("Seek external financing"),i.push("Phase the expansion over multiple periods"),{recommendation:"modify",reasoning:r,alternativeOptions:i,riskMitigation:["Secure financing before proceeding","Reduce initial investment scope"]};if(e.marketDemand<.6)return r.push("Market demand below acceptable threshold (60%)"),i.push("Conduct additional market research"),i.push("Consider different market segments"),{recommendation:"postpone",reasoning:r,alternativeOptions:i,riskMitigation:["Wait for market conditions to improve","Develop demand creation strategies"]};if(e.type==="capacity_expansion"&&t.utilizationRate<.85)return r.push("Current capacity not optimally utilized (less than 85%)"),i.push("Focus on improving current utilization first"),i.push("Optimize existing operations"),{recommendation:"postpone",reasoning:r,alternativeOptions:i,riskMitigation:["Achieve 85% utilization before expanding","Implement efficiency improvements"]};const o=(e.expectedRevenue-e.investmentRequired)/e.investmentRequired/(e.timeToMarket/12);return o<.15?(r.push("Expected ROI below minimum threshold (15% annually)"),i.push("Revise revenue projections"),i.push("Reduce investment costs"),{recommendation:"modify",reasoning:r,alternativeOptions:i,riskMitigation:["Improve cost-benefit analysis","Seek higher-margin opportunities"]}):(e.riskFactors.filter(u=>u.includes("high")||u.includes("critical")||u.includes("uncertain")).length>2&&(r.push("Multiple high-risk factors identified"),a.push("Develop comprehensive risk mitigation plan"),a.push("Create contingency strategies"),a.push("Consider insurance coverage")),s.debtToEquityRatio>.6&&(r.push("High debt-to-equity ratio may limit financing options"),a.push("Consider equity financing over debt"),a.push("Improve debt position before expansion")),r.push(`Strong market demand (${Math.round(e.marketDemand*100)}%)`),r.push(`Good expected ROI (${Math.round(o*100)}% annually)`),r.push("Financial position supports investment"),{recommendation:"approve",reasoning:r,alternativeOptions:[],riskMitigation:a})}static calculateBundlePriority(e,t){const s=t.find(a=>a.articleTypes.includes(e.articleNumber)),r=e.priority==="urgent"?1:e.priority==="high"?.8:e.priority==="normal"?.5:.2,i=s?s.urgency*s.profitMargin:.3;return r*.4+i*.6}static groupOperatorsBySkill(e){return e.reduce((t,s)=>{const r=s.skillLevel;return t[r]||(t[r]=[]),t[r].push(s),t},{})}static calculateTrendScore(e){let t=0;return Object.values(e).forEach(s=>{s==="up"?t+=10:s==="down"&&(t-=5)}),t}}const Ve={evaluateResourceAllocation:Q.evaluateResourceAllocation,evaluateBudgetRequest:Q.evaluateBudgetRequest,analyzeCompanyPerformance:Q.analyzeCompanyPerformance,evaluateExpansionOpportunity:Q.evaluateExpansionOpportunity},U={calculateBasePayment:(l,e)=>{const t=parseFloat(l.toString())||0,s=parseInt(e.toString())||0;return t*s},calculateWithEfficiencyBonus:(l,e,t=.9)=>{if(e>=t){let s=0;return e>=1.2?s=.5:e>=1?s=.2+(e-1)/.2*.3:e>=.95?s=.1+(e-.95)/.05*.1:s=(e-t)*2,l*(1+Math.min(s,.5))}return l},calculateQualityBonus:(l,e)=>e>=.98?l*.15:e>=.95?l*.1:e>=.9?l*.05:0,calculateDamageAwarePayment:(l,e,t=[])=>{const s=U.calculateBasePayment(l.rate,e.piecesCompleted),r=t.filter(u=>["stitching_defect","needle_damage","tension_issue","alignment_error","wrong_measurement","missing_operation"].includes(u.damageType)),i=t.filter(u=>["fabric_defect","material_issue","machine_malfunction","design_error"].includes(u.damageType)),a=[];let n=0;r.forEach(u=>{const d=U.calculateDamageDeduction(u,s,l.totalPieces);a.push(d),n+=d.deductionAmount});let o=0;const c={};if(e.efficiency){const u=U.calculateWithEfficiencyBonus(s,e.efficiency)-s;o+=u,c.efficiencyBonus=u}if(e.qualityScore){const u=U.calculateQualityBonus(s,e.qualityScore);o+=u,c.qualityBonus=u}return{basePayment:s,penalties:n,bonuses:o,finalPayment:Math.max(0,s+o-n),operatorFaultDamages:r.length,nonOperatorFaultDamages:i.length,details:{...c,damageDeductions:a}}},calculateDamageDeduction:(l,e,t)=>{if(l.operatorFault===!1)return{damageType:l.damageType,severity:l.severity,affectedPieces:l.affectedPieces,deductionAmount:0,deductionPercentage:0};let s=0;const i={broken_stitch:{minor:.05,major:.15,severe:.25},wrong_measurement:{minor:.1,major:.2,severe:.35},fabric_damage:{minor:.1,major:.25,severe:.4},missing_operation:{minor:.2,major:.3,severe:.5},stitching_defect:{minor:.08,major:.18,severe:.3},needle_damage:{minor:.12,major:.22,severe:.35},tension_issue:{minor:.06,major:.16,severe:.28},alignment_error:{minor:.1,major:.2,severe:.32}}[l.damageType];i?s=i[l.severity]||i.minor:s=l.severity==="major"?.15:l.severity==="severe"?.25:.05;const a=l.affectedPieces||1,n=a/t,o=Math.round(e*s*n);return{damageType:l.damageType,severity:l.severity,affectedPieces:a,deductionAmount:o,deductionPercentage:s}}},ae={calculatePriorityScore:l=>{const t={urgent:5,high:4,normal:3,low:2}[l.priority]||3,s=new Date(l.dueDate),r=new Date,i=Math.ceil((s.getTime()-r.getTime())/(1e3*60*60*24));let a=0;i<=1?a=10:i<=3?a=7:i<=7?a=5:i<=14?a=3:a=1;const n=l.complexity?Math.min(l.complexity,3):0,o=l.customerImportance?l.customerImportance:0;return t*2+a+n+o},calculateMatchScore:(l,e)=>{let t=0;const s=[];let r=0;e.machineTypes?.includes(l.machineType)?(r=50,s.push("Perfect machine compatibility")):ae.getRelatedMachineTypes(l.machineType).some(w=>e.machineTypes?.includes(w))?(r=25,s.push("Related machine experience")):(r=0,s.push("Machine type mismatch")),t+=r;let i=0;const a=["beginner","intermediate","advanced","expert"],n=a.indexOf(l.requiredSkillLevel||"beginner"),o=a.indexOf(e.skillLevel||"beginner");o>=n?(i=30,o===n?(i+=10,s.push("Perfect skill level match")):s.push("Skill level exceeds requirement")):(i=Math.max(0,20-(n-o)*10),s.push("Skill level below requirement")),t+=i;let c=20;const u=e.currentAssignments?.length||0,d=e.maxConcurrentWork||5,m=u/d;m>=1?(c=0,s.push("At maximum capacity")):m>=.8?(c=5,s.push("Near maximum capacity")):m>=.6?(c=15,s.push("Moderate workload")):(c=20,s.push("Light workload")),t+=c;let f=0;return e.averageEfficiency&&e.averageEfficiency>.8&&(f+=8,s.push("High efficiency operator")),e.qualityScore&&e.qualityScore>.9&&(f+=7,s.push("High quality operator")),t+=f,{totalScore:Math.min(t,100),machineCompatibilityScore:r,skillLevelScore:i,workloadScore:c,performanceScore:f,reasons:s.slice(0,3)}},getRelatedMachineTypes:l=>({overlock:["flatlock","serger"],flatlock:["overlock","coverstitch"],singleNeedle:["doubleNeedle","straightStitch"],buttonhole:["buttonAttach","bartack"],cutting:["rotaryCutter","bandKnife"],pressing:["steam","ironPress"]})[l]||[]},ye={calculateQualityScore:(l,e=[])=>{if(l===0)return 1;const t=e.reduce((r,i)=>r+(i.affectedPieces||1),0);return Math.max(0,l-t)/l},calculateQualityMetrics:(l,e=[])=>{const t=ye.calculateQualityScore(l,e),s=l>0?e.reduce((o,c)=>o+(c.affectedPieces||1),0)/l:0,r={minor:0,major:0,severe:0};e.forEach(o=>{const c=o.severity||"minor";r[c]=(r[c]||0)+(o.affectedPieces||1)});let i=0;const a={minor:.3,major:.7,severe:1};Object.entries(r).forEach(([o,c])=>{i+=c/l*(a[o]||.3)});const n=i>.1?"major":i>.05?"minor":"minimal";return{qualityScore:t,defectRate:s,impactScore:i,category:n,severityBreakdown:r}},calculateDefectImpact:(l,e,t)=>{const r={fabric_hole:.9,color_issue:.6,stitching_defect:1,size_issue:.95,alignment_error:.7,broken_stitch:.8,wrong_measurement:.9,missing_operation:1,needle_damage:.75,tension_issue:.65}[l]||.5,i=e/t,a=r*i;return{impactScore:a,category:a>.1?"major":a>.05?"minor":"minimal"}}},ve={calculateEfficiency:(l,e)=>!l||!e||l<=0?0:Math.min(2,e/l),calculateEfficiencyMetrics:(l,e,t,s)=>{const r=ve.calculateEfficiency(l,e),i=l>0?t/(l/60):0,a=s>0?Math.min(1,l/s):0,n=(r*.7+a*.3)*100;return{efficiency:r,piecesPerHour:i,timeUtilization:a,productivityIndex:Math.round(n)}},calculateDailyMetrics:l=>{const e=l.reduce((i,a)=>i+(a.completedPieces||0),0),t=l.reduce((i,a)=>i+(a.timeSpent||0),0),s=l.length>0?l.reduce((i,a)=>i+(a.efficiency||0),0)/l.length:0,r=l.length>0?l.reduce((i,a)=>i+(a.qualityScore||1),0)/l.length:1;return{totalPieces:e,totalTime:t,averageEfficiency:s,bundlesCompleted:l.length,piecesPerHour:t>0?e/(t/60):0,qualityScore:r}},calculateLineEfficiency:l=>l.length===0?0:l.reduce((t,s)=>t+(s.efficiency||0),0)/l.length},Qe={generateRecommendations:(l,e)=>{let t=50;const s=[],r=ae.calculateMatchScore(l,e);if(r.machineCompatibilityScore>=50)t+=40,s.push("Perfect machine match");else if(r.machineCompatibilityScore>=25)t+=20,s.push("Related machine experience");else return t=10,s.push("Machine mismatch"),{match:t,reasons:s};return r.skillLevelScore>=30?(t+=15,s.push("Suitable skill level")):r.skillLevelScore>=20&&(t+=10,s.push("Adequate skill level")),r.workloadScore>=15?(t+=10,s.push("Good availability")):r.workloadScore>=5&&(t+=5,s.push("Limited availability")),(l.priority==="urgent"||l.priority==="high")&&(t+=5,s.push("High priority work")),e.averageEfficiency>.85&&e.qualityScore>.9?(t+=10,s.push("Excellent performer")):(e.averageEfficiency>.75||e.qualityScore>.85)&&(t+=5,s.push("Good performer")),(l.estimatedTime||l.standardTime||30)<30&&(t+=5,s.push("Quick work")),{match:Math.min(t,100),reasons:s.slice(0,3)}}},se={TIME_MULTIPLIER:1.9,calculateTimeFromRate:l=>parseFloat((l*se.TIME_MULTIPLIER).toFixed(1)),calculateRateFromTime:l=>parseFloat((l/se.TIME_MULTIPLIER).toFixed(2)),calculateStandardTime:(l,e,t)=>{const s=1+(e-5)*.1,i={manual:1.3,overlock:1,flatlock:1.1,buttonhole:1.2,cutting:.8,pressing:.9}[t]||1;return l*s*i}},O={paymentLogic:U,workAssignmentLogic:ae,qualityLogic:ye,metricsLogic:ve,recommendationEngine:Qe,operationRateService:se};class He{static async createOperator(e){try{const t=_.validateOperatorCreation(e);if(!t.isValid)return{success:!1,error:t.errors.join(", "),code:"VALIDATION_FAILED"};const s={...e,createdAt:g(),updatedAt:g(),active:!0,realtimeStatus:{status:"idle",currentWorkItems:0,lastUpdated:g()}},r=await z(P(h,y.OPERATORS),s);return await z(P(h,y.OPERATOR_WALLETS),{operatorId:r.id,availableAmount:0,heldAmount:0,totalEarned:0,heldBundles:[],canWithdraw:!0,lastUpdated:g(),createdAt:g()}),await B(R(b,`${k.OPERATOR_STATUS}/${r.id}`),{status:"idle",currentWorkItems:0,lastUpdated:x(),currentLocation:e.defaultStation||"unassigned",machineStatus:"ready"}),{success:!0,data:{id:r.id,...s},metadata:{warnings:t.warnings,validationPassed:!0}}}catch(t){return console.error("Error creating operator:",t),{success:!1,error:t instanceof Error?t.message:"Failed to create operator",code:"CREATION_FAILED"}}}static async getOperatorPerformance(e){try{const t=await G(S(h,y.OPERATORS,e));if(!t.exists())return{success:!1,error:"Operator not found",code:"NOT_FOUND"};const s={id:t.id,...t.data()},r=_.analyzePerformance(s);return{success:!0,data:{operator:s,performance:r,timestamp:new Date().toISOString()}}}catch(t){return console.error("Error getting operator performance:",t),{success:!1,error:t instanceof Error?t.message:"Failed to get performance",code:"PERFORMANCE_FETCH_FAILED"}}}static async updateOperatorStatus(e,t,s){try{const r=j(h),i=S(h,y.OPERATORS,e);if(r.update(i,{...t,updatedAt:g(),updatedBy:s}),t.currentStatus){const a=R(b,`${k.OPERATOR_STATUS}/${e}`);await Te(a,{status:t.currentStatus,lastUpdated:x()})}return await r.commit(),{success:!0,data:{operatorId:e,updates:t}}}catch(r){return console.error("Error updating operator:",r),{success:!1,error:r instanceof Error?r.message:"Failed to update operator",code:"UPDATE_FAILED"}}}}class Ge{static async createWorkAssignment(e){try{const t=A(P(h,y.OPERATORS),V("active","==",!0),V("currentStatus","==","idle")),i=(await fe(t)).docs.map(o=>({id:o.id,...o.data()})).map(o=>({operator:o,recommendation:O.recommendationEngine.generateRecommendations(e,o),matchScore:O.workAssignmentLogic.calculateMatchScore(e,o)}));i.sort((o,c)=>c.matchScore.totalScore-o.matchScore.totalScore);const a={...e,status:"available",priority:O.workAssignmentLogic.calculatePriorityScore(e),aiRecommendations:i.slice(0,5),createdAt:g(),updatedAt:g()},n=await z(P(h,y.WORK_ITEMS),a);return await B(R(b,`${k.AVAILABLE_WORK}/${n.id}`),{...a,createdAt:x()}),{success:!0,data:{id:n.id,...a,topRecommendations:i.slice(0,3)}}}catch(t){return console.error("Error creating work assignment:",t),{success:!1,error:t instanceof Error?t.message:"Failed to create work assignment",code:"ASSIGNMENT_CREATION_FAILED"}}}static async processSelfAssignment(e,t,s){try{return await ie(h,async r=>{const i=S(h,y.WORK_ITEMS,e),a=S(h,y.OPERATORS,t),[n,o]=await Promise.all([r.get(i),r.get(a)]);if(!n.exists()||!o.exists())throw new Error("Work item or operator not found");const c=n.data(),u=o.data();if(c?.status!=="available")throw new Error("Work item is no longer available");const d=_.validateWorkAssignment(u,{machineType:c?.machineType,estimatedDuration:c?.estimatedDuration||30,skillRequired:c?.requiredSkillLevel||"beginner",priority:c?.priority||"normal"});if(!d.canAssign)throw new Error(d.reason||"Cannot assign work");r.update(i,{status:"assigned",operatorId:t,assignedAt:g(),assignmentType:"self_assigned",assignmentReason:s,assignmentValidation:d});const m=u.realtimeStatus?.currentWorkItems||0;r.update(a,{currentStatus:"working","realtimeStatus.currentWorkItems":m+1,"realtimeStatus.lastUpdated":g()});const f={workItemId:e,operatorId:t,assignedAt:g(),assignmentType:"self_assigned",status:"active",validation:d,reason:s},v=S(P(h,y.WORK_ASSIGNMENTS));return r.set(v,f),{success:!0,data:{assignmentId:v.id,workItemId:e,operatorId:t,validation:d}}})}catch(r){return console.error("Error processing self-assignment:",r),{success:!1,error:r instanceof Error?r.message:"Assignment failed",code:"SELF_ASSIGNMENT_FAILED"}}}}class je{static async processDamageReport(e){try{return await ie(h,async t=>{const s=S(h,y.WORK_ITEMS,e.workItemId),r=S(h,y.OPERATORS,e.operatorId),[i,a]=await Promise.all([t.get(s),t.get(r)]);if(!i.exists()||!a.exists())throw new Error("Work item or operator not found");const n=i.data(),o=a.data(),c=O.paymentLogic.calculateDamageAwarePayment({rate:n?.ratePerPiece||0,totalPieces:n?.totalPieces||0},{piecesCompleted:n?.completedPieces||0,efficiency:o.averageEfficiency,qualityScore:o.qualityScore},[e]),u={...e,paymentImpact:c,status:"reported",reportedAt:g(),resolved:!1},d=S(P(h,y.DAMAGE_REPORTS));if(t.set(d,u),e.operatorFault&&c.penalties>0){const f=A(P(h,y.OPERATOR_WALLETS),V("operatorId","==",e.operatorId),ee(1));t.update(r,{"paymentStatus.held":!0,"paymentStatus.heldAmount":c.penalties,"paymentStatus.reason":"damage_reported",updatedAt:g()})}const m=O.qualityLogic.calculateQualityMetrics(n?.completedPieces||0,[e]);return t.update(s,{qualityScore:m.qualityScore,defectRate:m.defectRate,qualityMetrics:m,lastDamageReport:d.id,updatedAt:g()}),{success:!0,data:{damageReportId:d.id,paymentImpact:c,qualityMetrics:m,actionTaken:e.operatorFault?"payment_held":"no_penalty"}}})}catch(t){return console.error("Error processing damage report:",t),{success:!1,error:t instanceof Error?t.message:"Failed to process damage report",code:"DAMAGE_PROCESSING_FAILED"}}}}class Ke{static async processAssignmentApproval(e,t,s,r){try{const i=await G(S(h,y.WORK_ASSIGNMENTS,e));if(!i.exists())return{success:!1,error:"Assignment request not found",code:"NOT_FOUND"};const a=i.data(),n=await G(S(h,y.SUPERVISORS,t));if(!n.exists())return{success:!1,error:"Supervisor not found",code:"UNAUTHORIZED"};const o=n.data(),c={status:s==="approve"?"approved":"rejected",processedBy:t,processedAt:g(),processingNotes:r,finalDecision:s};if(await he(S(h,y.WORK_ASSIGNMENTS,e),c),s==="approve"){const u=j(h),d=S(h,y.WORK_ITEMS,a.workItemId);u.update(d,{status:"assigned",supervisorApproved:!0,approvedBy:t,approvedAt:g()});const m=S(h,y.OPERATORS,a.operatorId);u.update(m,{currentStatus:"working","realtimeStatus.currentWorkItems":Ee(1),"realtimeStatus.lastUpdated":g()}),await u.commit()}return{success:!0,data:{requestId:e,decision:s,processedBy:t,notes:r}}}catch(i){return console.error("Error processing assignment approval:",i),{success:!1,error:i instanceof Error?i.message:"Failed to process approval",code:"APPROVAL_PROCESSING_FAILED"}}}}class Je{static listeners=new Map;static subscribeToOperatorStatus(e,t){const s=R(b,`${k.OPERATOR_STATUS}/${e}`),r=K(s,a=>{const n=a.val();t(n)}),i=`operator_${e}`;return this.listeners.set(i,r),()=>{r(),this.listeners.delete(i)}}static subscribeToAvailableWork(e){const t=R(b,k.AVAILABLE_WORK),s=K(t,i=>{const a=i.val(),n=a?Object.keys(a).map(o=>({id:o,...a[o]})):[];e(n)}),r="available_work";return this.listeners.set(r,s),()=>{s(),this.listeners.delete(r)}}static cleanup(){this.listeners.forEach(e=>{e()}),this.listeners.clear()}}const M={operator:He,workAssignment:Ge,quality:je,supervisor:Ke,realtime:Je};class Ye{workflows=new Map;transitions=new Map;listeners=new Map;registerWorkflow(e){this.workflows.set(e.id,e)}registerTransitions(e,t){this.transitions.set(e,t)}async startWorkflow(e,t,s="normal"){try{const r=`${e}_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,i={id:r,name:this.getWorkflowName(e),type:e,steps:this.getWorkflowSteps(e),currentStep:this.getWorkflowSteps(e)[0]?.id||"",status:"initialized",priority:s,createdAt:new Date,updatedAt:new Date,context:t,notifications:[]};return this.workflows.set(r,i),await this.moveToNextStep(r),{success:!0,workflowId:r}}catch(r){return console.error("Error starting workflow:",r),{success:!1,error:r instanceof Error?r.message:"Failed to start workflow"}}}async moveToNextStep(e){try{const t=this.workflows.get(e);if(!t)return{success:!1,error:"Workflow not found"};const s=t.steps.find(n=>n.id===t.currentStep);if(!s)return{success:!1,error:"Current step not found"};const r=s.dependencies.filter(n=>t.steps.find(c=>c.id===n)?.status!=="completed");if(r.length>0)return{success:!1,error:`Unmet dependencies: ${r.join(", ")}`};const i=await this.executeStep(t,s);if(!i.success)return s.status="failed",t.status="failed",this.addNotification(t,"error",i.error||"Step execution failed"),i;s.status="completed",s.completedAt=new Date,s.startedAt&&(s.actualDuration=s.completedAt.getTime()-s.startedAt.getTime());const a=this.findNextStep(t);return a?(t.currentStep=a.id,a.status="in_progress",a.startedAt=new Date,t.status="running"):(t.status="completed",t.completedAt=new Date,this.addNotification(t,"success","Workflow completed successfully")),t.updatedAt=new Date,this.notifyListeners(e,t),{success:!0}}catch(t){return console.error("Error moving to next step:",t),{success:!1,error:t instanceof Error?t.message:"Failed to move to next step"}}}async executeStep(e,t){try{switch(e.type){case"work_assignment":return await this.executeWorkAssignmentStep(e,t);case"quality_control":return await this.executeQualityControlStep(e,t);case"damage_resolution":return await this.executeDamageResolutionStep(e,t);case"payment_processing":return await this.executePaymentProcessingStep(e,t);case"operator_onboarding":return await this.executeOperatorOnboardingStep(e,t);default:return{success:!1,error:`Unknown workflow type: ${e.type}`}}}catch(s){return console.error(`Error executing step ${t.id}:`,s),{success:!1,error:s instanceof Error?s.message:"Step execution failed"}}}async executeWorkAssignmentStep(e,t){const{context:s}=e;switch(t.id){case"validate_assignment":const r=_.validateWorkAssignment(s.operator,{machineType:s.workItem.machineType,estimatedDuration:s.workItem.estimatedDuration,skillRequired:s.workItem.requiredSkillLevel,priority:s.workItem.priority});return r.canAssign?(e.context.assignmentValidation=r,{success:!0,data:r}):{success:!1,error:r.reason};case"check_supervisor_approval":const i=te.evaluateAssignmentRequest(s.assignmentRequest,s.supervisor,s.operator,s.workItem);return e.context.approvalDecision=i,i.shouldAutoApprove?{success:!0,data:{requiresApproval:!1}}:(this.addNotification(e,"info","Supervisor approval required"),t.assignedTo=s.supervisor.id,{success:!0,data:{requiresApproval:!0}});case"assign_work":const a=await M.workAssignment.processSelfAssignment(s.workItem.id,s.operator.id,s.assignmentRequest.reason);return a.success?(e.context.assignmentResult=a.data,this.addNotification(e,"success","Work assigned successfully"),{success:!0,data:a.data}):{success:!1,error:a.error};case"update_realtime_status":return await M.operator.updateOperatorStatus(s.operator.id,{currentStatus:"working",realtimeStatus:{status:"working",currentWorkItems:(s.operator.realtimeStatus?.currentWorkItems||0)+1,lastUpdated:new Date}});default:return{success:!1,error:`Unknown work assignment step: ${t.id}`}}}async executeQualityControlStep(e,t){const{context:s}=e;switch(t.id){case"assess_damage":const r=O.qualityLogic.calculateDefectImpact(s.damageReport.damageType,s.damageReport.affectedPieces,s.workItem.totalPieces);return e.context.damageImpact=r,{success:!0,data:r};case"determine_supervisor_action":const i=te.evaluateQualityIssue(s.supervisor,{bundleId:s.workItem.bundleId,operatorId:s.operator.id,defectType:s.damageReport.damageType,severity:s.damageReport.severity,affectedPieces:s.damageReport.affectedPieces,totalPieces:s.workItem.totalPieces,customerOrder:s.workItem.isCustomerOrder||!1});return e.context.qualityDecision=i,this.addNotification(e,"info",`Quality action: ${i.action}`),{success:!0,data:i};case"process_payment_impact":const a=O.paymentLogic.calculateDamageAwarePayment({rate:s.workItem.ratePerPiece,totalPieces:s.workItem.totalPieces},{piecesCompleted:s.workItem.completedPieces,efficiency:s.operator.averageEfficiency,qualityScore:s.operator.qualityScore},[s.damageReport]);return e.context.paymentCalculation=a,{success:!0,data:a};case"create_damage_report":return await M.quality.processDamageReport({workItemId:s.workItem.id,operatorId:s.operator.id,supervisorId:s.supervisor.id,damageType:s.damageReport.damageType,severity:s.damageReport.severity,affectedPieces:s.damageReport.affectedPieces,description:s.damageReport.description,operatorFault:s.damageReport.operatorFault});default:return{success:!1,error:`Unknown quality control step: ${t.id}`}}}async executeDamageResolutionStep(e,t){return{success:!0,data:`Damage resolution step ${t.id} executed`}}async executePaymentProcessingStep(e,t){return{success:!0,data:`Payment processing step ${t.id} executed`}}async executeOperatorOnboardingStep(e,t){const{context:s}=e;switch(t.id){case"validate_operator_data":const r=_.validateOperatorCreation(s.operatorData);return r.isValid?(e.context.validation=r,{success:!0,data:r}):{success:!1,error:r.errors.join(", ")};case"create_operator_account":const i=await M.operator.createOperator(s.operatorData);return i.success?(e.context.operatorId=i.data?.id,{success:!0,data:i.data}):{success:!1,error:i.error};case"assign_training_tasks":const a=_.recommendTraining({...s.operatorData,id:e.context.operatorId});return e.context.trainingTasks=a,this.addNotification(e,"info",`${a.length} training tasks assigned`),{success:!0,data:a};default:return{success:!1,error:`Unknown onboarding step: ${t.id}`}}}getWorkflowName(e){return{work_assignment:"Work Assignment Process",quality_control:"Quality Control Process",damage_resolution:"Damage Resolution Process",payment_processing:"Payment Processing",operator_onboarding:"Operator Onboarding"}[e]||e}getWorkflowSteps(e){return{work_assignment:[{id:"validate_assignment",name:"Validate Assignment",status:"pending",dependencies:[],estimatedDuration:1e3},{id:"check_supervisor_approval",name:"Check Supervisor Approval",status:"pending",dependencies:["validate_assignment"],estimatedDuration:5e3},{id:"assign_work",name:"Assign Work",status:"pending",dependencies:["check_supervisor_approval"],estimatedDuration:2e3},{id:"update_realtime_status",name:"Update Realtime Status",status:"pending",dependencies:["assign_work"],estimatedDuration:1e3}],quality_control:[{id:"assess_damage",name:"Assess Damage Impact",status:"pending",dependencies:[],estimatedDuration:2e3},{id:"determine_supervisor_action",name:"Determine Supervisor Action",status:"pending",dependencies:["assess_damage"],estimatedDuration:3e3},{id:"process_payment_impact",name:"Process Payment Impact",status:"pending",dependencies:["determine_supervisor_action"],estimatedDuration:2e3},{id:"create_damage_report",name:"Create Damage Report",status:"pending",dependencies:["process_payment_impact"],estimatedDuration:1e3}],operator_onboarding:[{id:"validate_operator_data",name:"Validate Operator Data",status:"pending",dependencies:[],estimatedDuration:1e3},{id:"create_operator_account",name:"Create Operator Account",status:"pending",dependencies:["validate_operator_data"],estimatedDuration:3e3},{id:"assign_training_tasks",name:"Assign Training Tasks",status:"pending",dependencies:["create_operator_account"],estimatedDuration:2e3}]}[e]||[]}findNextStep(e){return e.steps.find(t=>t.status==="pending"&&t.dependencies.every(s=>e.steps.find(i=>i.id===s)?.status==="completed"))||null}addNotification(e,t,s,r=[]){e.notifications.push({type:t,message:s,timestamp:new Date,recipients:r,read:!1})}notifyListeners(e,t){(this.listeners.get(e)||[]).forEach(r=>{try{r(t)}catch(i){console.error("Error in workflow listener:",i)}})}getWorkflow(e){return this.workflows.get(e)||null}getAllWorkflows(){return Array.from(this.workflows.values())}subscribeToWorkflow(e,t){return this.listeners.has(e)||this.listeners.set(e,[]),this.listeners.get(e).push(t),()=>{const s=this.listeners.get(e)||[],r=s.indexOf(t);r>-1&&s.splice(r,1)}}async cancelWorkflow(e){const t=this.workflows.get(e);return t?(t.status="cancelled",t.updatedAt=new Date,this.addNotification(t,"warning","Workflow cancelled"),this.notifyListeners(e,t),{success:!0}):{success:!1,error:"Workflow not found"}}getWorkflowsByStatus(e){return Array.from(this.workflows.values()).filter(t=>t.status===e)}getWorkflowsByType(e){return Array.from(this.workflows.values()).filter(t=>t.type===e)}cleanup(){this.workflows.clear(),this.transitions.clear(),this.listeners.clear()}}const N=new Ye;class Xe{static async createOperator(e){try{const t=await N.startWorkflow("operator_onboarding",{operatorData:e},"normal");return t.success?await this.waitForWorkflowCompletion(t.workflowId):{success:!1,error:t.error,code:"WORKFLOW_START_FAILED"}}catch(t){return console.error("Error in createOperator:",t),{success:!1,error:t instanceof Error?t.message:"Failed to create operator",code:"OPERATOR_CREATION_FAILED"}}}static async getOperatorWithAnalysis(e){try{const t=await M.operator.getOperatorPerformance(e);if(!t.success)return t;const s=t.data?.operator,r=t.data?.performance,i=_.evaluatePromotion(s),a=_.recommendTraining(s);return{success:!0,data:{operator:s,performance:r,promotionEligibility:i,trainingRecommendations:a,analysisTimestamp:new Date().toISOString()}}}catch(t){return console.error("Error getting operator analysis:",t),{success:!1,error:t instanceof Error?t.message:"Failed to get operator analysis",code:"OPERATOR_ANALYSIS_FAILED"}}}static async updateOperator(e,t,s){try{if(t.skillLevel||t.machineTypes||t.maxConcurrentWork){const i={id:e,...t},a=_.validateOperatorCreation(i);if(!a.isValid)return{success:!1,error:a.errors.join(", "),code:"VALIDATION_FAILED",metadata:{warnings:a.warnings}}}return await M.operator.updateOperatorStatus(e,t,s)}catch(r){return console.error("Error updating operator:",r),{success:!1,error:r instanceof Error?r.message:"Failed to update operator",code:"OPERATOR_UPDATE_FAILED"}}}static async processSelfAssignment(e,t,s){try{const r={id:e,machineType:"overlock",priority:"normal"},i={id:t,skillLevel:"intermediate"},a={id:"supervisor_1",supervisorLevel:"senior"},n=await N.startWorkflow("work_assignment",{workItem:r,operator:i,supervisor:a,assignmentRequest:{workItemId:e,operatorId:t,reason:s,requestedAt:new Date}},"normal");return n.success?{success:!0,data:{message:"Assignment workflow started",workflowId:n.workflowId},workflowId:n.workflowId}:{success:!1,error:n.error,code:"WORKFLOW_START_FAILED"}}catch(r){return console.error("Error processing self-assignment:",r),{success:!1,error:r instanceof Error?r.message:"Failed to process assignment",code:"ASSIGNMENT_PROCESSING_FAILED"}}}static async getWorkRecommendations(e){try{const t={id:e,machineTypes:["overlock","flatlock"],skillLevel:"advanced",averageEfficiency:.89,qualityScore:.94,currentAssignments:[]},s=[{id:"work_1",bundleNumber:"BDL-001",operation:"Side Seam",machineType:"overlock",requiredSkillLevel:"intermediate",estimatedDuration:45,priority:"high",complexity:6},{id:"work_2",bundleNumber:"BDL-002",operation:"Hem",machineType:"flatlock",requiredSkillLevel:"advanced",estimatedDuration:30,priority:"normal",complexity:7}],r=s.map(i=>{const a=O.recommendationEngine.generateRecommendations(i,t),n=O.workAssignmentLogic.calculateMatchScore(i,t);return{workItem:i,recommendation:a,matchScore:n,aiScore:a.match,reasons:a.reasons}});return r.sort((i,a)=>a.aiScore-i.aiScore),{success:!0,data:{operatorId:e,recommendations:r.slice(0,10),totalAvailable:s.length,generatedAt:new Date().toISOString()}}}catch(t){return console.error("Error getting work recommendations:",t),{success:!1,error:t instanceof Error?t.message:"Failed to get recommendations",code:"RECOMMENDATIONS_FAILED"}}}static async processDamageReport(e){try{const t={id:e.workItemId,bundleId:"bundle_1",totalPieces:100,completedPieces:80,ratePerPiece:10,isCustomerOrder:!0},s={id:e.operatorId,averageEfficiency:.85,qualityScore:.92},r={id:e.supervisorId,supervisorLevel:"senior"},i=await N.startWorkflow("quality_control",{damageReport:e,workItem:t,operator:s,supervisor:r},"high");return i.success?{success:!0,data:{message:"Quality control workflow started",workflowId:i.workflowId},workflowId:i.workflowId}:{success:!1,error:i.error,code:"WORKFLOW_START_FAILED"}}catch(t){return console.error("Error processing damage report:",t),{success:!1,error:t instanceof Error?t.message:"Failed to process damage report",code:"DAMAGE_PROCESSING_FAILED"}}}static async calculateOperatorPayment(e,t){try{const s=[];let r=0,i=0,a=0;for(const o of t){const c=o.damageReports||[],u=O.paymentLogic.calculateDamageAwarePayment({rate:o.ratePerPiece,totalPieces:o.totalPieces},{piecesCompleted:o.completedPieces,efficiency:o.efficiency,qualityScore:o.qualityScore},c);s.push({workItemId:o.workItemId,bundleNumber:o.bundleNumber,calculation:u}),r+=u.basePayment,i+=u.bonuses,a+=u.penalties}const n=r+i-a;return{success:!0,data:{operatorId:e,period:{startDate:new Date(Date.now()-10080*60*1e3),endDate:new Date},summary:{totalBasePayment:r,totalBonuses:i,totalPenalties:a,finalPayment:n,workItemsCompleted:t.length},calculations:s,generatedAt:new Date().toISOString()}}}catch(s){return console.error("Error calculating payment:",s),{success:!1,error:s instanceof Error?s.message:"Failed to calculate payment",code:"PAYMENT_CALCULATION_FAILED"}}}static async processAssignmentApproval(e,t,s,r){try{return await M.supervisor.processAssignmentApproval(e,t,s,r)}catch(i){return console.error("Error processing assignment approval:",i),{success:!1,error:i instanceof Error?i.message:"Failed to process approval",code:"APPROVAL_PROCESSING_FAILED"}}}static async getSupervisorDashboard(e){try{const t={id:e,supervisorLevel:"senior",teamMembers:["op1","op2","op3"],responsibleLines:["line1","line2"]},s=[{id:"op1",averageEfficiency:.85,qualityScore:.9},{id:"op2",averageEfficiency:.78,qualityScore:.88},{id:"op3",averageEfficiency:.92,qualityScore:.95}],r=te.analyzeTeamProductivity(t,s,{completedWork:[],qualityIncidents:[],onTimeDeliveries:45,totalDeliveries:50});return{success:!0,data:{supervisor:t,teamProductivity:r,pendingApprovals:[],teamSize:s.length,dashboardGeneratedAt:new Date().toISOString()}}}catch(t){return console.error("Error getting supervisor dashboard:",t),{success:!1,error:t instanceof Error?t.message:"Failed to get dashboard",code:"DASHBOARD_FETCH_FAILED"}}}static async analyzeCompanyPerformance(){try{const e={totalOperators:50,activeOperators:45,averageEfficiency:.82,qualityScore:.88,onTimeDelivery:.91,customerSatisfactionScore:4.2},t={revenue:25e5,costs:18e5,profitMargin:.28,budgetUtilization:.85},s={marketShare:.15,competitorAnalysis:.72,growthRate:.08,customerRetentionRate:.89},r={efficiencyTrend:"up",qualityTrend:"stable",profitabilityTrend:"up"};return{success:!0,data:{performanceAnalysis:Ve.analyzeCompanyPerformance(e,t,s,r),rawData:{operational:e,financial:t,market:s,trends:r},analysisDate:new Date().toISOString()}}}catch(e){return console.error("Error analyzing company performance:",e),{success:!1,error:e instanceof Error?e.message:"Failed to analyze performance",code:"PERFORMANCE_ANALYSIS_FAILED"}}}static async waitForWorkflowCompletion(e,t=3e4){return new Promise(s=>{const r=Date.now(),i=()=>{const a=N.getWorkflow(e);if(!a){s({success:!1,error:"Workflow not found",code:"WORKFLOW_NOT_FOUND"});return}if(a.status==="completed"){s({success:!0,data:a.context,workflowId:e});return}if(a.status==="failed"){s({success:!1,error:"Workflow failed",code:"WORKFLOW_FAILED",data:a.context});return}if(Date.now()-r>t){s({success:!1,error:"Workflow timeout",code:"WORKFLOW_TIMEOUT"});return}setTimeout(i,100)};i()})}static getWorkflowStatus(e){const t=N.getWorkflow(e);return t?{success:!0,data:t}:{success:!1,error:"Workflow not found",code:"WORKFLOW_NOT_FOUND"}}static subscribeToWorkflow(e,t){return N.subscribeToWorkflow(e,t)}static getActiveWorkflows(){return{success:!0,data:N.getWorkflowsByStatus("running")}}}const me=Xe;class q{static instance;connectionState={firestore:"disconnected",realtimedb:"disconnected",auth:"disconnected",lastCheck:new Date,isOnline:navigator.onLine};listeners=[];healthCheckInterval;reconnectTimeout;reconnectAttempts=0;maxReconnectAttempts=5;constructor(){this.initializeConnectionMonitoring()}static getInstance(){return q.instance||(q.instance=new q),q.instance}initializeConnectionMonitoring(){window.addEventListener("online",this.handleOnline.bind(this)),window.addEventListener("offline",this.handleOffline.bind(this)),this.startHealthCheck(),this.checkConnections()}handleOnline(){console.log("🌐 Network connection restored"),this.connectionState.isOnline=!0,this.attemptReconnection()}handleOffline(){console.log("📴 Network connection lost"),this.connectionState.isOnline=!1,this.updateConnectionState("firestore","disconnected"),this.updateConnectionState("realtimedb","disconnected"),this.updateConnectionState("auth","disconnected")}startHealthCheck(){this.healthCheckInterval=setInterval(()=>{this.checkConnections()},ue.heartbeatInterval)}async checkConnections(){this.connectionState.lastCheck=new Date;try{await H(h),this.updateConnectionState("firestore","connected"),this.reconnectAttempts=0}catch(e){console.error("Firestore connection check failed:",e),this.updateConnectionState("firestore","error"),this.handleConnectionError("firestore")}try{const e=R(b,".info/connected");K(e,t=>{t.val()===!0?(this.updateConnectionState("realtimedb","connected"),this.reconnectAttempts=0):this.updateConnectionState("realtimedb","disconnected")})}catch(e){console.error("Realtime Database connection check failed:",e),this.updateConnectionState("realtimedb","error"),this.handleConnectionError("realtimedb")}try{Pe.currentUser!==void 0?this.updateConnectionState("auth","connected"):this.updateConnectionState("auth","disconnected")}catch(e){console.error("Auth connection check failed:",e),this.updateConnectionState("auth","error")}}updateConnectionState(e,t){this.connectionState[e]=t,this.notifyListeners()}handleConnectionError(e){this.reconnectAttempts<this.maxReconnectAttempts?this.scheduleReconnection():console.error(`⚠️ Max reconnection attempts reached for ${e}`)}scheduleReconnection(){this.reconnectTimeout&&clearTimeout(this.reconnectTimeout);const e=Math.min(ue.retryDelay*Math.pow(2,this.reconnectAttempts),3e4);console.log(`🔄 Scheduling reconnection in ${e}ms (attempt ${this.reconnectAttempts+1})`),this.reconnectTimeout=setTimeout(()=>{this.attemptReconnection()},e)}async attemptReconnection(){if(!this.connectionState.isOnline){console.log("📴 Cannot reconnect: offline");return}this.reconnectAttempts++,console.log(`🔄 Attempting reconnection (${this.reconnectAttempts}/${this.maxReconnectAttempts})`);try{await H(h),de(b),await this.checkConnections(),console.log("✅ Reconnection successful")}catch(e){console.error("❌ Reconnection failed:",e),this.handleConnectionError("reconnection")}}getConnectionState(){return{...this.connectionState}}isConnected(){return this.connectionState.firestore==="connected"&&this.connectionState.realtimedb==="connected"}onConnectionChange(e){return this.listeners.push(e),e(this.getConnectionState()),()=>{const t=this.listeners.indexOf(e);t>-1&&this.listeners.splice(t,1)}}notifyListeners(){this.listeners.forEach(e=>{try{e(this.getConnectionState())}catch(t){console.error("Error in connection state listener:",t)}})}async forceReconnect(){console.log("🔄 Force reconnect requested"),this.reconnectAttempts=0,await this.attemptReconnection()}async goOffline(){console.log("📴 Going offline manually");try{await ge(h),_e(b),this.updateConnectionState("firestore","disconnected"),this.updateConnectionState("realtimedb","disconnected")}catch(e){console.error("Error going offline:",e)}}async goOnline(){console.log("🌐 Going online manually");try{await H(h),de(b),await this.checkConnections()}catch(e){console.error("Error going online:",e)}}cleanup(){this.healthCheckInterval&&clearInterval(this.healthCheckInterval),this.reconnectTimeout&&clearTimeout(this.reconnectTimeout),window.removeEventListener("online",this.handleOnline.bind(this)),window.removeEventListener("offline",this.handleOffline.bind(this)),this.listeners=[]}async connectToEmulators(){}getHealthMetrics(){return{uptime:Date.now()-this.connectionState.lastCheck.getTime(),reconnectAttempts:this.reconnectAttempts,lastSuccessfulConnection:this.connectionState.lastCheck,isHealthy:this.isConnected()&&this.connectionState.isOnline}}}const F=q.getInstance();class Ze extends W{constructor(){super("users")}async getUserProfile(e){return this.getById(e)}async updateUserProfile(e,t){return await this.logUserActivity(e,"profile_update","User updated their profile",{updatedFields:Object.keys(t)}),this.update(e,t)}async getUsersByRole(e){return this.getWhere({field:"role",operator:"==",value:e},{orderByField:"name",orderDirection:"asc"})}async getAllUsers(e){try{const t=await this.getAll({orderByField:"name",orderDirection:"asc"});if(!t.success||!t.data)return t;let s=t.data;if(e&&(e.role&&(s=s.filter(r=>r.role===e.role)),e.department&&(s=s.filter(r=>r.department===e.department)),e.active!==void 0&&(s=s.filter(r=>r.active===e.active)),e.searchTerm)){const r=e.searchTerm.toLowerCase();s=s.filter(i=>i.name.toLowerCase().includes(r)||i.username.toLowerCase().includes(r)||i.email?.toLowerCase().includes(r)||i.department?.toLowerCase().includes(r))}return{success:!0,data:s}}catch(t){return console.error("Error filtering users:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error occurred"}}}async createUser(e){const t={...e,active:!0,settings:{theme:"system",language:"en",notifications:{email:!0,push:!0,workAssignment:!0,qualityIssues:!0},...e.settings},activity:{lastSeen:new Date,totalLogins:0,workHours:0,completedTasks:0,...e.activity}};return await this.logSystemActivity("user_creation",`New user created: ${e.name}`,{newUserId:e.username,role:e.role}),this.create(t)}async deactivateUser(e,t){const s=await this.update(e,{active:!1});return s.success&&await this.logUserActivity(e,"account_deactivated","User account deactivated",{reason:t}),{success:s.success,error:s.error}}async activateUser(e){const t=await this.update(e,{active:!0});return t.success&&await this.logUserActivity(e,"account_activated","User account activated"),{success:t.success,error:t.error}}async updateUserRole(e,t,s){const r=await this.update(e,{role:t,permissions:s});return r.success&&await this.logUserActivity(e,"role_changed",`User role changed to ${t}`,{newRole:t,permissions:s}),{success:r.success,error:r.error}}async getUserActivity(e,t=50){return new W("user_activities").getWhere({field:"userId",operator:"==",value:e},{orderByField:"timestamp",orderDirection:"desc",limitCount:t})}async logUserActivity(e,t,s,r){try{const i=new W("user_activities"),a=await this.getById(e),n=a.success&&a.data?a.data.name:"Unknown User";await i.create({userId:e,userName:n,action:t,description:s,metadata:r,timestamp:le.now(),ipAddress:"unknown",userAgent:"unknown"})}catch(i){console.error("Error logging user activity:",i)}}async logSystemActivity(e,t,s){try{await new W("system_activities").create({action:e,description:t,metadata:s,timestamp:le.now()})}catch(r){console.error("Error logging system activity:",r)}}async getUserStats(){try{const e=await this.getAll();if(!e.success||!e.data)return{success:!1,error:"Failed to fetch users"};const t=e.data,r=await new W("user_activities").getAll({orderByField:"timestamp",orderDirection:"desc",limitCount:20});return{success:!0,data:{totalUsers:t.length,activeUsers:t.filter(a=>a.active).length,usersByRole:t.reduce((a,n)=>(a[n.role]=(a[n.role]||0)+1,a),{}),recentActivity:r.success?r.data||[]:[]}}}catch(e){return console.error("Error getting user stats:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error occurred"}}}async updateLastSeen(e){try{await this.update(e,{activity:{lastSeen:new Date}})}catch(t){console.error("Error updating last seen:",t)}}async searchUsers(e,t=20){const s=await this.getAllUsers({searchTerm:e});return s.success&&s.data?{success:!0,data:s.data.slice(0,t)}:s}subscribeToUser(e,t){return this.subscribeToDocument(e,t)}subscribeToAllUsers(e){return this.subscribeToCollection(e,void 0,{orderByField:"name",orderDirection:"asc"})}async bulkUpdateUsers(e,t){try{const s=e.map(n=>this.update(n,t)),r=await Promise.allSettled(s),i=r.filter(n=>n.status==="rejected").length,a=r.length-i;return i>0?{success:!1,error:`${i} out of ${r.length} updates failed`}:(await this.logSystemActivity("bulk_user_update",`Bulk updated ${a} users`,{userIds:e,updates:Object.keys(t)}),{success:!0})}catch(s){return console.error("Error in bulk user update:",s),{success:!1,error:s instanceof Error?s.message:"Unknown error occurred"}}}}new Ze;class et{apiEndpoint="/api/errors";performanceEndpoint="/api/performance";sessionId;userId;userRole;errorQueue=[];performanceQueue=[];isOnline=!0;maxQueueSize=100;flushInterval=1e4;errorEndpointAvailable=!0;performanceEndpointAvailable=!0;constructor(){this.sessionId=this.generateSessionId(),this.setupGlobalErrorHandlers(),this.setupPerformanceMonitoring(),this.setupNetworkStatusListener(),this.startPeriodicFlush()}generateSessionId(){return`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}setUser(e){this.userId=e.id,this.userRole=e.role}async captureException(e,t){const s=`error_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,r={id:s,message:e.message,name:e.name,stack:e.stack,timestamp:new Date().toISOString(),sessionId:this.sessionId,url:window.location.href,userAgent:navigator.userAgent,viewport:{width:window.innerWidth,height:window.innerHeight},user:{id:this.userId,role:this.userRole},level:t?.level||"error",contexts:{browser:{name:this.getBrowserName(),version:this.getBrowserVersion(),language:navigator.language,cookieEnabled:navigator.cookieEnabled,onLine:navigator.onLine},os:{platform:navigator.platform},device:{pixelRatio:window.devicePixelRatio,memory:navigator.deviceMemory,cores:navigator.hardwareConcurrency},performance:this.getPerformanceSnapshot(),...t?.contexts},tags:{environment:"production",version:"1.0.0",component:"frontend",...t?.tags},fingerprint:t?.fingerprint||[e.name,e.message],extra:t?.extra||{}};return this.queueError(r),s}captureMessage(e,t="info",s){const r={id:`msg_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,message:e,level:t,timestamp:new Date().toISOString(),sessionId:this.sessionId,url:window.location.href,user:{id:this.userId,role:this.userRole},contexts:s?.contexts||{},tags:{environment:"production",version:"1.0.0",...s?.tags},extra:s?.extra||{}};this.queueError(r)}trackUserAction(e){const t={...e,sessionId:this.sessionId,userId:this.userId,userRole:this.userRole};this.sendUserAction(t)}recordPerformanceMetric(e){this.performanceQueue.push({...e,timestamp:new Date,tags:{sessionId:this.sessionId,userId:this.userId||"anonymous",...e.tags}}),this.performanceQueue.length>=this.maxQueueSize&&this.flushPerformanceMetrics()}recordWebVitals(){if(!("web-vital"in window)){if(window["web-vital"]=!0,"PerformanceObserver"in window)try{new PerformanceObserver(i=>{const a=i.getEntries(),n=a[a.length-1];this.recordPerformanceMetric({name:"largest-contentful-paint",value:n.startTime,unit:"ms",timestamp:new Date,tags:{metric:"core-web-vital"}})}).observe({type:"largest-contentful-paint",buffered:!0}),new PerformanceObserver(i=>{i.getEntries().forEach(n=>{this.recordPerformanceMetric({name:"first-input-delay",value:n.processingStart-n.startTime,unit:"ms",timestamp:new Date,tags:{metric:"core-web-vital"}})})}).observe({type:"first-input",buffered:!0});let s=0;new PerformanceObserver(i=>{i.getEntries().forEach(n=>{n.hadRecentInput||(s+=n.value)}),this.recordPerformanceMetric({name:"cumulative-layout-shift",value:s,unit:"score",timestamp:new Date,tags:{metric:"core-web-vital"}})}).observe({type:"layout-shift",buffered:!0})}catch(e){console.warn("Failed to set up Performance Observer:",e)}window.addEventListener("load",()=>{setTimeout(()=>{const e=performance.getEntriesByType("navigation")[0];e&&(this.recordPerformanceMetric({name:"page-load-time",value:e.loadEventEnd-e.loadEventStart,unit:"ms",timestamp:new Date}),this.recordPerformanceMetric({name:"dom-content-loaded",value:e.domContentLoadedEventEnd-e.domContentLoadedEventStart,unit:"ms",timestamp:new Date}),this.recordPerformanceMetric({name:"time-to-first-byte",value:e.responseStart-e.requestStart,unit:"ms",timestamp:new Date}))},0)})}}trackNetworkError(e,t,s,r){this.captureMessage(`Network Error: ${s} ${e} - ${t}`,"warning",{tags:{type:"network-error",url:e,method:s,status:t.toString()},extra:{error:r?.message,stack:r?.stack}})}setupGlobalErrorHandlers(){window.addEventListener("error",t=>{this.captureException(t.error||new Error(t.message),{contexts:{error_event:{filename:t.filename,lineno:t.lineno,colno:t.colno}},tags:{source:"window.onerror"}})}),window.addEventListener("unhandledrejection",t=>{const s=t.reason instanceof Error?t.reason:new Error(t.reason);this.captureException(s,{tags:{source:"unhandled-promise-rejection"},extra:{reason:t.reason}})});const e=window.fetch;window.fetch=async(...t)=>{const s=performance.now();try{const r=await e(...t),a=performance.now()-s;return this.recordPerformanceMetric({name:"api-call-duration",value:a,unit:"ms",timestamp:new Date,tags:{url:typeof t[0]=="string"?t[0]:t[0].url,method:t[1]?.method||"GET",status:r.status.toString()}}),r.ok||this.trackNetworkError(typeof t[0]=="string"?t[0]:t[0].url,r.status,t[1]?.method||"GET"),r}catch(r){const a=performance.now()-s;throw this.recordPerformanceMetric({name:"api-call-duration",value:a,unit:"ms",timestamp:new Date,tags:{url:typeof t[0]=="string"?t[0]:t[0].url,method:t[1]?.method||"GET",status:"error"}}),this.trackNetworkError(typeof t[0]=="string"?t[0]:t[0].url,0,t[1]?.method||"GET",r),r}}}setupPerformanceMonitoring(){if("PerformanceObserver"in window)try{new PerformanceObserver(t=>{t.getEntries().forEach(r=>{this.recordPerformanceMetric({name:"long-task",value:r.duration,unit:"ms",timestamp:new Date,tags:{type:"performance-issue"}})})}).observe({type:"longtask",buffered:!0})}catch(e){console.warn("Long task monitoring not supported:",e)}this.recordWebVitals()}setupNetworkStatusListener(){window.addEventListener("online",()=>{this.isOnline=!0,this.flushAllQueues()}),window.addEventListener("offline",()=>{this.isOnline=!1})}startPeriodicFlush(){setInterval(()=>{this.isOnline&&this.flushAllQueues()},this.flushInterval)}queueError(e){this.errorQueue.push(e),this.errorQueue.length>=this.maxQueueSize&&this.flushErrors()}async flushErrors(){if(this.errorQueue.length===0||!this.isOnline||!this.errorEndpointAvailable)return;const e=this.errorQueue.splice(0,this.maxQueueSize);try{const t=await fetch(this.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({errors:e})});if(t.status===404){this.errorEndpointAvailable=!1,X.logging.debugMode;return}if(!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`)}catch(t){t instanceof TypeError||t?.message?.includes("fetch")?(this.errorQueue.unshift(...e),console.error("Failed to send error reports (network error):",t)):this.errorEndpointAvailable=!1}}async flushPerformanceMetrics(){if(this.performanceQueue.length===0||!this.isOnline||!this.performanceEndpointAvailable)return;const e=this.performanceQueue.splice(0,this.maxQueueSize);try{const t=await fetch(this.performanceEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({metrics:e})});if(t.status===404){this.performanceEndpointAvailable=!1,X.logging.debugMode;return}if(!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`)}catch(t){t instanceof TypeError||t?.message?.includes("fetch")?(this.performanceQueue.unshift(...e),console.error("Failed to send performance metrics (network error):",t)):this.performanceEndpointAvailable=!1}}async sendUserAction(e){if(this.isOnline)try{const t=await fetch("/api/analytics/actions",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(t.status===404&&X.logging.debugMode,!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`)}catch{}}flushAllQueues(){this.flushErrors(),this.flushPerformanceMetrics()}getBrowserName(){const e=navigator.userAgent;return e.includes("Chrome")?"Chrome":e.includes("Firefox")?"Firefox":e.includes("Safari")?"Safari":e.includes("Edge")?"Edge":"Unknown"}getBrowserVersion(){const t=navigator.userAgent.match(/(?:Chrome|Firefox|Safari|Edge)\/(\d+)/);return t?t[1]:"Unknown"}getPerformanceSnapshot(){return performance.memory?{memory:{used:performance.memory.usedJSHeapSize,total:performance.memory.totalJSHeapSize,limit:performance.memory.jsHeapSizeLimit},timing:performance.timing,navigation:performance.navigation}:{}}destroy(){this.flushAllQueues()}}const tt=new et;typeof window<"u"&&window.addEventListener("beforeunload",()=>{tt.destroy()});class st extends W{constructor(){super("workAssignments")}static async atomicSelfAssign(e,t,s){const r=R(b,`${k.AVAILABLE_WORK}/${e}`);try{const i=await De(r,a=>{if(a&&!(a.assigned&&a.assignedTo)&&a.status==="available")return{...a,assigned:!0,assignedTo:t,assignedAt:x(),operatorName:s.name,operatorMachine:s.machineType,status:"assigned",assignmentMethod:"self-assign"}});return i.committed?(this.updateOperatorAssignment(t,e,i.snapshot.val()),{success:!0,workData:i.snapshot.val(),message:"Work assigned successfully"}):{success:!1,error:"Work already assigned to another operator",message:"Someone else got this work first!",code:"ASSIGNMENT_CONFLICT"}}catch(i){return console.error("Atomic assignment failed:",i),{success:!1,error:i instanceof Error?i.message:"Assignment failed",message:"Assignment failed due to system error",code:"SYSTEM_ERROR"}}}static async updateOperatorAssignment(e,t,s){try{const r=R(b,`${k.OPERATOR_STATUS}/${e}`);await B(r,{status:"working",currentWork:t,assignedAt:x(),workData:{workId:t,bundleId:s.bundleId,operation:s.operation,pieces:s.pieces},lastActivity:x()})}catch(r){console.error("Failed to update operator status:",r)}}static async releaseWork(e,t){try{const s=R(b,`${k.AVAILABLE_WORK}/${e}`);await B(s,{assigned:!1,assignedTo:null,assignedAt:null,operatorName:null,operatorMachine:null,status:"available",assignmentMethod:null,releasedAt:x(),releasedBy:t});const r=R(b,`${k.OPERATOR_STATUS}/${t}`);return await B(r,{status:"idle",currentWork:null,lastActivity:x()}),{success:!0,message:"Work released successfully"}}catch(s){return console.error("Failed to release work:",s),{success:!1,error:s instanceof Error?s.message:"Failed to release work",code:"RELEASE_FAILED"}}}static subscribeToAvailableWork(e){const t=R(b,k.AVAILABLE_WORK);return K(t,s=>{const r=s.val()||{},i=Object.entries(r).filter(([a,n])=>n.status==="available"&&!n.assigned).map(([a,n])=>({id:a,...n}));e(i)},s=>{console.error("Error subscribing to available work:",s),e([])})}static async testRaceCondition(e,t){return(await Promise.allSettled(t.map(r=>this.atomicSelfAssign(e,r,{name:`Operator ${r}`,machineType:"overlock"})))).map((r,i)=>({operatorId:t[i],result:r.status==="fulfilled"?r.value:{success:!1,error:r.reason?.message||"Unknown error"}}))}static validateAssignment(e,t){const s=[];let r=50;if(this.checkMachineCompatibility(e.machineType,t.requiredMachine))r+=40,s.push("Machine compatibility confirmed");else return r=10,s.push("Machine incompatibility detected"),{canAssign:!1,reasons:s,score:r};return(e.currentAssignments?.length||0)<3?(r+=10,s.push("Workload within limits")):s.push("Maximum workload reached"),{canAssign:r>=60,reasons:s,score:Math.min(r,100)}}static checkMachineCompatibility(e,t){const s={overlock:["overlock","ओभरलक","Overlock","OVERLOCK"],flatlock:["flatlock","फ्ल्यालक","Flatlock","FLATLOCK"],singleNeedle:["singleNeedle","single_needle","एकल सुई","Single Needle"],buttonhole:["buttonhole","बटनहोल","Buttonhole","BUTTONHOLE"],buttonAttach:["buttonAttach","button_attach","बटन जोड्ने"],iron:["iron","pressing","इस्त्री प्रेस"],cutting:["cutting","काट्ने मेसिन"],embroidery:["embroidery","कसिदाकारी मेसिन"],manual:["manual","हस्तकला काम"]};if(e==="multi-skill")return!0;for(const[r,i]of Object.entries(s))if(i.includes(e)&&i.includes(t))return!0;return!1}}new st;var rt={};const $={breakpoints:{mobile:"320px",tablet:"768px",desktop:"1024px",widescreen:"1440px"},touch:{minTouchTarget:44,touchPadding:8,swipeThreshold:50,longPressDelay:500,doubleTapDelay:300,dragStartDelay:150,dragScrollThreshold:20,mobileSpacing:{xs:"4px",sm:"8px",md:"16px",lg:"24px",xl:"32px"}},performance:{lazyLoading:{rootMargin:"50px",threshold:.1,maxRetries:3},virtualScroll:{itemHeight:80,bufferSize:5,threshold:100},codeSplitting:{chunkSize:25e4,maxChunks:10,cacheGroups:{vendor:!0,common:!0,features:!0}},images:{lazyLoad:!0,webpSupport:!0,placeholder:"blur",sizes:{thumbnail:150,small:300,medium:600,large:1200},quality:{thumbnail:70,standard:85,high:95}},cache:{images:"7d",api:"5m",static:"1y",sw:"24h"}},i18n:{defaultLocale:"en",supportedLocales:["en","ne"],fallbackLocale:"en",nepali:{dateFormat:"ne-NP",numberFormat:"ne-NP",currency:"NPR",calendar:"nepali",direction:"ltr"},namespaces:["common","navigation","operators","work-assignment","production","quality","reports","settings"],loadPath:"/locales/{{lng}}/{{ns}}.json",interpolation:{escapeValue:!1}},notifications:{push:{vapidKey:rt.REACT_APP_VAPID_KEY,serviceWorkerPath:"/sw.js",maxNotifications:10,defaultIcon:"/icons/notification-192x192.png",badge:"/icons/badge-72x72.png"},toast:{position:"top-right",duration:5e3,maxToasts:5,animation:"slide-down",closeButton:!0,pauseOnHover:!0},inApp:{maxVisible:3,grouping:!0,sound:!0,vibration:[200,100,200],priority:{critical:1,high:2,medium:3,low:4}},types:{system:{icon:"bell",color:"blue",sound:"notification.mp3"},assignment:{icon:"briefcase",color:"green",sound:"assignment.mp3"},quality:{icon:"shield-check",color:"orange",sound:"alert.mp3"},break:{icon:"coffee",color:"purple",sound:"gentle.mp3"},achievement:{icon:"trophy",color:"gold",sound:"success.mp3"}}},pwa:{manifest:{name:"TSA ERP - Work Management",shortName:"TSA ERP",description:"Complete work management system for TSA garment factory",startUrl:"/",display:"standalone",orientation:"portrait-primary",themeColor:"#2563eb",backgroundColor:"#ffffff",categories:["productivity","business","utilities"]},icons:[{src:"/icons/icon-72x72.png",sizes:"72x72",type:"image/png"},{src:"/icons/icon-96x96.png",sizes:"96x96",type:"image/png"},{src:"/icons/icon-128x128.png",sizes:"128x128",type:"image/png"},{src:"/icons/icon-144x144.png",sizes:"144x144",type:"image/png"},{src:"/icons/icon-152x152.png",sizes:"152x152",type:"image/png"},{src:"/icons/icon-192x192.png",sizes:"192x192",type:"image/png"},{src:"/icons/icon-384x384.png",sizes:"384x384",type:"image/png"},{src:"/icons/icon-512x512.png",sizes:"512x512",type:"image/png"}],offline:{cacheStrategy:"NetworkFirst",cacheName:"tsa-erp-v1",maxEntries:100,maxAgeSeconds:86400,precacheRoutes:["/","/operators","/work-assignments","/dashboard"],runtimeCaching:{api:"NetworkFirst",images:"CacheFirst",static:"StaleWhileRevalidate"}},updates:{checkInterval:36e5,showUpdatePrompt:!0,autoUpdate:!1,skipWaiting:!1}},accessibility:{keyboard:{enabled:!0,trapFocus:!0,skipLinks:!0,shortcuts:{search:["ctrl+k","cmd+k"],home:["ctrl+h","cmd+h"],assignments:["ctrl+a","cmd+a"],operators:["ctrl+o","cmd+o"],settings:["ctrl+,","cmd+,"],help:["?","f1"]}},screenReader:{announcements:!0,liveRegions:!0,skipToContent:!0,labelledBy:!0,describedBy:!0},colorBlind:{highContrast:!1,reducedMotion:!1,alternativeColors:!0,patterns:!0},textScaling:{minSize:12,maxSize:24,lineHeight:1.5,letterSpacing:.1}},animations:{respectReducedMotion:!0,durations:{fast:150,normal:300,slow:500,verySlow:800},easings:{easeOut:"cubic-bezier(0.25, 0.46, 0.45, 0.94)",easeIn:"cubic-bezier(0.55, 0.055, 0.675, 0.19)",easeInOut:"cubic-bezier(0.645, 0.045, 0.355, 1)",bounce:"cubic-bezier(0.68, -0.55, 0.265, 1.55)"},gestures:{swipe:{threshold:50,velocity:.3,duration:200},drag:{damping:.9,stiffness:300,mass:1}}},layout:{containers:{xs:"100%",sm:"540px",md:"720px",lg:"960px",xl:"1140px",xxl:"1320px"},grid:{columns:12,gutter:"24px",mobileGutter:"16px"},header:{height:"64px",mobileHeight:"56px",sticky:!0,shadow:!0},sidebar:{width:"280px",mobileWidth:"100%",collapsedWidth:"72px",breakpoint:"md"},content:{padding:"24px",mobilePadding:"16px",maxWidth:"1200px"}},theme:{colorModes:["light","dark","auto"],defaultMode:"light",colors:{primary:"#2563eb",secondary:"#64748b",success:"#10b981",warning:"#f59e0b",error:"#ef4444",info:"#3b82f6"},typography:{fontFamily:{sans:["Inter","system-ui","sans-serif"],mono:["JetBrains Mono","monospace"],nepali:["Noto Sans Devanagari","sans-serif"]},fontSize:{xs:"0.75rem",sm:"0.875rem",base:"1rem",lg:"1.125rem",xl:"1.25rem","2xl":"1.5rem","3xl":"1.875rem","4xl":"2.25rem"},fontWeight:{light:300,normal:400,medium:500,semibold:600,bold:700}}},search:{debounceDelay:300,minQueryLength:2,maxResults:50,highlightMatches:!0,scopes:[{id:"all",label:"All",icon:"search"},{id:"operators",label:"Operators",icon:"users"},{id:"work-items",label:"Work Items",icon:"briefcase"},{id:"bundles",label:"Bundles",icon:"package"},{id:"reports",label:"Reports",icon:"chart-bar"}],filters:{dateRange:!0,status:!0,priority:!0,tags:!0},recentSearches:{enabled:!0,maxItems:10,storageKey:"tsa-erp-recent-searches"}},loading:{skeletons:{enabled:!0,animation:"pulse",baseColor:"#f3f4f6",highlightColor:"#e5e7eb",borderRadius:"4px"},spinners:{size:{small:"16px",medium:"24px",large:"32px"},strokeWidth:2,color:"primary"},progress:{height:"4px",color:"primary",backgroundColor:"#e5e7eb",animation:!0}}};class it{swRegistration=null;installPrompt=null;isOnline=navigator.onLine;offlineQueue=[];syncInProgress=!1;constructor(){this.initializeEventListeners(),this.loadOfflineQueue()}async initialize(){try{if("serviceWorker"in navigator){if(window.location.hostname==="localhost"||window.location.port==="3000"){console.log("Development mode: Skipping Service Worker registration to avoid cache issues");const t=await navigator.serviceWorker.getRegistrations();for(const s of t)console.log("Unregistering existing service worker:",s.scope),await s.unregister();if("caches"in window){const s=await caches.keys();for(const r of s)console.log("Clearing cache:",r),await caches.delete(r)}return}this.swRegistration=await navigator.serviceWorker.register("/sw.js",{scope:"/"}),console.log("Service Worker registered:",this.swRegistration),this.swRegistration.addEventListener("updatefound",()=>{const t=this.swRegistration?.installing;t&&t.addEventListener("statechange",()=>{t.state==="installed"&&navigator.serviceWorker.controller&&this.notifyAppUpdate()})})}"Notification"in window&&Notification.permission==="default"&&await Notification.requestPermission(),console.log("PWA Service initialized successfully")}catch(e){throw console.error("PWA Service initialization failed:",e),e}}initializeEventListeners(){window.addEventListener("beforeinstallprompt",e=>{e.preventDefault(),this.installPrompt=e,console.log("Install prompt available")}),window.addEventListener("online",()=>{this.isOnline=!0,console.log("App is online"),this.syncOfflineQueue()}),window.addEventListener("offline",()=>{this.isOnline=!1,console.log("App is offline"),this.showOfflineNotification()}),window.addEventListener("appinstalled",()=>{console.log("App installed successfully"),this.installPrompt=null}),document.addEventListener("visibilitychange",()=>{!document.hidden&&this.isOnline&&this.offlineQueue.length>0&&this.syncOfflineQueue()})}canInstall(){return this.installPrompt!==null}async showInstallPrompt(){if(!this.installPrompt)return console.warn("Install prompt not available"),null;try{await this.installPrompt.prompt();const e=await this.installPrompt.userChoice;return console.log("Install prompt result:",e),e.outcome==="accepted"&&(this.installPrompt=null),e}catch(e){return console.error("Install prompt failed:",e),null}}isInstalled(){return window.matchMedia("(display-mode: standalone)").matches||window.navigator.standalone===!0||document.referrer.includes("android-app://")}async showNotification(e){if(!this.swRegistration)throw new Error("Service Worker not registered");if(Notification.permission!=="granted"&&await Notification.requestPermission()!=="granted")throw new Error("Notification permission denied");const t={icon:$.pwa.icons.find(s=>s.sizes==="192x192")?.src||"/icons/icon-192x192.png",badge:"/icons/badge-72x72.png",vibrate:[200,100,200],requireInteraction:!1,...e};await this.swRegistration.showNotification(e.title,t)}async subscribeToPush(){if(!this.swRegistration)throw new Error("Service Worker not registered");const e=$.notifications.push.vapidKey;if(!e)return console.warn("VAPID key not configured"),null;try{const t=await this.swRegistration.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:this.urlBase64ToUint8Array(e)});return console.log("Push subscription created:",t),await this.sendSubscriptionToServer(t),t}catch(t){throw console.error("Push subscription failed:",t),t}}async unsubscribeFromPush(){if(!this.swRegistration)throw new Error("Service Worker not registered");const e=await this.swRegistration.pushManager.getSubscription();e&&(await e.unsubscribe(),console.log("Unsubscribed from push notifications"))}addToOfflineQueue(e,t="GET",s,r={}){const i={id:Date.now().toString()+Math.random().toString(36).substr(2,9),url:e,method:t,headers:r,body:s,timestamp:Date.now(),retries:0};this.offlineQueue.push(i),this.saveOfflineQueue(),console.log("Added to offline queue:",i),this.isOnline&&this.syncOfflineQueue()}async syncOfflineQueue(){if(this.syncInProgress||this.offlineQueue.length===0||!this.isOnline)return;this.syncInProgress=!0,console.log("Syncing offline queue:",this.offlineQueue.length,"items");const e=3,t=[];for(const s of this.offlineQueue)try{const r=await fetch(s.url,{method:s.method,headers:{"Content-Type":"application/json",...s.headers},body:s.body});if(r.ok)t.push(s.id),console.log("Synced offline item:",s.id);else throw new Error(`HTTP ${r.status}: ${r.statusText}`)}catch(r){console.error("Failed to sync offline item:",s.id,r),s.retries++,s.retries>=e&&(t.push(s.id),console.warn("Max retries reached, removing item:",s.id))}this.offlineQueue=this.offlineQueue.filter(s=>!t.includes(s.id)),this.saveOfflineQueue(),this.syncInProgress=!1,t.length>0&&this.showNotification({title:"Data Synchronized",body:`${t.length} offline actions have been synchronized.`,tag:"sync-complete"})}async requestBackgroundSync(e){if(!this.swRegistration)throw new Error("Service Worker not registered");if("sync"in this.swRegistration)try{await this.swRegistration.sync.register(e),console.log("Background sync registered:",e)}catch(t){throw console.error("Background sync registration failed:",t),t}else console.warn("Background sync not supported")}getOfflineQueueStatus(){const e=this.offlineQueue.filter(s=>s.retries>=3).length,t=localStorage.getItem("pwa-last-sync");return{pending:this.offlineQueue.length-e,failed:e,lastSync:t?new Date(parseInt(t)):null}}isOnlineStatus(){return this.isOnline}getAppInfo(){return{isInstalled:this.isInstalled(),canInstall:this.canInstall(),version:"1.0.0",isOnline:this.isOnline,swStatus:this.swRegistration?.active?"active":"inactive"}}urlBase64ToUint8Array(e){const t="=".repeat((4-e.length%4)%4),s=(e+t).replace(/-/g,"+").replace(/_/g,"/"),r=window.atob(s),i=new Uint8Array(r.length);for(let a=0;a<r.length;++a)i[a]=r.charCodeAt(a);return i}async sendSubscriptionToServer(e){try{if(!(await fetch("/api/notifications/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).ok)throw new Error("Failed to send subscription to server");console.log("Subscription sent to server successfully")}catch(t){console.error("Failed to send subscription to server:",t)}}saveOfflineQueue(){try{localStorage.setItem("pwa-offline-queue",JSON.stringify(this.offlineQueue))}catch(e){console.error("Failed to save offline queue:",e)}}loadOfflineQueue(){try{const e=localStorage.getItem("pwa-offline-queue");e&&(this.offlineQueue=JSON.parse(e),console.log("Loaded offline queue:",this.offlineQueue.length,"items"))}catch(e){console.error("Failed to load offline queue:",e),this.offlineQueue=[]}}notifyAppUpdate(){this.showNotification({title:"App Update Available",body:"A new version of TSA ERP is available. Restart the app to update.",tag:"app-update",actions:[{action:"update",title:"Update Now"},{action:"later",title:"Later"}],requireInteraction:!0})}showOfflineNotification(){this.showNotification({title:"You're Offline",body:"TSA ERP is now working in offline mode. Your data will sync when you're back online.",tag:"offline-mode"})}async updateServiceWorker(){if(!this.swRegistration)throw new Error("Service Worker not registered");try{await this.swRegistration.update(),console.log("Service Worker updated"),this.swRegistration.waiting&&(this.swRegistration.waiting.postMessage({type:"SKIP_WAITING"}),window.location.reload())}catch(e){throw console.error("Service Worker update failed:",e),e}}destroy(){this.syncInProgress=!1,this.saveOfflineQueue(),console.log("PWA Service destroyed")}}const re=new it;typeof window<"u"&&re.initialize().catch(console.error);class at{notifications=[];toastQueue=[];settings;subscribers=new Map;toastSubscribers=new Set;constructor(){this.settings=this.loadSettings(),this.initializeFirebaseListener(),this.registerServiceWorkerListeners()}async initialize(){try{if("Notification"in window&&Notification.permission==="default"){const e=await Notification.requestPermission();this.settings.pushEnabled=e==="granted",this.saveSettings()}await this.loadNotifications(),this.settings.pushEnabled&&await this.subscribeToPush(),console.log("Notification service initialized")}catch(e){throw console.error("Failed to initialize notification service:",e),e}}async sendNotification(e){const t={...e,id:this.generateNotificationId(),timestamp:new Date,read:!1};if(this.isNotificationEnabled(t)){if(this.isInQuietHours()){console.log("Notification suppressed due to quiet hours"),await this.saveNotificationToFirebase(t);return}await this.saveNotificationToFirebase(t),this.addNotification(t),this.settings.pushEnabled&&"serviceWorker"in navigator&&await this.sendPushNotification(t),!("serviceWorker"in navigator)&&"Notification"in window&&Notification.permission==="granted"&&await this.showBrowserNotification(t),this.settings.soundEnabled&&this.playNotificationSound(t.type),this.settings.vibrationEnabled&&"vibrate"in navigator&&this.vibrateDevice(t.priority),this.notifySubscribers(t)}}showToast(e){const t={...e,id:this.generateNotificationId(),duration:e.duration||$.notifications.toast.duration};this.toastQueue.push(t),this.notifyToastSubscribers(t),setTimeout(()=>{this.removeToast(t.id)},t.duration)}getNotifications(e){let t=[...this.notifications];return e&&(e.type&&(t=t.filter(s=>s.type===e.type)),e.read!==void 0&&(t=t.filter(s=>s.read===e.read)),e.priority&&(t=t.filter(s=>s.priority===e.priority)),e.limit&&(t=t.slice(0,e.limit))),t.sort((s,r)=>r.timestamp.getTime()-s.timestamp.getTime())}markAsRead(e){const t=this.notifications.find(s=>s.id===e);t&&!t.read&&(t.read=!0,this.saveNotifications())}markAllAsRead(e){let t=!1;this.notifications.forEach(s=>{!s.read&&(!e||s.type===e)&&(s.read=!0,t=!0)}),t&&this.saveNotifications()}deleteNotification(e){const t=this.notifications.findIndex(s=>s.id===e);t>-1&&(this.notifications.splice(t,1),this.saveNotifications())}clearNotifications(e){e?this.notifications=this.notifications.filter(t=>t.type!==e):this.notifications=[],this.saveNotifications()}getUnreadCount(e){return this.notifications.filter(t=>!t.read&&(!e||t.type===e)).length}subscribe(e,t){return this.subscribers.set(e,t),()=>{this.subscribers.delete(e)}}subscribeToToasts(e){return this.toastSubscribers.add(e),()=>{this.toastSubscribers.delete(e)}}updateSettings(e){this.settings={...this.settings,...e},this.saveSettings(),e.pushEnabled&&!this.settings.pushEnabled&&this.subscribeToPush()}getSettings(){return{...this.settings}}async testNotification(){await this.sendNotification({type:"system",title:"Test Notification",message:"This is a test notification to verify the system is working correctly.",priority:"medium"})}generateNotificationId(){return`notification_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}addNotification(e){this.notifications.unshift(e),this.notifications.length>100&&(this.notifications=this.notifications.slice(0,100)),this.saveNotifications()}isNotificationEnabled(e){return this.settings.inAppEnabled?this.settings.categories[e.type]!==!1:!1}isInQuietHours(){if(!this.settings.quietHours.enabled)return!1;const e=new Date,t=e.getHours()*60+e.getMinutes(),s=this.settings.quietHours.start.split(":"),r=this.settings.quietHours.end.split(":"),i=parseInt(s[0])*60+parseInt(s[1]),a=parseInt(r[0])*60+parseInt(r[1]);return i<=a?t>=i&&t<=a:t>=i||t<=a}async sendPushNotification(e){try{await re.showNotification({title:e.title,body:e.message,icon:this.getNotificationIcon(e.type),badge:"/icons/badge-72x72.png",tag:e.type,data:e.data,actions:e.actions?.map(t=>({action:t.id,title:t.title}))})}catch(t){console.error("Failed to send push notification:",t)}}async showBrowserNotification(e){try{const t=new Notification(e.title,{body:e.message,icon:this.getNotificationIcon(e.type),badge:"/icons/badge-72x72.png",tag:e.type,data:e.data,requireInteraction:e.priority==="critical"});t.onclick=()=>{e.actionUrl&&window.open(e.actionUrl,"_blank"),t.close()},e.priority!=="critical"&&setTimeout(()=>{t.close()},5e3)}catch(t){console.error("Failed to show browser notification:",t)}}getNotificationIcon(e){const t=$.notifications.types[e];return t?`/icons/${t.icon}.png`:"/icons/notification-192x192.png"}playNotificationSound(e){try{const s=$.notifications.types[e]?.sound||"notification.mp3",r=new Audio(`/sounds/${s}`);r.volume=.5,r.play().catch(console.warn)}catch(t){console.warn("Failed to play notification sound:",t)}}vibrateDevice(e){const t={low:[100],medium:[200,100,200],high:[300,100,300,100,300],critical:[500,200,500,200,500]},s=t[e]||t.medium;navigator.vibrate(s)}notifySubscribers(e){this.subscribers.forEach(t=>{try{t(e)}catch(s){console.error("Notification subscriber error:",s)}})}notifyToastSubscribers(e){this.toastSubscribers.forEach(t=>{try{t(e)}catch(s){console.error("Toast subscriber error:",s)}})}removeToast(e){const t=this.toastQueue.findIndex(s=>s.id===e);t>-1&&this.toastQueue.splice(t,1)}async subscribeToPush(){try{await re.subscribeToPush()}catch(e){console.error("Failed to subscribe to push notifications:",e)}}initializeFirebaseListener(){this.subscribeToFirebaseNotifications()}async saveNotificationToFirebase(e){try{console.log("Notification saved locally (Firebase disabled in development)")}catch(t){console.error("Failed to save notification to Firebase:",t)}}subscribeToFirebaseNotifications(){try{console.log("Firebase notification listener - using local mode for development")}catch(e){console.error("Failed to initialize Firebase notification listener:",e)}}registerServiceWorkerListeners(){"serviceWorker"in navigator&&navigator.serviceWorker.addEventListener("message",e=>{if(e.data&&e.data.type==="NOTIFICATION_CLICK"){const t=e.data.notification;this.handleNotificationClick(t)}})}handleNotificationClick(e){e.actionUrl&&window.open(e.actionUrl,"_blank");const t=this.notifications.find(s=>s.id===e.id);t&&this.markAsRead(t.id)}saveNotifications(){try{localStorage.setItem("tsa-erp-notifications",JSON.stringify(this.notifications.map(e=>({...e,timestamp:e.timestamp.toISOString()}))))}catch(e){console.error("Failed to save notifications:",e)}}async loadNotifications(){try{const e=localStorage.getItem("tsa-erp-notifications");if(e){const t=JSON.parse(e);this.notifications=t.map(s=>({...s,timestamp:new Date(s.timestamp)}))}}catch(e){console.error("Failed to load notifications:",e),this.notifications=[]}}saveSettings(){try{localStorage.setItem("tsa-erp-notification-settings",JSON.stringify(this.settings))}catch(e){console.error("Failed to save notification settings:",e)}}loadSettings(){try{const e=localStorage.getItem("tsa-erp-notification-settings");if(e)return{...this.getDefaultSettings(),...JSON.parse(e)}}catch(e){console.error("Failed to load notification settings:",e)}return this.getDefaultSettings()}getDefaultSettings(){return{pushEnabled:!1,emailEnabled:!0,inAppEnabled:!0,soundEnabled:!0,vibrationEnabled:!0,categories:{system:!0,assignment:!0,quality:!0,break:!0,achievement:!0,alert:!0},quietHours:{enabled:!1,start:"22:00",end:"08:00"}}}destroy(){this.subscribers.clear(),this.toastSubscribers.clear(),this.saveNotifications(),this.saveSettings(),console.log("Notification service destroyed")}}const nt=new at;typeof window<"u"&&nt.initialize().catch(console.error);const p={OPERATOR_VIEW_DASHBOARD:{id:"operator.view.dashboard",name:"View Operator Dashboard",description:"Can view operator dashboard with personal metrics",resource:"dashboard",action:"view"},OPERATOR_VIEW_WORK_ASSIGNMENTS:{id:"operator.view.work-assignments",name:"View Work Assignments",description:"Can view assigned work items",resource:"work-assignments",action:"view"},OPERATOR_SELF_ASSIGN_WORK:{id:"operator.assign.work.self",name:"Self-Assign Work",description:"Can assign work to themselves",resource:"work-assignments",action:"self-assign"},OPERATOR_VIEW_PERFORMANCE:{id:"operator.view.performance",name:"View Personal Performance",description:"Can view their own performance metrics",resource:"performance",action:"view"},OPERATOR_UPDATE_STATUS:{id:"operator.update.status",name:"Update Work Status",description:"Can update work item status and progress",resource:"work-items",action:"update-status"},SUPERVISOR_VIEW_DASHBOARD:{id:"supervisor.view.dashboard",name:"View Supervisor Dashboard",description:"Can view supervisor dashboard with team metrics",resource:"dashboard",action:"view"},SUPERVISOR_VIEW_TEAM:{id:"supervisor.view.team",name:"View Team Members",description:"Can view team member information and status",resource:"team",action:"view"},SUPERVISOR_ASSIGN_WORK:{id:"supervisor.assign.work",name:"Assign Work to Team",description:"Can assign work items to team members",resource:"work-assignments",action:"assign"},SUPERVISOR_APPROVE_ASSIGNMENTS:{id:"supervisor.approve.assignments",name:"Approve Work Assignments",description:"Can approve or reject work assignment requests",resource:"work-assignments",action:"approve"},SUPERVISOR_VIEW_TEAM_PERFORMANCE:{id:"supervisor.view.team-performance",name:"View Team Performance",description:"Can view performance metrics for team members",resource:"performance",action:"view-team"},SUPERVISOR_MANAGE_TEAM_SCHEDULE:{id:"supervisor.manage.schedule",name:"Manage Team Schedule",description:"Can manage team work schedules",resource:"schedule",action:"manage"},ADMIN_VIEW_DASHBOARD:{id:"admin.view.dashboard",name:"View Admin Dashboard",description:"Can view administrative dashboard with company-wide metrics",resource:"dashboard",action:"view"},ADMIN_MANAGE_USERS:{id:"admin.manage.users",name:"Manage Users",description:"Can create, update, and delete user accounts",resource:"users",action:"manage"},ADMIN_MANAGE_ROLES:{id:"admin.manage.roles",name:"Manage Roles",description:"Can create and modify user roles and permissions",resource:"roles",action:"manage"},ADMIN_VIEW_ALL_PERFORMANCE:{id:"admin.view.all-performance",name:"View All Performance Data",description:"Can view performance data for all users and departments",resource:"performance",action:"view-all"},ADMIN_MANAGE_PRODUCTION:{id:"admin.manage.production",name:"Manage Production",description:"Can manage production lines, machines, and workflows",resource:"production",action:"manage"},ADMIN_GENERATE_REPORTS:{id:"admin.generate.reports",name:"Generate Reports",description:"Can generate and export system reports",resource:"reports",action:"generate"},ADMIN_MANAGE_NOTIFICATIONS:{id:"admin.manage.notifications",name:"Manage Notifications",description:"Can send system-wide notifications and manage notification settings",resource:"notifications",action:"manage"},ADMIN_VIEW_ANALYTICS:{id:"admin.view.analytics",name:"View System Analytics",description:"Can view detailed system analytics and insights",resource:"analytics",action:"view"}},pe={OPERATOR:{id:"operator",name:"Operator",description:"Production line operator with basic permissions",permissions:[p.OPERATOR_VIEW_DASHBOARD,p.OPERATOR_VIEW_WORK_ASSIGNMENTS,p.OPERATOR_SELF_ASSIGN_WORK,p.OPERATOR_VIEW_PERFORMANCE,p.OPERATOR_UPDATE_STATUS]},SUPERVISOR:{id:"supervisor",name:"Supervisor",description:"Team supervisor with team management permissions",permissions:[p.SUPERVISOR_VIEW_DASHBOARD,p.SUPERVISOR_VIEW_TEAM,p.SUPERVISOR_ASSIGN_WORK,p.SUPERVISOR_APPROVE_ASSIGNMENTS,p.SUPERVISOR_VIEW_TEAM_PERFORMANCE,p.SUPERVISOR_MANAGE_TEAM_SCHEDULE,p.OPERATOR_VIEW_WORK_ASSIGNMENTS,p.OPERATOR_VIEW_PERFORMANCE,p.OPERATOR_UPDATE_STATUS]},ADMIN:{id:"admin",name:"Administrator",description:"System administrator with full permissions",permissions:[p.ADMIN_VIEW_DASHBOARD,p.ADMIN_MANAGE_USERS,p.ADMIN_MANAGE_ROLES,p.ADMIN_VIEW_ALL_PERFORMANCE,p.ADMIN_MANAGE_PRODUCTION,p.ADMIN_GENERATE_REPORTS,p.ADMIN_MANAGE_NOTIFICATIONS,p.ADMIN_VIEW_ANALYTICS,p.SUPERVISOR_VIEW_DASHBOARD,p.SUPERVISOR_VIEW_TEAM,p.SUPERVISOR_ASSIGN_WORK,p.SUPERVISOR_APPROVE_ASSIGNMENTS,p.SUPERVISOR_VIEW_TEAM_PERFORMANCE,p.SUPERVISOR_MANAGE_TEAM_SCHEDULE,p.OPERATOR_VIEW_DASHBOARD,p.OPERATOR_VIEW_WORK_ASSIGNMENTS,p.OPERATOR_SELF_ASSIGN_WORK,p.OPERATOR_VIEW_PERFORMANCE,p.OPERATOR_UPDATE_STATUS]}};class ot{userPermissions=new Map;hasPermission(e,t){const s=this.userPermissions.get(e);if(!s)return!1;const r=s.role.permissions.some(a=>a.id===t),i=s.customPermissions?.some(a=>a.id===t)||!1;return r||i}hasAnyPermission(e,t){return t.some(s=>this.hasPermission(e,s))}hasAllPermissions(e,t){return t.every(s=>this.hasPermission(e,s))}getUserRole(e){return this.userPermissions.get(e)?.role||null}setUserPermissions(e,t,s){this.userPermissions.set(e,{userId:e,role:t,customPermissions:s})}setUserRole(e,t){const s=pe[t];s&&this.setUserPermissions(e,s)}getUserPermissions(e){const t=this.userPermissions.get(e);if(!t)return[];const s=t.role.permissions,r=t.customPermissions||[];return[...s,...r].filter((n,o,c)=>c.findIndex(u=>u.id===n.id)===o)}canAccessDashboard(e,t){switch(t){case"operator":return this.hasPermission(e,p.OPERATOR_VIEW_DASHBOARD.id);case"supervisor":return this.hasPermission(e,p.SUPERVISOR_VIEW_DASHBOARD.id);case"admin":return this.hasPermission(e,p.ADMIN_VIEW_DASHBOARD.id);default:return!1}}getPreferredDashboard(e){return this.canAccessDashboard(e,"admin")?"admin":this.canAccessDashboard(e,"supervisor")?"supervisor":this.canAccessDashboard(e,"operator")?"operator":null}async loadUserPermissions(e){try{const t=localStorage.getItem(`user-permissions-${e}`);if(t){const s=JSON.parse(t),r=pe[s.roleId];r&&this.setUserPermissions(e,r,s.customPermissions)}}catch(t){console.error("Failed to load user permissions:",t)}}async saveUserPermissions(e){try{const t=this.userPermissions.get(e);if(t){const s={roleId:t.role.id,customPermissions:t.customPermissions};localStorage.setItem(`user-permissions-${e}`,JSON.stringify(s))}}catch(t){console.error("Failed to save user permissions:",t)}}initializeDemoPermissions(){this.setUserRole("operator-001","OPERATOR"),this.setUserRole("operator","OPERATOR"),this.setUserRole("op-maya-001","OPERATOR"),this.setUserRole("supervisor-001","SUPERVISOR"),this.setUserRole("supervisor","SUPERVISOR"),this.setUserRole("sup","SUPERVISOR"),this.setUserRole("sup-john-001","SUPERVISOR"),this.setUserRole("admin-001","ADMIN"),this.setUserRole("admin","ADMIN"),this.setUserRole("administrator","ADMIN"),this.setUserRole("mgr-admin-001","ADMIN")}}const ct=new ot;typeof window<"u"&&ct.initializeDemoPermissions();const lt={apiKey:"AIzaSyB8Z4GdoLZsBW6bfmAh_BSTftpTRUXPZMw",authDomain:"erp-for-tsa.firebaseapp.com",databaseURL:"https://erp-for-tsa-default-rtdb.firebaseio.com",projectId:"erp-for-tsa",storageBucket:"erp-for-tsa.firebasestorage.app",messagingSenderId:"271232983905",appId:"1:271232983905:web:7d06c8f5ec269824759b20",measurementId:"G-6CYWPS4N0G"},J=ke(lt);Oe(J);Ie(J);xe(J);Ce(J);const wt={processAssignmentApproval:me.processAssignmentApproval,getDashboard:me.getSupervisorDashboard};F.getConnectionState,F.isConnected,F.forceReconnect,F.goOffline,F.goOnline;export{p as P,wt as a,O as b,_ as o,ct as p,te as s,N as w};
